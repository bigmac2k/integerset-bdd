Index.PACKAGES = {"cc.sven.equivalences" : [{"name" : "cc.sven.equivalences.Either", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/Either.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/Either.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/Either.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/Either.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/Either.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/Either.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/Either.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Either.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Either.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Either.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/Either.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/Either.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/equivalences\/Either.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/Either.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/equivalences\/Either.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/equivalences\/Either.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/Either.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/Either.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/Either.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getRight", "tail" : "(): Right[A, B]", "member" : "cc.sven.equivalences.Either.getRight", "link" : "cc\/sven\/equivalences\/Either.html#getRight:cc.sven.equivalences.Right[A,B]", "kind" : "abstract def"}, {"label" : "getLeft", "tail" : "(): Left[A, B]", "member" : "cc.sven.equivalences.Either.getLeft", "link" : "cc\/sven\/equivalences\/Either.html#getLeft:cc.sven.equivalences.Left[A,B]", "kind" : "abstract def"}, {"label" : "isRight", "tail" : ": Boolean", "member" : "cc.sven.equivalences.Either.isRight", "link" : "cc\/sven\/equivalences\/Either.html#isRight:Boolean", "kind" : "abstract val"}, {"label" : "isLeft", "tail" : ": Boolean", "member" : "cc.sven.equivalences.Either.isLeft", "link" : "cc\/sven\/equivalences\/Either.html#isLeft:Boolean", "kind" : "abstract val"}], "shortDescription" : "Trait of Either objects.", "object" : "cc\/sven\/equivalences\/Either$.html", "members_object" : [{"label" : "Implicits", "tail" : "", "member" : "cc.sven.equivalences.Either.Implicits", "link" : "cc\/sven\/equivalences\/Either$.html#Implicits", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/Either$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/Either$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/Either$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/Either$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/Either$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/Either$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/Either$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Either$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Either$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Either$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/Either$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/Either$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/equivalences\/Either$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/Either$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/equivalences\/Either$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/equivalences\/Either$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/Either$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/Either$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/Either$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cc\/sven\/equivalences\/Either.html", "kind" : "trait"}, {"name" : "cc.sven.equivalences.EitherTupleSList", "shortDescription" : "Created by scm on 04.02.16.", "members_class" : [{"label" : "iterator", "tail" : "(): Iterator[(Either[(A, B), C], Either[(A, B), C])]", "member" : "cc.sven.equivalences.EitherTupleSList.iterator", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#iterator():Iterator[(cc.sven.equivalences.Either[(A,B),C],cc.sven.equivalences.Either[(A,B),C])]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "cc.sven.equivalences.EitherTupleSList.toString", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#toString():String", "kind" : "def"}, {"label" : "lookup", "tail" : "(a: Either[(A, B), C]): List[Either[(A, B), C]]", "member" : "cc.sven.equivalences.EitherTupleSList.lookup", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#lookup(a:cc.sven.equivalences.Either[(A,B),C]):List[cc.sven.equivalences.Either[(A,B),C]]", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: EitherTupleSList[A, B, C]): EitherTupleSList[A, B, C]", "member" : "cc.sven.equivalences.EitherTupleSList.intersect", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#intersect(that:cc.sven.equivalences.EitherTupleSList[A,B,C]):cc.sven.equivalences.EitherTupleSList[A,B,C]", "kind" : "def"}, {"label" : "union", "tail" : "(that: EitherTupleSList[A, B, C]): EitherTupleSList[A, B, C]", "member" : "cc.sven.equivalences.EitherTupleSList.union", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#union(that:cc.sven.equivalences.EitherTupleSList[A,B,C]):cc.sven.equivalences.EitherTupleSList[A,B,C]", "kind" : "def"}, {"label" : "removeRight", "tail" : "(c: C): EitherTupleSList[A, B, C]", "member" : "cc.sven.equivalences.EitherTupleSList.removeRight", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#removeRight(c:C):cc.sven.equivalences.EitherTupleSList[A,B,C]", "kind" : "def"}, {"label" : "removeLeftRange", "tail" : "(alo: A, ahi: A, blo: B, bhi: B): EitherTupleSList[A, B, C]", "member" : "cc.sven.equivalences.EitherTupleSList.removeLeftRange", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#removeLeftRange(alo:A,ahi:A,blo:B,bhi:B):cc.sven.equivalences.EitherTupleSList[A,B,C]", "kind" : "def"}, {"label" : "removeLeft", "tail" : "(a: A, b: B): EitherTupleSList[A, B, C]", "member" : "cc.sven.equivalences.EitherTupleSList.removeLeft", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#removeLeft(a:A,b:B):cc.sven.equivalences.EitherTupleSList[A,B,C]", "kind" : "def"}, {"label" : "removeLeftRight", "tail" : "(b: B): EitherTupleSList[A, B, C]", "member" : "cc.sven.equivalences.EitherTupleSList.removeLeftRight", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#removeLeftRight(b:B):cc.sven.equivalences.EitherTupleSList[A,B,C]", "kind" : "def"}, {"label" : "removeLeftLeft", "tail" : "(a: A): EitherTupleSList[A, B, C]", "member" : "cc.sven.equivalences.EitherTupleSList.removeLeftLeft", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#removeLeftLeft(a:A):cc.sven.equivalences.EitherTupleSList[A,B,C]", "kind" : "def"}, {"label" : "removeRights", "tail" : "(): EitherTupleSList[A, B, C]", "member" : "cc.sven.equivalences.EitherTupleSList.removeRights", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#removeRights():cc.sven.equivalences.EitherTupleSList[A,B,C]", "kind" : "def"}, {"label" : "removeLefts", "tail" : "(): EitherTupleSList[A, B, C]", "member" : "cc.sven.equivalences.EitherTupleSList.removeLefts", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#removeLefts():cc.sven.equivalences.EitherTupleSList[A,B,C]", "kind" : "def"}, {"label" : "remove", "tail" : "(a: Either[(A, B), C]): EitherTupleSList[A, B, C]", "member" : "cc.sven.equivalences.EitherTupleSList.remove", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#remove(a:cc.sven.equivalences.Either[(A,B),C]):cc.sven.equivalences.EitherTupleSList[A,B,C]", "kind" : "def"}, {"label" : "insert", "tail" : "(a: Either[(A, B), C], b: Either[(A, B), C]): EitherTupleSList[A, B, C]", "member" : "cc.sven.equivalences.EitherTupleSList.insert", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#insert(a:cc.sven.equivalences.Either[(A,B),C],b:cc.sven.equivalences.Either[(A,B),C]):cc.sven.equivalences.EitherTupleSList[A,B,C]", "kind" : "def"}, {"member" : "cc.sven.equivalences.EitherTupleSList#<init>", "error" : "unsupported entity"}, {"member" : "cc.sven.equivalences.EitherTupleSList#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/EitherTupleSList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/equivalences\/EitherTupleSList.html", "kind" : "class"}, {"name" : "cc.sven.equivalences.Equivalences", "shortDescription" : "Created by scm on 10.02.16.", "object" : "cc\/sven\/equivalences\/Equivalences$.html", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "cc\/sven\/equivalences\/Equivalences.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "toString", "tail" : "(): String", "member" : "cc.sven.equivalences.Equivalences.toString", "link" : "cc\/sven\/equivalences\/Equivalences.html#toString():String", "kind" : "def"}, {"label" : "javaIterator", "tail" : "(): Iterator[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "cc.sven.equivalences.Equivalences.javaIterator", "link" : "cc\/sven\/equivalences\/Equivalences.html#javaIterator:java.util.Iterator[(cc.sven.equivalences.StorageEntity[R,A,V],cc.sven.equivalences.StorageEntity[R,A,V])]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "cc.sven.equivalences.Equivalences.iterator", "link" : "cc\/sven\/equivalences\/Equivalences.html#iterator:Iterator[(cc.sven.equivalences.StorageEntity[R,A,V],cc.sven.equivalences.StorageEntity[R,A,V])]", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: Equivalences[R, A, V]): Equivalences[R, A, V]", "member" : "cc.sven.equivalences.Equivalences.intersect", "link" : "cc\/sven\/equivalences\/Equivalences.html#intersect(that:cc.sven.equivalences.Equivalences[R,A,V]):cc.sven.equivalences.Equivalences[R,A,V]", "kind" : "def"}, {"label" : "union", "tail" : "(that: Equivalences[R, A, V]): Equivalences[R, A, V]", "member" : "cc.sven.equivalences.Equivalences.union", "link" : "cc\/sven\/equivalences\/Equivalences.html#union(that:cc.sven.equivalences.Equivalences[R,A,V]):cc.sven.equivalences.Equivalences[R,A,V]", "kind" : "def"}, {"label" : "lookupJava", "tail" : "(storage: StorageEntity[R, A, V]): List[StorageEntity[R, A, V]]", "member" : "cc.sven.equivalences.Equivalences.lookupJava", "link" : "cc\/sven\/equivalences\/Equivalences.html#lookupJava(storage:cc.sven.equivalences.StorageEntity[R,A,V]):java.util.List[cc.sven.equivalences.StorageEntity[R,A,V]]", "kind" : "def"}, {"label" : "lookup", "tail" : "(storage: StorageEntity[R, A, V]): List[StorageEntity[R, A, V]]", "member" : "cc.sven.equivalences.Equivalences.lookup", "link" : "cc\/sven\/equivalences\/Equivalences.html#lookup(storage:cc.sven.equivalences.StorageEntity[R,A,V]):List[cc.sven.equivalences.StorageEntity[R,A,V]]", "kind" : "def"}, {"label" : "removeAllMemLocs", "tail" : "(): Equivalences[R, A, V]", "member" : "cc.sven.equivalences.Equivalences.removeAllMemLocs", "link" : "cc\/sven\/equivalences\/Equivalences.html#removeAllMemLocs():cc.sven.equivalences.Equivalences[R,A,V]", "kind" : "def"}, {"label" : "remove", "tail" : "(storage: StorageEntity[R, A, V]): Equivalences[R, A, V]", "member" : "cc.sven.equivalences.Equivalences.remove", "link" : "cc\/sven\/equivalences\/Equivalences.html#remove(storage:cc.sven.equivalences.StorageEntity[R,A,V]):cc.sven.equivalences.Equivalences[R,A,V]", "kind" : "def"}, {"label" : "insert", "tail" : "(storageA: StorageEntity[R, A, V], storageB: StorageEntity[R, A, V]): Equivalences[R, A, V]", "member" : "cc.sven.equivalences.Equivalences.insert", "link" : "cc\/sven\/equivalences\/Equivalences.html#insert(storageA:cc.sven.equivalences.StorageEntity[R,A,V],storageB:cc.sven.equivalences.StorageEntity[R,A,V]):cc.sven.equivalences.Equivalences[R,A,V]", "kind" : "def"}, {"member" : "cc.sven.equivalences.Equivalences#<init>", "error" : "unsupported entity"}, {"member" : "cc.sven.equivalences.Equivalences#<init>", "error" : "unsupported entity"}, {"label" : "seq", "tail" : "(): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.Iterable.seq", "link" : "cc\/sven\/equivalences\/Equivalences.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "cc\/sven\/equivalences\/Equivalences.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[(StorageEntity[R, A, V], StorageEntity[R, A, V]), Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]]", "member" : "scala.collection.IterableLike.view", "link" : "cc\/sven\/equivalences\/Equivalences.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[(StorageEntity[R, A, V], StorageEntity[R, A, V]), Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]]", "member" : "scala.collection.IterableLike.view", "link" : "cc\/sven\/equivalences\/Equivalences.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "cc\/sven\/equivalences\/Equivalences.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.IterableLike.toStream", "link" : "cc\/sven\/equivalences\/Equivalences.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "cc\/sven\/equivalences\/Equivalences.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "cc\/sven\/equivalences\/Equivalences.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "cc\/sven\/equivalences\/Equivalences.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "cc\/sven\/equivalences\/Equivalences.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "cc\/sven\/equivalences\/Equivalences.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.IterableLike.dropRight", "link" : "cc\/sven\/equivalences\/Equivalences.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.IterableLike.takeRight", "link" : "cc\/sven\/equivalences\/Equivalences.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]]", "member" : "scala.collection.IterableLike.sliding", "link" : "cc\/sven\/equivalences\/Equivalences.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]]", "member" : "scala.collection.IterableLike.sliding", "link" : "cc\/sven\/equivalences\/Equivalences.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]]", "member" : "scala.collection.IterableLike.grouped", "link" : "cc\/sven\/equivalences\/Equivalences.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ Boolean): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "cc\/sven\/equivalences\/Equivalences.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.IterableLike.drop", "link" : "cc\/sven\/equivalences\/Equivalences.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.IterableLike.take", "link" : "cc\/sven\/equivalences\/Equivalences.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.IterableLike.slice", "link" : "cc\/sven\/equivalences\/Equivalences.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): (StorageEntity[R, A, V], StorageEntity[R, A, V])", "member" : "scala.collection.IterableLike.head", "link" : "cc\/sven\/equivalences\/Equivalences.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.IterableLike.toIterator", "link" : "cc\/sven\/equivalences\/Equivalences.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.IterableLike.toIterable", "link" : "cc\/sven\/equivalences\/Equivalences.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: ((StorageEntity[R, A, V], StorageEntity[R, A, V]), B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "cc\/sven\/equivalences\/Equivalences.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: ((StorageEntity[R, A, V], StorageEntity[R, A, V]), B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "cc\/sven\/equivalences\/Equivalences.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "cc\/sven\/equivalences\/Equivalences.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ Boolean): Option[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.IterableLike.find", "link" : "cc\/sven\/equivalences\/Equivalences.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "cc\/sven\/equivalences\/Equivalences.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "cc\/sven\/equivalences\/Equivalences.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "cc\/sven\/equivalences\/Equivalences.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.IterableLike.toCollection", "link" : "cc\/sven\/equivalences\/Equivalences.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "cc\/sven\/equivalences\/Equivalences.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "cc\/sven\/equivalences\/Equivalences.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "cc\/sven\/equivalences\/Equivalences.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "cc\/sven\/equivalences\/Equivalences.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "cc\/sven\/equivalences\/Equivalences.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "cc\/sven\/equivalences\/Equivalences.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[(StorageEntity[R, A, V], StorageEntity[R, A, V]), Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "cc\/sven\/equivalences\/Equivalences.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ Boolean): FilterMonadic[(StorageEntity[R, A, V], StorageEntity[R, A, V]), Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "cc\/sven\/equivalences\/Equivalences.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "cc\/sven\/equivalences\/Equivalences.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, (StorageEntity[R, A, V], StorageEntity[R, A, V]), Col[(StorageEntity[R, A, V], StorageEntity[R, A, V])]]): Col[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableLike.to", "link" : "cc\/sven\/equivalences\/Equivalences.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "cc\/sven\/equivalences\/Equivalences.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]]", "member" : "scala.collection.TraversableLike.inits", "link" : "cc\/sven\/equivalences\/Equivalences.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]]", "member" : "scala.collection.TraversableLike.tails", "link" : "cc\/sven\/equivalences\/Equivalences.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "cc\/sven\/equivalences\/Equivalences.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ Boolean): (Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])])", "member" : "scala.collection.TraversableLike.span", "link" : "cc\/sven\/equivalences\/Equivalences.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ Boolean): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "cc\/sven\/equivalences\/Equivalences.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableLike.init", "link" : "cc\/sven\/equivalences\/Equivalences.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "cc\/sven\/equivalences\/Equivalences.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): (StorageEntity[R, A, V], StorageEntity[R, A, V])", "member" : "scala.collection.TraversableLike.last", "link" : "cc\/sven\/equivalences\/Equivalences.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableLike.tail", "link" : "cc\/sven\/equivalences\/Equivalences.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableLike.headOption", "link" : "cc\/sven\/equivalences\/Equivalences.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: ((StorageEntity[R, A, V], StorageEntity[R, A, V]), B) ⇒ B)(bf: CanBuildFrom[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "cc\/sven\/equivalences\/Equivalences.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, (StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ B)(bf: CanBuildFrom[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "cc\/sven\/equivalences\/Equivalences.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "cc\/sven\/equivalences\/Equivalences.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ K): Map[K, Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "cc\/sven\/equivalences\/Equivalences.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ Boolean): (Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])])", "member" : "scala.collection.TraversableLike.partition", "link" : "cc\/sven\/equivalences\/Equivalences.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(StorageEntity[R, A, V], StorageEntity[R, A, V]), B])(bf: CanBuildFrom[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "cc\/sven\/equivalences\/Equivalences.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ Boolean): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "cc\/sven\/equivalences\/Equivalences.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ Boolean): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableLike.filter", "link" : "cc\/sven\/equivalences\/Equivalences.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "cc\/sven\/equivalences\/Equivalences.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ B)(bf: CanBuildFrom[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "cc\/sven\/equivalences\/Equivalences.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "cc\/sven\/equivalences\/Equivalences.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "cc\/sven\/equivalences\/Equivalences.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "cc\/sven\/equivalences\/Equivalences.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "cc\/sven\/equivalences\/Equivalences.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[(StorageEntity[R, A, V], StorageEntity[R, A, V]), ParIterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "cc\/sven\/equivalences\/Equivalences.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "cc\/sven\/equivalences\/Equivalences.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableLike.repr", "link" : "cc\/sven\/equivalences\/Equivalences.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "cc\/sven\/equivalences\/Equivalences.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.Parallelizable.par", "link" : "cc\/sven\/equivalences\/Equivalences.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/equivalences\/Equivalences.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/equivalences\/Equivalences.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/equivalences\/Equivalences.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/equivalences\/Equivalences.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/equivalences\/Equivalences.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/equivalences\/Equivalences.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[(StorageEntity[R, A, V], StorageEntity[R, A, V]), (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "cc\/sven\/equivalences\/Equivalences.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "cc\/sven\/equivalences\/Equivalences.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "cc\/sven\/equivalences\/Equivalences.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "cc\/sven\/equivalences\/Equivalences.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "cc\/sven\/equivalences\/Equivalences.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "cc\/sven\/equivalences\/Equivalences.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableOnce.toList", "link" : "cc\/sven\/equivalences\/Equivalences.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "cc\/sven\/equivalences\/Equivalences.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/equivalences\/Equivalences.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/equivalences\/Equivalences.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "cc\/sven\/equivalences\/Equivalences.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ B)(cmp: Ordering[B]): (StorageEntity[R, A, V], StorageEntity[R, A, V])", "member" : "scala.collection.TraversableOnce.minBy", "link" : "cc\/sven\/equivalences\/Equivalences.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ B)(cmp: Ordering[B]): (StorageEntity[R, A, V], StorageEntity[R, A, V])", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "cc\/sven\/equivalences\/Equivalences.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): (StorageEntity[R, A, V], StorageEntity[R, A, V])", "member" : "scala.collection.TraversableOnce.max", "link" : "cc\/sven\/equivalences\/Equivalences.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): (StorageEntity[R, A, V], StorageEntity[R, A, V])", "member" : "scala.collection.TraversableOnce.min", "link" : "cc\/sven\/equivalences\/Equivalences.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "cc\/sven\/equivalences\/Equivalences.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "cc\/sven\/equivalences\/Equivalences.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, (StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "cc\/sven\/equivalences\/Equivalences.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "cc\/sven\/equivalences\/Equivalences.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "cc\/sven\/equivalences\/Equivalences.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "cc\/sven\/equivalences\/Equivalences.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: ((StorageEntity[R, A, V], StorageEntity[R, A, V]), B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "cc\/sven\/equivalences\/Equivalences.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, (StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "cc\/sven\/equivalences\/Equivalences.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, (StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "cc\/sven\/equivalences\/Equivalences.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, (StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "cc\/sven\/equivalences\/Equivalences.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: ((StorageEntity[R, A, V], StorageEntity[R, A, V]), B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "cc\/sven\/equivalences\/Equivalences.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, (StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "cc\/sven\/equivalences\/Equivalences.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[(StorageEntity[R, A, V], StorageEntity[R, A, V]), B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "cc\/sven\/equivalences\/Equivalences.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: ((StorageEntity[R, A, V], StorageEntity[R, A, V])) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "cc\/sven\/equivalences\/Equivalences.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "cc\/sven\/equivalences\/Equivalences.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "cc\/sven\/equivalences\/Equivalences.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[(StorageEntity[R, A, V], StorageEntity[R, A, V])]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "cc\/sven\/equivalences\/Equivalences.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "cc\/sven\/equivalences\/Equivalences.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/Equivalences.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/Equivalences.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/Equivalences.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/Equivalences.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/Equivalences.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/Equivalences.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/Equivalences.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Equivalences.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Equivalences.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Equivalences.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/Equivalences.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/Equivalences.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/Equivalences.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/equivalences\/Equivalences.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/equivalences\/Equivalences.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/Equivalences.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/Equivalences.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/Equivalences.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "applyJ", "tail" : "(arg0: Ordering[R], arg1: Ordering[A], arg2: DynBoundedBits[A], arg3: Ordering[V], castALongJ: Castable[A, Pair[Integer, Long]]): Equivalences[R, A, V]", "member" : "cc.sven.equivalences.Equivalences.applyJ", "link" : "cc\/sven\/equivalences\/Equivalences$.html#applyJ[R,A,V](implicitevidence$18:Ordering[R],implicitevidence$19:Ordering[A],implicitevidence$20:cc.sven.bounded.DynBoundedBits[A],implicitevidence$21:Ordering[V],implicitcastALongJ:cc.sven.tlike.Castable[A,cc.sven.misc.Pair[Integer,Long]]):cc.sven.equivalences.Equivalences[R,A,V]", "kind" : "def"}, {"label" : "apply", "tail" : "()(arg0: Ordering[R], arg1: Ordering[A], arg2: DynBoundedBits[A], arg3: Ordering[V], castALong: Castable[A, (Int, Long)]): Equivalences[R, A, V]", "member" : "cc.sven.equivalences.Equivalences.apply", "link" : "cc\/sven\/equivalences\/Equivalences$.html#apply[R,A,V]()(implicitevidence$14:Ordering[R],implicitevidence$15:Ordering[A],implicitevidence$16:cc.sven.bounded.DynBoundedBits[A],implicitevidence$17:Ordering[V],implicitcastALong:cc.sven.tlike.Castable[A,(Int,Long)]):cc.sven.equivalences.Equivalences[R,A,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(xs: (StorageEntity[R, A, V], StorageEntity[R, A, V])*)(arg0: Ordering[R], arg1: Ordering[A], arg2: DynBoundedBits[A], arg3: Ordering[V], castALong: Castable[A, (Int, Long)]): Equivalences[R, A, V]", "member" : "cc.sven.equivalences.Equivalences.apply", "link" : "cc\/sven\/equivalences\/Equivalences$.html#apply[R,A,V](xs:(cc.sven.equivalences.StorageEntity[R,A,V],cc.sven.equivalences.StorageEntity[R,A,V])*)(implicitevidence$10:Ordering[R],implicitevidence$11:Ordering[A],implicitevidence$12:cc.sven.bounded.DynBoundedBits[A],implicitevidence$13:Ordering[V],implicitcastALong:cc.sven.tlike.Castable[A,(Int,Long)]):cc.sven.equivalences.Equivalences[R,A,V]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/Equivalences$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/Equivalences$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/Equivalences$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/Equivalences$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/Equivalences$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/Equivalences$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/Equivalences$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Equivalences$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Equivalences$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Equivalences$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/Equivalences$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/Equivalences$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/equivalences\/Equivalences$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/Equivalences$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/equivalences\/Equivalences$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/equivalences\/Equivalences$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/Equivalences$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/Equivalences$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/Equivalences$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/equivalences\/Equivalences.html", "kind" : "class"}, {"name" : "cc.sven.equivalences.Left", "shortDescription" : "Class for left elements of Either.", "members_case class" : [{"label" : "getRight", "tail" : "(): Null", "member" : "cc.sven.equivalences.Left.getRight", "link" : "cc\/sven\/equivalences\/Left.html#getRight:Null", "kind" : "def"}, {"label" : "getLeft", "tail" : "(): Left[A, B]", "member" : "cc.sven.equivalences.Left.getLeft", "link" : "cc\/sven\/equivalences\/Left.html#getLeft:cc.sven.equivalences.Left[A,B]", "kind" : "def"}, {"label" : "isRight", "tail" : ": Boolean", "member" : "cc.sven.equivalences.Left.isRight", "link" : "cc\/sven\/equivalences\/Left.html#isRight:Boolean", "kind" : "val"}, {"label" : "isLeft", "tail" : ": Boolean", "member" : "cc.sven.equivalences.Left.isLeft", "link" : "cc\/sven\/equivalences\/Left.html#isLeft:Boolean", "kind" : "val"}, {"member" : "cc.sven.equivalences.Left#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "cc.sven.equivalences.Left.a", "link" : "cc\/sven\/equivalences\/Left.html#a:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/Left.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/Left.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/Left.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/Left.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/Left.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/Left.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/Left.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Left.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Left.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Left.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/Left.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/Left.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/Left.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/Left.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/Left.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/Left.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/equivalences\/Left.html", "kind" : "case class"}, {"name" : "cc.sven.equivalences.MemLoc", "shortDescription" : "", "members_case class" : [{"label" : "overlapsWith", "tail" : "(that: StorageEntity[R, A, V]): Boolean", "member" : "cc.sven.equivalences.MemLoc.overlapsWith", "link" : "cc\/sven\/equivalences\/MemLoc.html#overlapsWith(that:cc.sven.equivalences.StorageEntity[R,A,V]):Boolean", "kind" : "def"}, {"label" : "aDynBoundedBits", "tail" : ": DynBoundedBits[A]", "member" : "cc.sven.equivalences.MemLoc.aDynBoundedBits", "link" : "cc\/sven\/equivalences\/MemLoc.html#aDynBoundedBits:cc.sven.bounded.DynBoundedBits[A]", "kind" : "val"}, {"member" : "cc.sven.equivalences.MemLoc#<init>", "error" : "unsupported entity"}, {"label" : "address", "tail" : ": A", "member" : "cc.sven.equivalences.MemLoc.address", "link" : "cc\/sven\/equivalences\/MemLoc.html#address:A", "kind" : "val"}, {"label" : "region", "tail" : ": R", "member" : "cc.sven.equivalences.MemLoc.region", "link" : "cc\/sven\/equivalences\/MemLoc.html#region:R", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/MemLoc.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/MemLoc.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/MemLoc.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/MemLoc.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/MemLoc.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/MemLoc.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/MemLoc.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/MemLoc.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/MemLoc.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/MemLoc.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/MemLoc.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/MemLoc.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/MemLoc.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/MemLoc.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/MemLoc.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/MemLoc.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/equivalences\/MemLoc.html", "kind" : "case class"}, {"name" : "cc.sven.equivalences.Right", "shortDescription" : "Class for right elements of Either.", "members_case class" : [{"label" : "getRight", "tail" : "(): Right[A, B]", "member" : "cc.sven.equivalences.Right.getRight", "link" : "cc\/sven\/equivalences\/Right.html#getRight:cc.sven.equivalences.Right[A,B]", "kind" : "def"}, {"label" : "getLeft", "tail" : "(): Null", "member" : "cc.sven.equivalences.Right.getLeft", "link" : "cc\/sven\/equivalences\/Right.html#getLeft:Null", "kind" : "def"}, {"label" : "isRight", "tail" : ": Boolean", "member" : "cc.sven.equivalences.Right.isRight", "link" : "cc\/sven\/equivalences\/Right.html#isRight:Boolean", "kind" : "val"}, {"label" : "isLeft", "tail" : ": Boolean", "member" : "cc.sven.equivalences.Right.isLeft", "link" : "cc\/sven\/equivalences\/Right.html#isLeft:Boolean", "kind" : "val"}, {"member" : "cc.sven.equivalences.Right#<init>", "error" : "unsupported entity"}, {"label" : "b", "tail" : ": B", "member" : "cc.sven.equivalences.Right.b", "link" : "cc\/sven\/equivalences\/Right.html#b:B", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/Right.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/Right.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/Right.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/Right.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/Right.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/Right.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/Right.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Right.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Right.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Right.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/Right.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/Right.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/Right.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/Right.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/Right.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/Right.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/equivalences\/Right.html", "kind" : "case class"}, {"name" : "cc.sven.equivalences.SList", "shortDescription" : "Created by scm on 02.02.16.", "object" : "cc\/sven\/equivalences\/SList$.html", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "cc\/sven\/equivalences\/SList.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): Iterator[(E, E)]", "member" : "cc.sven.equivalences.SList.iterator", "link" : "cc\/sven\/equivalences\/SList.html#iterator():Iterator[(E,E)]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "cc.sven.equivalences.SList.toString", "link" : "cc\/sven\/equivalences\/SList.html#toString():String", "kind" : "def"}, {"label" : "lookup", "tail" : "(key: E): List[E]", "member" : "cc.sven.equivalences.SList.lookup", "link" : "cc\/sven\/equivalences\/SList.html#lookup(key:E):List[E]", "kind" : "def"}, {"label" : "intersect", "tail" : "(other: SList[E]): SList[E]", "member" : "cc.sven.equivalences.SList.intersect", "link" : "cc\/sven\/equivalences\/SList.html#intersect(other:cc.sven.equivalences.SList[E]):cc.sven.equivalences.SList[E]", "kind" : "def"}, {"label" : "union", "tail" : "(other: SList[E]): SList[E]", "member" : "cc.sven.equivalences.SList.union", "link" : "cc\/sven\/equivalences\/SList.html#union(other:cc.sven.equivalences.SList[E]):cc.sven.equivalences.SList[E]", "kind" : "def"}, {"label" : "remove", "tail" : "(e: E): SList[E]", "member" : "cc.sven.equivalences.SList.remove", "link" : "cc\/sven\/equivalences\/SList.html#remove(e:E):cc.sven.equivalences.SList[E]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (E) ⇒ Boolean): SList[E]", "member" : "cc.sven.equivalences.SList.filter", "link" : "cc\/sven\/equivalences\/SList.html#filter(f:E=>Boolean):cc.sven.equivalences.SList[E]", "kind" : "def"}, {"label" : "insert", "tail" : "(a: E, b: E): SList[E]", "member" : "cc.sven.equivalences.SList.insert", "link" : "cc\/sven\/equivalences\/SList.html#insert(a:E,b:E):cc.sven.equivalences.SList[E]", "kind" : "def"}, {"member" : "cc.sven.equivalences.SList#<init>", "error" : "unsupported entity"}, {"label" : "seq", "tail" : "(): Iterable[(E, E)]", "member" : "scala.collection.Iterable.seq", "link" : "cc\/sven\/equivalences\/SList.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "cc\/sven\/equivalences\/SList.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[(E, E), Iterable[(E, E)]]", "member" : "scala.collection.IterableLike.view", "link" : "cc\/sven\/equivalences\/SList.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[(E, E), Iterable[(E, E)]]", "member" : "scala.collection.IterableLike.view", "link" : "cc\/sven\/equivalences\/SList.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "cc\/sven\/equivalences\/SList.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[(E, E)]", "member" : "scala.collection.IterableLike.toStream", "link" : "cc\/sven\/equivalences\/SList.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "cc\/sven\/equivalences\/SList.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[(E, E)], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "cc\/sven\/equivalences\/SList.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[(E, E)], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "cc\/sven\/equivalences\/SList.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[(E, E)], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "cc\/sven\/equivalences\/SList.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "cc\/sven\/equivalences\/SList.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[(E, E)]", "member" : "scala.collection.IterableLike.dropRight", "link" : "cc\/sven\/equivalences\/SList.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[(E, E)]", "member" : "scala.collection.IterableLike.takeRight", "link" : "cc\/sven\/equivalences\/SList.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[(E, E)]]", "member" : "scala.collection.IterableLike.sliding", "link" : "cc\/sven\/equivalences\/SList.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[(E, E)]]", "member" : "scala.collection.IterableLike.sliding", "link" : "cc\/sven\/equivalences\/SList.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[(E, E)]]", "member" : "scala.collection.IterableLike.grouped", "link" : "cc\/sven\/equivalences\/SList.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: ((E, E)) ⇒ Boolean): Iterable[(E, E)]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "cc\/sven\/equivalences\/SList.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[(E, E)]", "member" : "scala.collection.IterableLike.drop", "link" : "cc\/sven\/equivalences\/SList.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[(E, E)]", "member" : "scala.collection.IterableLike.take", "link" : "cc\/sven\/equivalences\/SList.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[(E, E)]", "member" : "scala.collection.IterableLike.slice", "link" : "cc\/sven\/equivalences\/SList.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): (E, E)", "member" : "scala.collection.IterableLike.head", "link" : "cc\/sven\/equivalences\/SList.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[(E, E)]", "member" : "scala.collection.IterableLike.toIterator", "link" : "cc\/sven\/equivalences\/SList.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[(E, E)]", "member" : "scala.collection.IterableLike.toIterable", "link" : "cc\/sven\/equivalences\/SList.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: ((E, E), B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "cc\/sven\/equivalences\/SList.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: ((E, E), B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "cc\/sven\/equivalences\/SList.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "cc\/sven\/equivalences\/SList.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: ((E, E)) ⇒ Boolean): Option[(E, E)]", "member" : "scala.collection.IterableLike.find", "link" : "cc\/sven\/equivalences\/SList.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: ((E, E)) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "cc\/sven\/equivalences\/SList.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: ((E, E)) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "cc\/sven\/equivalences\/SList.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: ((E, E)) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "cc\/sven\/equivalences\/SList.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[(E, E)]): Iterable[(E, E)]", "member" : "scala.collection.IterableLike.toCollection", "link" : "cc\/sven\/equivalences\/SList.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[(E, E)]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "cc\/sven\/equivalences\/SList.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: ((E, E)) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "cc\/sven\/equivalences\/SList.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: ((E, E)) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "cc\/sven\/equivalences\/SList.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: ((E, E)) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "cc\/sven\/equivalences\/SList.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: ((E, E)) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "cc\/sven\/equivalences\/SList.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "cc\/sven\/equivalences\/SList.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[(E, E), Iterable[(E, E)]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "cc\/sven\/equivalences\/SList.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: ((E, E)) ⇒ Boolean): FilterMonadic[(E, E), Iterable[(E, E)]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "cc\/sven\/equivalences\/SList.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "cc\/sven\/equivalences\/SList.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, (E, E), Col[(E, E)]]): Col[(E, E)]", "member" : "scala.collection.TraversableLike.to", "link" : "cc\/sven\/equivalences\/SList.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[(E, E)]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "cc\/sven\/equivalences\/SList.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[(E, E)]]", "member" : "scala.collection.TraversableLike.inits", "link" : "cc\/sven\/equivalences\/SList.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[(E, E)]]", "member" : "scala.collection.TraversableLike.tails", "link" : "cc\/sven\/equivalences\/SList.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[(E, E)], Iterable[(E, E)])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "cc\/sven\/equivalences\/SList.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: ((E, E)) ⇒ Boolean): (Iterable[(E, E)], Iterable[(E, E)])", "member" : "scala.collection.TraversableLike.span", "link" : "cc\/sven\/equivalences\/SList.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: ((E, E)) ⇒ Boolean): Iterable[(E, E)]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "cc\/sven\/equivalences\/SList.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[(E, E)]", "member" : "scala.collection.TraversableLike.init", "link" : "cc\/sven\/equivalences\/SList.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[(E, E)]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "cc\/sven\/equivalences\/SList.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): (E, E)", "member" : "scala.collection.TraversableLike.last", "link" : "cc\/sven\/equivalences\/SList.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[(E, E)]", "member" : "scala.collection.TraversableLike.tail", "link" : "cc\/sven\/equivalences\/SList.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[(E, E)]", "member" : "scala.collection.TraversableLike.headOption", "link" : "cc\/sven\/equivalences\/SList.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: ((E, E), B) ⇒ B)(bf: CanBuildFrom[Iterable[(E, E)], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "cc\/sven\/equivalences\/SList.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, (E, E)) ⇒ B)(bf: CanBuildFrom[Iterable[(E, E)], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "cc\/sven\/equivalences\/SList.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[(E, E)], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "cc\/sven\/equivalences\/SList.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: ((E, E)) ⇒ K): Map[K, Iterable[(E, E)]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "cc\/sven\/equivalences\/SList.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: ((E, E)) ⇒ Boolean): (Iterable[(E, E)], Iterable[(E, E)])", "member" : "scala.collection.TraversableLike.partition", "link" : "cc\/sven\/equivalences\/SList.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(E, E), B])(bf: CanBuildFrom[Iterable[(E, E)], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "cc\/sven\/equivalences\/SList.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: ((E, E)) ⇒ Boolean): Iterable[(E, E)]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "cc\/sven\/equivalences\/SList.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: ((E, E)) ⇒ Boolean): Iterable[(E, E)]", "member" : "scala.collection.TraversableLike.filter", "link" : "cc\/sven\/equivalences\/SList.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((E, E)) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[(E, E)], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "cc\/sven\/equivalences\/SList.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((E, E)) ⇒ B)(bf: CanBuildFrom[Iterable[(E, E)], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "cc\/sven\/equivalences\/SList.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[(E, E)], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "cc\/sven\/equivalences\/SList.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[(E, E)], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "cc\/sven\/equivalences\/SList.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[(E, E)], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "cc\/sven\/equivalences\/SList.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "cc\/sven\/equivalences\/SList.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[(E, E), ParIterable[(E, E)]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "cc\/sven\/equivalences\/SList.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "cc\/sven\/equivalences\/SList.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[(E, E)]", "member" : "scala.collection.TraversableLike.repr", "link" : "cc\/sven\/equivalences\/SList.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "cc\/sven\/equivalences\/SList.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[(E, E)]", "member" : "scala.collection.Parallelizable.par", "link" : "cc\/sven\/equivalences\/SList.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/equivalences\/SList.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/equivalences\/SList.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/equivalences\/SList.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/equivalences\/SList.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/equivalences\/SList.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/equivalences\/SList.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[(E, E), (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "cc\/sven\/equivalences\/SList.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[(E, E)]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "cc\/sven\/equivalences\/SList.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "cc\/sven\/equivalences\/SList.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "cc\/sven\/equivalences\/SList.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[(E, E)]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "cc\/sven\/equivalences\/SList.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[(E, E)]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "cc\/sven\/equivalences\/SList.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[(E, E)]", "member" : "scala.collection.TraversableOnce.toList", "link" : "cc\/sven\/equivalences\/SList.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "cc\/sven\/equivalences\/SList.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/equivalences\/SList.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/equivalences\/SList.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "cc\/sven\/equivalences\/SList.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: ((E, E)) ⇒ B)(cmp: Ordering[B]): (E, E)", "member" : "scala.collection.TraversableOnce.minBy", "link" : "cc\/sven\/equivalences\/SList.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: ((E, E)) ⇒ B)(cmp: Ordering[B]): (E, E)", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "cc\/sven\/equivalences\/SList.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): (E, E)", "member" : "scala.collection.TraversableOnce.max", "link" : "cc\/sven\/equivalences\/SList.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): (E, E)", "member" : "scala.collection.TraversableOnce.min", "link" : "cc\/sven\/equivalences\/SList.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "cc\/sven\/equivalences\/SList.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "cc\/sven\/equivalences\/SList.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, (E, E)) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "cc\/sven\/equivalences\/SList.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "cc\/sven\/equivalences\/SList.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "cc\/sven\/equivalences\/SList.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "cc\/sven\/equivalences\/SList.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: ((E, E), B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "cc\/sven\/equivalences\/SList.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, (E, E)) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "cc\/sven\/equivalences\/SList.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, (E, E)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "cc\/sven\/equivalences\/SList.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, (E, E)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "cc\/sven\/equivalences\/SList.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: ((E, E), B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "cc\/sven\/equivalences\/SList.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, (E, E)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "cc\/sven\/equivalences\/SList.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[(E, E), B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "cc\/sven\/equivalences\/SList.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: ((E, E)) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "cc\/sven\/equivalences\/SList.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "cc\/sven\/equivalences\/SList.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "cc\/sven\/equivalences\/SList.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[(E, E)]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "cc\/sven\/equivalences\/SList.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "cc\/sven\/equivalences\/SList.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/SList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/SList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/SList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/SList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/SList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/SList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/SList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/SList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/SList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/SList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/SList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/SList.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/SList.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/equivalences\/SList.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/equivalences\/SList.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/SList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/SList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/SList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(es: (E, E)*)(arg0: Ordering[E]): SList[E]", "member" : "cc.sven.equivalences.SList.apply", "link" : "cc\/sven\/equivalences\/SList$.html#apply[E](es:(E,E)*)(implicitevidence$4:Ordering[E]):cc.sven.equivalences.SList[E]", "kind" : "def"}, {"label" : "apply", "tail" : "(a: E, b: E)(arg0: Ordering[E]): SList[E]", "member" : "cc.sven.equivalences.SList.apply", "link" : "cc\/sven\/equivalences\/SList$.html#apply[E](a:E,b:E)(implicitevidence$3:Ordering[E]):cc.sven.equivalences.SList[E]", "kind" : "def"}, {"label" : "empty", "tail" : "(arg0: Ordering[E]): SList[E]", "member" : "cc.sven.equivalences.SList.empty", "link" : "cc\/sven\/equivalences\/SList$.html#empty[E](implicitevidence$2:Ordering[E]):cc.sven.equivalences.SList[E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/SList$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/SList$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/SList$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/SList$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/SList$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/SList$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/SList$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/SList$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/SList$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/SList$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/SList$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/SList$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/equivalences\/SList$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/SList$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/equivalences\/SList$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/equivalences\/SList$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/SList$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/SList$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/SList$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/equivalences\/SList.html", "kind" : "class"}, {"name" : "cc.sven.equivalences.StorageEntity", "shortDescription" : "Created by scm on 10.02.16.", "object" : "cc\/sven\/equivalences\/StorageEntity$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/StorageEntity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/StorageEntity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/StorageEntity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/StorageEntity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/StorageEntity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/StorageEntity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/StorageEntity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/StorageEntity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/StorageEntity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/StorageEntity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/StorageEntity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/StorageEntity.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/equivalences\/StorageEntity.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/StorageEntity.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/equivalences\/StorageEntity.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/equivalences\/StorageEntity.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/StorageEntity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/StorageEntity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/StorageEntity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "overlapsWith", "tail" : "(that: StorageEntity[R, A, V]): Boolean", "member" : "cc.sven.equivalences.StorageEntity.overlapsWith", "link" : "cc\/sven\/equivalences\/StorageEntity.html#overlapsWith(that:cc.sven.equivalences.StorageEntity[R,A,V]):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "Implicits", "tail" : "", "member" : "cc.sven.equivalences.StorageEntity.Implicits", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#Implicits", "kind" : "object"}, {"label" : "memLoc", "tail" : "(r: R, a: A)(arg0: Ordering[R], arg1: Ordering[A], arg2: DynBoundedBits[A], arg3: Ordering[V], castALongJ: Castable[A, Pair[Integer, Long]]): MemLoc[R, A, V]", "member" : "cc.sven.equivalences.StorageEntity.memLoc", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#memLoc[R,A,V](r:R,a:A)(implicitevidence$25:Ordering[R],implicitevidence$26:Ordering[A],implicitevidence$27:cc.sven.bounded.DynBoundedBits[A],implicitevidence$28:Ordering[V],implicitcastALongJ:cc.sven.tlike.Castable[A,cc.sven.misc.Pair[Integer,Long]]):cc.sven.equivalences.MemLoc[R,A,V]", "kind" : "def"}, {"label" : "variableJ", "tail" : "(v: V)(arg0: Ordering[R], arg1: Ordering[A], arg2: DynBoundedBits[A], arg3: Ordering[V], castALongJ: Castable[A, Pair[Integer, Long]]): Variable[R, A, V]", "member" : "cc.sven.equivalences.StorageEntity.variableJ", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#variableJ[R,A,V](v:V)(implicitevidence$21:Ordering[R],implicitevidence$22:Ordering[A],implicitevidence$23:cc.sven.bounded.DynBoundedBits[A],implicitevidence$24:Ordering[V],implicitcastALongJ:cc.sven.tlike.Castable[A,cc.sven.misc.Pair[Integer,Long]]):cc.sven.equivalences.Variable[R,A,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(v: V)(arg0: Ordering[R], arg1: Ordering[A], arg2: DynBoundedBits[A], arg3: Ordering[V], castALong: Castable[A, (Int, Long)]): Variable[R, A, V]", "member" : "cc.sven.equivalences.StorageEntity.apply", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#apply[R,A,V](v:V)(implicitevidence$17:Ordering[R],implicitevidence$18:Ordering[A],implicitevidence$19:cc.sven.bounded.DynBoundedBits[A],implicitevidence$20:Ordering[V],implicitcastALong:cc.sven.tlike.Castable[A,(Int,Long)]):cc.sven.equivalences.Variable[R,A,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(r: R, a: A)(arg0: Ordering[R], arg1: Ordering[A], arg2: DynBoundedBits[A], arg3: Ordering[V], castALong: Castable[A, (Int, Long)]): MemLoc[R, A, V]", "member" : "cc.sven.equivalences.StorageEntity.apply", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#apply[R,A,V](r:R,a:A)(implicitevidence$13:Ordering[R],implicitevidence$14:Ordering[A],implicitevidence$15:cc.sven.bounded.DynBoundedBits[A],implicitevidence$16:Ordering[V],implicitcastALong:cc.sven.tlike.Castable[A,(Int,Long)]):cc.sven.equivalences.MemLoc[R,A,V]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/StorageEntity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/StorageEntity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/equivalences\/StorageEntity.html", "kind" : "class"}, {"name" : "cc.sven.equivalences.Variable", "shortDescription" : "", "members_case class" : [{"label" : "overlapsWith", "tail" : "(that: StorageEntity[R, A, V]): Boolean", "member" : "cc.sven.equivalences.Variable.overlapsWith", "link" : "cc\/sven\/equivalences\/Variable.html#overlapsWith(that:cc.sven.equivalences.StorageEntity[R,A,V]):Boolean", "kind" : "def"}, {"member" : "cc.sven.equivalences.Variable#<init>", "error" : "unsupported entity"}, {"label" : "variable", "tail" : ": V", "member" : "cc.sven.equivalences.Variable.variable", "link" : "cc\/sven\/equivalences\/Variable.html#variable:V", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/equivalences\/Variable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/equivalences\/Variable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/equivalences\/Variable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/equivalences\/Variable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/equivalences\/Variable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/equivalences\/Variable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/equivalences\/Variable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Variable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Variable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/equivalences\/Variable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/equivalences\/Variable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/equivalences\/Variable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/equivalences\/Variable.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/equivalences\/Variable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/equivalences\/Variable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/equivalences\/Variable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/equivalences\/Variable.html", "kind" : "case class"}], "cc.sven.intset" : [{"name" : "cc.sven.intset.FiniteOrderedIntegral", "members_trait" : [{"label" : "IntegralOps", "tail" : "", "member" : "scala.math.Integral.IntegralOps", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#IntegralOpsextendsIntegral.this.Ops", "kind" : "class"}, {"label" : "Ops", "tail" : "", "member" : "scala.math.Numeric.Ops", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#OpsextendsAnyRef", "kind" : "class"}, {"label" : "fromLong", "tail" : "(l: Long): List[Boolean]", "member" : "cc.sven.intset.FiniteOrderedIntegral.fromLong", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#fromLong(l:Long):List[Boolean]", "kind" : "def"}, {"label" : "fromBitVector", "tail" : "(bv: List[Boolean]): T", "member" : "cc.sven.intset.FiniteOrderedIntegral.fromBitVector", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#fromBitVector(bv:java.util.List[Boolean]):T", "kind" : "def"}, {"label" : "fromBitVector", "tail" : "(bv: List[Boolean]): T", "member" : "cc.sven.intset.FiniteOrderedIntegral.fromBitVector", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#fromBitVector(bv:List[Boolean]):T", "kind" : "def"}, {"label" : "compareTo", "tail" : "(that: T): Int", "member" : "scala.math.Ordered.compareTo", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: T): Boolean", "member" : "scala.math.Ordered.>=", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: T): Boolean", "member" : "scala.math.Ordered.<=", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: T): Boolean", "member" : "scala.math.Ordered.>", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: T): Boolean", "member" : "scala.math.Ordered.<", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "mkNumericOps", "tail" : "(lhs: T): IntegralOps", "member" : "scala.math.Integral.mkNumericOps", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#mkNumericOps(lhs:T):Integral.this.IntegralOps", "kind" : "implicit def"}, {"label" : "signum", "tail" : "(x: T): Int", "member" : "scala.math.Numeric.signum", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#signum(x:T):Int", "kind" : "def"}, {"label" : "abs", "tail" : "(x: T): T", "member" : "scala.math.Numeric.abs", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#abs(x:T):T", "kind" : "def"}, {"label" : "one", "tail" : "(): T", "member" : "scala.math.Numeric.one", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#one:T", "kind" : "def"}, {"label" : "zero", "tail" : "(): T", "member" : "scala.math.Numeric.zero", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#zero:T", "kind" : "def"}, {"label" : "mkOrderingOps", "tail" : "(lhs: T): FiniteOrderedIntegral.Ops", "member" : "scala.math.Ordering.mkOrderingOps", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#mkOrderingOps(lhs:T):Ordering.this.Ops", "kind" : "implicit def"}, {"label" : "on", "tail" : "(f: (U) ⇒ T): Ordering[U]", "member" : "scala.math.Ordering.on", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#on[U](f:U=>T):scala.math.Ordering[U]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Ordering[T]", "member" : "scala.math.Ordering.reverse", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#reverse:scala.math.Ordering[T]", "kind" : "def"}, {"label" : "min", "tail" : "(x: T, y: T): T", "member" : "scala.math.Ordering.min", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#min(x:T,y:T):T", "kind" : "def"}, {"label" : "max", "tail" : "(x: T, y: T): T", "member" : "scala.math.Ordering.max", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#max(x:T,y:T):T", "kind" : "def"}, {"label" : "equiv", "tail" : "(x: T, y: T): Boolean", "member" : "scala.math.Ordering.equiv", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#equiv(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(x: T, y: T): Boolean", "member" : "scala.math.Ordering.gt", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#gt(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(x: T, y: T): Boolean", "member" : "scala.math.Ordering.lt", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#lt(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "gteq", "tail" : "(x: T, y: T): Boolean", "member" : "scala.math.Ordering.gteq", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#gteq(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "lteq", "tail" : "(x: T, y: T): Boolean", "member" : "scala.math.Ordering.lteq", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#lteq(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "tryCompare", "tail" : "(x: T, y: T): Some[Int]", "member" : "scala.math.Ordering.tryCompare", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#tryCompare(x:T,y:T):Some[Int]", "kind" : "def"}, {"label" : "thenComparingDouble", "tail" : "(arg0: ToDoubleFunction[_ >: T]): Comparator[T]", "member" : "java.util.Comparator.thenComparingDouble", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#thenComparingDouble(x$1:java.util.function.ToDoubleFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingLong", "tail" : "(arg0: ToLongFunction[_ >: T]): Comparator[T]", "member" : "java.util.Comparator.thenComparingLong", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#thenComparingLong(x$1:java.util.function.ToLongFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingInt", "tail" : "(arg0: ToIntFunction[_ >: T]): Comparator[T]", "member" : "java.util.Comparator.thenComparingInt", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#thenComparingInt(x$1:java.util.function.ToIntFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: T, _ <: U]): Comparator[T]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#thenComparing[U<:Comparable[_>:U]](x$1:java.util.function.Function[_>:T,_<:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: T, _ <: U], arg1: Comparator[_ >: U]): Comparator[T]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#thenComparing[U](x$1:java.util.function.Function[_>:T,_<:U],x$2:java.util.Comparator[_>:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Comparator[_ >: T]): Comparator[T]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#thenComparing(x$1:java.util.Comparator[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Comparator[T]", "member" : "java.util.Comparator.reversed", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#reversed():java.util.Comparator[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "bits", "tail" : ": Int", "member" : "cc.sven.bounded.BoundedBits.bits", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#bits:Int", "kind" : "abstract val"}, {"label" : "minNotNeg", "tail" : ": T", "member" : "cc.sven.bounded.Bounded.minNotNeg", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#minNotNeg:T", "kind" : "abstract val"}, {"label" : "maxNeg", "tail" : ": T", "member" : "cc.sven.bounded.Bounded.maxNeg", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#maxNeg:T", "kind" : "abstract val"}, {"label" : "minBound", "tail" : ": T", "member" : "cc.sven.bounded.Bounded.minBound", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#minBound:T", "kind" : "abstract val"}, {"label" : "maxBound", "tail" : ": T", "member" : "cc.sven.bounded.Bounded.maxBound", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#maxBound:T", "kind" : "abstract val"}, {"label" : "compare", "tail" : "(that: T): Int", "member" : "scala.math.Ordered.compare", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#compare(that:A):Int", "kind" : "abstract def"}, {"label" : "rem", "tail" : "(x: T, y: T): T", "member" : "scala.math.Integral.rem", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#rem(x:T,y:T):T", "kind" : "abstract def"}, {"label" : "quot", "tail" : "(x: T, y: T): T", "member" : "scala.math.Integral.quot", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#quot(x:T,y:T):T", "kind" : "abstract def"}, {"label" : "toDouble", "tail" : "(x: T): Double", "member" : "scala.math.Numeric.toDouble", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#toDouble(x:T):Double", "kind" : "abstract def"}, {"label" : "toFloat", "tail" : "(x: T): Float", "member" : "scala.math.Numeric.toFloat", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#toFloat(x:T):Float", "kind" : "abstract def"}, {"label" : "toLong", "tail" : "(x: T): Long", "member" : "scala.math.Numeric.toLong", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#toLong(x:T):Long", "kind" : "abstract def"}, {"label" : "toInt", "tail" : "(x: T): Int", "member" : "scala.math.Numeric.toInt", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#toInt(x:T):Int", "kind" : "abstract def"}, {"label" : "fromInt", "tail" : "(x: Int): T", "member" : "scala.math.Numeric.fromInt", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#fromInt(x:Int):T", "kind" : "abstract def"}, {"label" : "negate", "tail" : "(x: T): T", "member" : "scala.math.Numeric.negate", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#negate(x:T):T", "kind" : "abstract def"}, {"label" : "times", "tail" : "(x: T, y: T): T", "member" : "scala.math.Numeric.times", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#times(x:T,y:T):T", "kind" : "abstract def"}, {"label" : "minus", "tail" : "(x: T, y: T): T", "member" : "scala.math.Numeric.minus", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#minus(x:T,y:T):T", "kind" : "abstract def"}, {"label" : "plus", "tail" : "(x: T, y: T): T", "member" : "scala.math.Numeric.plus", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#plus(x:T,y:T):T", "kind" : "abstract def"}, {"label" : "compare", "tail" : "(x: T, y: T): Int", "member" : "scala.math.Ordering.compare", "link" : "cc\/sven\/intset\/FiniteOrderedIntegral.html#compare(x:T,y:T):Int", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "cc\/sven\/intset\/FiniteOrderedIntegral.html", "kind" : "trait"}, {"name" : "cc.sven.intset.IntSet", "shortDescription" : "", "object" : "cc\/sven\/intset\/IntSet$.html", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "cc\/sven\/intset\/IntSet.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "widenPrecisionTree", "tail" : "(that: IntSet[T], precision: CBDD): IntSet[T]", "member" : "cc.sven.intset.IntSet.widenPrecisionTree", "link" : "cc\/sven\/intset\/IntSet.html#widenPrecisionTree(that:cc.sven.intset.IntSet[T],precision:cc.sven.bdd.CBDD):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "widenNaive", "tail" : "(that: IntSet[T], precision: Int): IntSet[T]", "member" : "cc.sven.intset.IntSet.widenNaive", "link" : "cc\/sven\/intset\/IntSet.html#widenNaive(that:cc.sven.intset.IntSet[T],precision:Int):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "java", "tail" : "(): Set[T]", "member" : "cc.sven.intset.IntSet.java", "link" : "cc\/sven\/intset\/IntSet.html#java:java.util.Set[T]", "kind" : "def"}, {"label" : "greaterThan", "tail" : "(that: IntSet[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.greaterThan", "link" : "cc\/sven\/intset\/IntSet.html#greaterThan(that:cc.sven.intset.IntSet[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "lessThan", "tail" : "(that: IntSet[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.lessThan", "link" : "cc\/sven\/intset\/IntSet.html#lessThan(that:cc.sven.intset.IntSet[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "bNot", "tail" : "(): IntSet[T]", "member" : "cc.sven.intset.IntSet.bNot", "link" : "cc\/sven\/intset\/IntSet.html#bNot:cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "bXOr", "tail" : "(that: IntSet[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.bXOr", "link" : "cc\/sven\/intset\/IntSet.html#bXOr(that:cc.sven.intset.IntSet[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "bOr", "tail" : "(that: IntSet[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.bOr", "link" : "cc\/sven\/intset\/IntSet.html#bOr(that:cc.sven.intset.IntSet[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "bAnd", "tail" : "(that: IntSet[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.bAnd", "link" : "cc\/sven\/intset\/IntSet.html#bAnd(that:cc.sven.intset.IntSet[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "bitwiseOp", "tail" : "(op: (Boolean, Boolean) ⇒ Boolean)(that: IntSet[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.bitwiseOp", "link" : "cc\/sven\/intset\/IntSet.html#bitwiseOp(op:(Boolean,Boolean)=>Boolean)(that:cc.sven.intset.IntSet[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(): IntSet[T]", "member" : "cc.sven.intset.IntSet.unary_-", "link" : "cc\/sven\/intset\/IntSet.html#unary_-:cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "negate", "tail" : "(): IntSet[T]", "member" : "cc.sven.intset.IntSet.negate", "link" : "cc\/sven\/intset\/IntSet.html#negate:cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "plusWithCarry", "tail" : "(that: IntSet[T]): (IntSet[T], IntSet[T])", "member" : "cc.sven.intset.IntSet.plusWithCarry", "link" : "cc\/sven\/intset\/IntSet.html#plusWithCarry(that:cc.sven.intset.IntSet[T]):(cc.sven.intset.IntSet[T],cc.sven.intset.IntSet[T])", "kind" : "def"}, {"label" : "plus", "tail" : "(that: IntSet[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.plus", "link" : "cc\/sven\/intset\/IntSet.html#plus(that:cc.sven.intset.IntSet[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "isFull", "tail" : "(): Boolean", "member" : "cc.sven.intset.IntSet.isFull", "link" : "cc\/sven\/intset\/IntSet.html#isFull:Boolean", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "cc.sven.intset.IntSet.nonEmpty", "link" : "cc\/sven\/intset\/IntSet.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "cc.sven.intset.IntSet.isEmpty", "link" : "cc\/sven\/intset\/IntSet.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "subsetOf", "tail" : "(that: IntSet[T]): Boolean", "member" : "cc.sven.intset.IntSet.subsetOf", "link" : "cc\/sven\/intset\/IntSet.html#subsetOf(that:cc.sven.intset.IntSet[T]):Boolean", "kind" : "def"}, {"label" : "randomElement", "tail" : "(): T", "member" : "cc.sven.intset.IntSet.randomElement", "link" : "cc\/sven\/intset\/IntSet.html#randomElement():T", "kind" : "def"}, {"label" : "nodeCount", "tail" : "(): Option[BigInt]", "member" : "cc.sven.intset.IntSet.nodeCount", "link" : "cc\/sven\/intset\/IntSet.html#nodeCount:Option[BigInt]", "kind" : "def"}, {"label" : "sizeGreaterThan", "tail" : "(value: Int): Boolean", "member" : "cc.sven.intset.IntSet.sizeGreaterThan", "link" : "cc\/sven\/intset\/IntSet.html#sizeGreaterThan(value:Int):Boolean", "kind" : "def"}, {"label" : "sizeGreaterThan", "tail" : "(value: BigInt): Boolean", "member" : "cc.sven.intset.IntSet.sizeGreaterThan", "link" : "cc\/sven\/intset\/IntSet.html#sizeGreaterThan(value:BigInt):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "cc.sven.intset.IntSet.size", "link" : "cc\/sven\/intset\/IntSet.html#size:Int", "kind" : "def"}, {"label" : "sizeBigInt", "tail" : "(): BigInt", "member" : "cc.sven.intset.IntSet.sizeBigInt", "link" : "cc\/sven\/intset\/IntSet.html#sizeBigInt:BigInt", "kind" : "def"}, {"label" : "min", "tail" : "(): T", "member" : "cc.sven.intset.IntSet.min", "link" : "cc\/sven\/intset\/IntSet.html#min:T", "kind" : "def"}, {"label" : "max", "tail" : "(): T", "member" : "cc.sven.intset.IntSet.max", "link" : "cc\/sven\/intset\/IntSet.html#max:T", "kind" : "def"}, {"label" : "|", "tail" : "(that: IntSet[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.|", "link" : "cc\/sven\/intset\/IntSet.html#|(that:cc.sven.intset.IntSet[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "union", "tail" : "(that: IntSet[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.union", "link" : "cc\/sven\/intset\/IntSet.html#union(that:cc.sven.intset.IntSet[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "&", "tail" : "(that: IntSet[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.&", "link" : "cc\/sven\/intset\/IntSet.html#&(that:cc.sven.intset.IntSet[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: IntSet[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.intersect", "link" : "cc\/sven\/intset\/IntSet.html#intersect(that:cc.sven.intset.IntSet[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): IntSet[T]", "member" : "cc.sven.intset.IntSet.empty", "link" : "cc\/sven\/intset\/IntSet.html#empty:cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): IntSetIterator[T]", "member" : "cc.sven.intset.IntSet.iterator", "link" : "cc\/sven\/intset\/IntSet.html#iterator():cc.sven.intset.IntSetIterator[T]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: T): Boolean", "member" : "cc.sven.intset.IntSet.contains", "link" : "cc\/sven\/intset\/IntSet.html#contains(elem:T):Boolean", "kind" : "def"}, {"label" : "remove", "tail" : "(elem: T): IntSet[T]", "member" : "cc.sven.intset.IntSet.remove", "link" : "cc\/sven\/intset\/IntSet.html#remove(elem:T):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "-", "tail" : "(elem: T): IntSet[T]", "member" : "cc.sven.intset.IntSet.-", "link" : "cc\/sven\/intset\/IntSet.html#-(elem:T):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "add", "tail" : "(elem: T): IntSet[T]", "member" : "cc.sven.intset.IntSet.add", "link" : "cc\/sven\/intset\/IntSet.html#add(elem:T):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "+", "tail" : "(elem: T): IntSet[T]", "member" : "cc.sven.intset.IntSet.+", "link" : "cc\/sven\/intset\/IntSet.html#+(elem:T):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "ite", "tail" : "(t: IntSet[T], e: IntSet[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.ite", "link" : "cc\/sven\/intset\/IntSet.html#ite(t:cc.sven.intset.IntSet[T],e:cc.sven.intset.IntSet[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "invert", "tail" : "(): IntSet[T]", "member" : "cc.sven.intset.IntSet.invert", "link" : "cc\/sven\/intset\/IntSet.html#invert:cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): IntSet[T]", "member" : "cc.sven.intset.IntSet.unary_!", "link" : "cc\/sven\/intset\/IntSet.html#unary_!:cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "cc.sven.intset.IntSet.hashCode", "link" : "cc\/sven\/intset\/IntSet.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "cc.sven.intset.IntSet.equals", "link" : "cc\/sven\/intset\/IntSet.html#equals(other:Any):Boolean", "kind" : "def"}, {"member" : "cc.sven.intset.IntSet#<init>", "error" : "unsupported entity"}, {"label" : "cbdd", "tail" : ": CBDD", "member" : "cc.sven.intset.IntSet.cbdd", "link" : "cc\/sven\/intset\/IntSet.html#cbdd:cc.sven.bdd.CBDD", "kind" : "val"}, {"label" : "parCombiner", "tail" : "(): Combiner[T, ParSet[T]]", "member" : "scala.collection.immutable.Set.parCombiner", "link" : "cc\/sven\/intset\/IntSet.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.immutable.ParSet[A]]", "kind" : "def"}, {"label" : "seq", "tail" : "(): Set[T]", "member" : "scala.collection.immutable.Set.seq", "link" : "cc\/sven\/intset\/IntSet.html#seq:scala.collection.immutable.Set[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.immutable.Set.toSet", "link" : "cc\/sven\/intset\/IntSet.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Set]", "member" : "scala.collection.immutable.Set.companion", "link" : "cc\/sven\/intset\/IntSet.html#companion:scala.collection.generic.GenericCompanion[scala.collection.immutable.Set]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SetLike.toString", "link" : "cc\/sven\/intset\/IntSet.html#toString():String", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.SetLike.stringPrefix", "link" : "cc\/sven\/intset\/IntSet.html#stringPrefix:String", "kind" : "def"}, {"label" : "subsets", "tail" : "(): Iterator[IntSet[T]]", "member" : "scala.collection.SetLike.subsets", "link" : "cc\/sven\/intset\/IntSet.html#subsets():Iterator[This]", "kind" : "def"}, {"label" : "subsets", "tail" : "(len: Int): Iterator[IntSet[T]]", "member" : "scala.collection.SetLike.subsets", "link" : "cc\/sven\/intset\/IntSet.html#subsets(len:Int):Iterator[This]", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSet[T]): IntSet[T]", "member" : "scala.collection.SetLike.diff", "link" : "cc\/sven\/intset\/IntSet.html#diff(that:scala.collection.GenSet[A]):This", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSet[T]): IntSet[T]", "member" : "scala.collection.SetLike.union", "link" : "cc\/sven\/intset\/IntSet.html#union(that:scala.collection.GenSet[A]):This", "kind" : "def"}, {"label" : "++", "tail" : "(elems: GenTraversableOnce[T]): IntSet[T]", "member" : "scala.collection.SetLike.++", "link" : "cc\/sven\/intset\/IntSet.html#++(elems:scala.collection.GenTraversableOnce[A]):This", "kind" : "def"}, {"label" : "+", "tail" : "(elem1: T, elem2: T, elems: T*): IntSet[T]", "member" : "scala.collection.SetLike.+", "link" : "cc\/sven\/intset\/IntSet.html#+(elem1:A,elem2:A,elems:A*):This", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B)(bf: CanBuildFrom[IntSet[T], B, That]): That", "member" : "scala.collection.SetLike.map", "link" : "cc\/sven\/intset\/IntSet.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[This,B,That]):That", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[A1]", "member" : "scala.collection.SetLike.toBuffer", "link" : "cc\/sven\/intset\/IntSet.html#toBuffer[A1>:A]:scala.collection.mutable.Buffer[A1]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "scala.collection.SetLike.toSeq", "link" : "cc\/sven\/intset\/IntSet.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[T, IntSet[T]]", "member" : "scala.collection.SetLike.newBuilder", "link" : "cc\/sven\/intset\/IntSet.html#newBuilder:scala.collection.mutable.Builder[A,This]", "kind" : "def"}, {"label" : "--", "tail" : "(xs: GenTraversableOnce[T]): IntSet[T]", "member" : "scala.collection.generic.Subtractable.--", "link" : "cc\/sven\/intset\/IntSet.html#--(xs:scala.collection.GenTraversableOnce[A]):Repr", "kind" : "def"}, {"label" : "-", "tail" : "(elem1: T, elem2: T, elems: T*): IntSet[T]", "member" : "scala.collection.generic.Subtractable.-", "link" : "cc\/sven\/intset\/IntSet.html#-(elem1:A,elem2:A,elems:A*):Repr", "kind" : "def"}, {"label" : "subsetOf", "tail" : "(that: GenSet[T]): Boolean", "member" : "scala.collection.GenSetLike.subsetOf", "link" : "cc\/sven\/intset\/IntSet.html#subsetOf(that:scala.collection.GenSet[A]):Boolean", "kind" : "def"}, {"label" : "&~", "tail" : "(that: GenSet[T]): IntSet[T]", "member" : "scala.collection.GenSetLike.&~", "link" : "cc\/sven\/intset\/IntSet.html#&~(that:scala.collection.GenSet[A]):Repr", "kind" : "def"}, {"label" : "|", "tail" : "(that: GenSet[T]): IntSet[T]", "member" : "scala.collection.GenSetLike.|", "link" : "cc\/sven\/intset\/IntSet.html#|(that:scala.collection.GenSet[A]):Repr", "kind" : "def"}, {"label" : "&", "tail" : "(that: GenSet[T]): IntSet[T]", "member" : "scala.collection.GenSetLike.&", "link" : "cc\/sven\/intset\/IntSet.html#&(that:scala.collection.GenSet[A]):Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSet[T]): IntSet[T]", "member" : "scala.collection.GenSetLike.intersect", "link" : "cc\/sven\/intset\/IntSet.html#intersect(that:scala.collection.GenSet[A]):Repr", "kind" : "def"}, {"label" : "apply", "tail" : "(elem: T): Boolean", "member" : "scala.collection.GenSetLike.apply", "link" : "cc\/sven\/intset\/IntSet.html#apply(elem:A):Boolean", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Boolean) ⇒ A): (T) ⇒ A", "member" : "scala.Function1.andThen", "link" : "cc\/sven\/intset\/IntSet.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ T): (A) ⇒ Boolean", "member" : "scala.Function1.compose", "link" : "cc\/sven\/intset\/IntSet.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[T, IntSet[T]]", "member" : "scala.collection.IterableLike.view", "link" : "cc\/sven\/intset\/IntSet.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[T, IntSet[T]]", "member" : "scala.collection.IterableLike.view", "link" : "cc\/sven\/intset\/IntSet.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "cc\/sven\/intset\/IntSet.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[T]", "member" : "scala.collection.IterableLike.toStream", "link" : "cc\/sven\/intset\/IntSet.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "cc\/sven\/intset\/IntSet.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[IntSet[T], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "cc\/sven\/intset\/IntSet.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[IntSet[T], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "cc\/sven\/intset\/IntSet.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[IntSet[T], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "cc\/sven\/intset\/IntSet.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "cc\/sven\/intset\/IntSet.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): IntSet[T]", "member" : "scala.collection.IterableLike.dropRight", "link" : "cc\/sven\/intset\/IntSet.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): IntSet[T]", "member" : "scala.collection.IterableLike.takeRight", "link" : "cc\/sven\/intset\/IntSet.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[IntSet[T]]", "member" : "scala.collection.IterableLike.sliding", "link" : "cc\/sven\/intset\/IntSet.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[IntSet[T]]", "member" : "scala.collection.IterableLike.sliding", "link" : "cc\/sven\/intset\/IntSet.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[IntSet[T]]", "member" : "scala.collection.IterableLike.grouped", "link" : "cc\/sven\/intset\/IntSet.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) ⇒ Boolean): IntSet[T]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "cc\/sven\/intset\/IntSet.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): IntSet[T]", "member" : "scala.collection.IterableLike.drop", "link" : "cc\/sven\/intset\/IntSet.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): IntSet[T]", "member" : "scala.collection.IterableLike.take", "link" : "cc\/sven\/intset\/IntSet.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): IntSet[T]", "member" : "scala.collection.IterableLike.slice", "link" : "cc\/sven\/intset\/IntSet.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): T", "member" : "scala.collection.IterableLike.head", "link" : "cc\/sven\/intset\/IntSet.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[T]", "member" : "scala.collection.IterableLike.toIterator", "link" : "cc\/sven\/intset\/IntSet.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[T]", "member" : "scala.collection.IterableLike.toIterable", "link" : "cc\/sven\/intset\/IntSet.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (T, B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "cc\/sven\/intset\/IntSet.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "cc\/sven\/intset\/IntSet.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (T) ⇒ Boolean): Option[T]", "member" : "scala.collection.IterableLike.find", "link" : "cc\/sven\/intset\/IntSet.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "cc\/sven\/intset\/IntSet.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "cc\/sven\/intset\/IntSet.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (T) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "cc\/sven\/intset\/IntSet.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: IntSet[T]): Iterable[T]", "member" : "scala.collection.IterableLike.toCollection", "link" : "cc\/sven\/intset\/IntSet.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[T]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "cc\/sven\/intset\/IntSet.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (T) ⇒ GenTraversableOnce[B]): Set[Set[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "cc\/sven\/intset\/IntSet.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (T) ⇒ GenTraversableOnce[B]): Set[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "cc\/sven\/intset\/IntSet.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (T) ⇒ (A1, A2, A3)): (Set[A1], Set[A2], Set[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "cc\/sven\/intset\/IntSet.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (T) ⇒ (A1, A2)): (Set[A1], Set[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "cc\/sven\/intset\/IntSet.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Set[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "cc\/sven\/intset\/IntSet.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (T) ⇒ Boolean): FilterMonadic[T, IntSet[T]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "cc\/sven\/intset\/IntSet.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, T, Col[T]]): Col[T]", "member" : "scala.collection.TraversableLike.to", "link" : "cc\/sven\/intset\/IntSet.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[T]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "cc\/sven\/intset\/IntSet.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[IntSet[T]]", "member" : "scala.collection.TraversableLike.inits", "link" : "cc\/sven\/intset\/IntSet.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[IntSet[T]]", "member" : "scala.collection.TraversableLike.tails", "link" : "cc\/sven\/intset\/IntSet.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (IntSet[T], IntSet[T])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "cc\/sven\/intset\/IntSet.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (T) ⇒ Boolean): (IntSet[T], IntSet[T])", "member" : "scala.collection.TraversableLike.span", "link" : "cc\/sven\/intset\/IntSet.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) ⇒ Boolean): IntSet[T]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "cc\/sven\/intset\/IntSet.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): IntSet[T]", "member" : "scala.collection.TraversableLike.init", "link" : "cc\/sven\/intset\/IntSet.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "cc\/sven\/intset\/IntSet.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): T", "member" : "scala.collection.TraversableLike.last", "link" : "cc\/sven\/intset\/IntSet.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): IntSet[T]", "member" : "scala.collection.TraversableLike.tail", "link" : "cc\/sven\/intset\/IntSet.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "scala.collection.TraversableLike.headOption", "link" : "cc\/sven\/intset\/IntSet.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (T, B) ⇒ B)(bf: CanBuildFrom[IntSet[T], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "cc\/sven\/intset\/IntSet.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, T) ⇒ B)(bf: CanBuildFrom[IntSet[T], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "cc\/sven\/intset\/IntSet.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[IntSet[T], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "cc\/sven\/intset\/IntSet.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (T) ⇒ K): Map[K, IntSet[T]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "cc\/sven\/intset\/IntSet.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (T) ⇒ Boolean): (IntSet[T], IntSet[T])", "member" : "scala.collection.TraversableLike.partition", "link" : "cc\/sven\/intset\/IntSet.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B])(bf: CanBuildFrom[IntSet[T], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "cc\/sven\/intset\/IntSet.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (T) ⇒ Boolean): IntSet[T]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "cc\/sven\/intset\/IntSet.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) ⇒ Boolean): IntSet[T]", "member" : "scala.collection.TraversableLike.filter", "link" : "cc\/sven\/intset\/IntSet.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[IntSet[T], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "cc\/sven\/intset\/IntSet.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[IntSet[T], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "cc\/sven\/intset\/IntSet.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[IntSet[T], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "cc\/sven\/intset\/IntSet.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[IntSet[T], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "cc\/sven\/intset\/IntSet.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "cc\/sven\/intset\/IntSet.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "cc\/sven\/intset\/IntSet.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): IntSet[T]", "member" : "scala.collection.TraversableLike.repr", "link" : "cc\/sven\/intset\/IntSet.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "cc\/sven\/intset\/IntSet.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSet[T]", "member" : "scala.collection.Parallelizable.par", "link" : "cc\/sven\/intset\/IntSet.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/intset\/IntSet.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/intset\/IntSet.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/intset\/IntSet.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/intset\/IntSet.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/intset\/IntSet.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/intset\/IntSet.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[T, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "cc\/sven\/intset\/IntSet.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[T]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "cc\/sven\/intset\/IntSet.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[T]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "cc\/sven\/intset\/IntSet.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.toList", "link" : "cc\/sven\/intset\/IntSet.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "cc\/sven\/intset\/IntSet.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/intset\/IntSet.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/intset\/IntSet.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "cc\/sven\/intset\/IntSet.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.minBy", "link" : "cc\/sven\/intset\/IntSet.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "cc\/sven\/intset\/IntSet.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.max", "link" : "cc\/sven\/intset\/IntSet.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.min", "link" : "cc\/sven\/intset\/IntSet.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "cc\/sven\/intset\/IntSet.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "cc\/sven\/intset\/IntSet.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, T) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "cc\/sven\/intset\/IntSet.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "cc\/sven\/intset\/IntSet.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "cc\/sven\/intset\/IntSet.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "cc\/sven\/intset\/IntSet.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (T, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "cc\/sven\/intset\/IntSet.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, T) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "cc\/sven\/intset\/IntSet.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "cc\/sven\/intset\/IntSet.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "cc\/sven\/intset\/IntSet.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "cc\/sven\/intset\/IntSet.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "cc\/sven\/intset\/IntSet.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[T, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "cc\/sven\/intset\/IntSet.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "cc\/sven\/intset\/IntSet.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "cc\/sven\/intset\/IntSet.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "cc\/sven\/intset\/IntSet.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/intset\/IntSet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/intset\/IntSet.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/intset\/IntSet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/intset\/IntSet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/intset\/IntSet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/intset\/IntSet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/intset\/IntSet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/intset\/IntSet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/intset\/IntSet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/intset\/IntSet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/intset\/IntSet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/intset\/IntSet.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/intset\/IntSet.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/intset\/IntSet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/intset\/IntSet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/intset\/IntSet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(ele: T): IntSet[T]", "member" : "cc.sven.intset.IntSet.apply", "link" : "cc\/sven\/intset\/IntSet$.html#apply[T<:cc.sven.intset.FiniteOrderedIntegral[T]](ele:T):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(ival: Interval[T])(int: Integral[T], bounded: Bounded[T], boundedBits: BoundedBits[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.apply", "link" : "cc\/sven\/intset\/IntSet$.html#apply[T](ival:cc.sven.interval.Interval[T])(implicitint:Integral[T],implicitbounded:cc.sven.bounded.Bounded[T],implicitboundedBits:cc.sven.bounded.BoundedBits[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: Set[T])(int: Integral[T], bounded: Bounded[T], boundedBits: BoundedBits[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.apply", "link" : "cc\/sven\/intset\/IntSet$.html#apply[T](s:java.util.Set[T])(implicitint:Integral[T],implicitbounded:cc.sven.bounded.Bounded[T],implicitboundedBits:cc.sven.bounded.BoundedBits[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(s: Set[T])(int: Integral[T], bounded: Bounded[T], boundedBits: BoundedBits[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.apply", "link" : "cc\/sven\/intset\/IntSet$.html#apply[T](s:Set[T])(implicitint:Integral[T],implicitbounded:cc.sven.bounded.Bounded[T],implicitboundedBits:cc.sven.bounded.BoundedBits[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(i: T)(int: Integral[T], bounded: Bounded[T], boundedBits: BoundedBits[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.apply", "link" : "cc\/sven\/intset\/IntSet$.html#apply[T](i:T)(implicitint:Integral[T],implicitbounded:cc.sven.bounded.Bounded[T],implicitboundedBits:cc.sven.bounded.BoundedBits[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(i1: T, i2: T, is: T*)(int: Integral[T], bounded: Bounded[T], boundedBits: BoundedBits[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.apply", "link" : "cc\/sven\/intset\/IntSet$.html#apply[T](i1:T,i2:T,is:T*)(implicitint:Integral[T],implicitbounded:cc.sven.bounded.Bounded[T],implicitboundedBits:cc.sven.bounded.BoundedBits[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "apply", "tail" : "()(int: Integral[T], bounded: Bounded[T], boundedBits: BoundedBits[T]): IntSet[T]", "member" : "cc.sven.intset.IntSet.apply", "link" : "cc\/sven\/intset\/IntSet$.html#apply[T]()(implicitint:Integral[T],implicitbounded:cc.sven.bounded.Bounded[T],implicitboundedBits:cc.sven.bounded.BoundedBits[T]):cc.sven.intset.IntSet[T]", "kind" : "def"}, {"label" : "fromBitVector", "tail" : "(bs: List[Boolean])(int: Integral[T], bounded: Bounded[T], boundedBits: BoundedBits[T]): T", "member" : "cc.sven.intset.IntSet.fromBitVector", "link" : "cc\/sven\/intset\/IntSet$.html#fromBitVector[T](bs:List[Boolean])(implicitint:Integral[T],implicitbounded:cc.sven.bounded.Bounded[T],implicitboundedBits:cc.sven.bounded.BoundedBits[T]):T", "kind" : "def"}, {"label" : "toBitVector", "tail" : "(i: T)(int: Integral[T], boundedBits: BoundedBits[T]): List[Boolean]", "member" : "cc.sven.intset.IntSet.toBitVector", "link" : "cc\/sven\/intset\/IntSet$.html#toBitVector[T](i:T)(implicitint:Integral[T],implicitboundedBits:cc.sven.bounded.BoundedBits[T]):List[Boolean]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/intset\/IntSet$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/intset\/IntSet$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/intset\/IntSet$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/intset\/IntSet$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/intset\/IntSet$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/intset\/IntSet$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/intset\/IntSet$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/intset\/IntSet$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/intset\/IntSet$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/intset\/IntSet$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/intset\/IntSet$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/intset\/IntSet$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/intset\/IntSet$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/intset\/IntSet$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/intset\/IntSet$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/intset\/IntSet$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/intset\/IntSet$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/intset\/IntSet$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/intset\/IntSet$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/intset\/IntSet.html", "kind" : "class"}, {"name" : "cc.sven.intset.IntSetIterator", "shortDescription" : "", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "cc\/sven\/intset\/IntSetIterator.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "next", "tail" : "(): T", "member" : "cc.sven.intset.IntSetIterator.next", "link" : "cc\/sven\/intset\/IntSetIterator.html#next():T", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "cc.sven.intset.IntSetIterator.hasNext", "link" : "cc\/sven\/intset\/IntSetIterator.html#hasNext():Boolean", "kind" : "def"}, {"label" : "iter", "tail" : ": CBDDIterator", "member" : "cc.sven.intset.IntSetIterator.iter", "link" : "cc\/sven\/intset\/IntSetIterator.html#iter:cc.sven.bdd.CBDDIterator", "kind" : "val"}, {"member" : "cc.sven.intset.IntSetIterator#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "cc\/sven\/intset\/IntSetIterator.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[T]", "member" : "scala.collection.Iterator.toStream", "link" : "cc\/sven\/intset\/IntSetIterator.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[T]", "member" : "scala.collection.Iterator.toIterator", "link" : "cc\/sven\/intset\/IntSetIterator.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[T]", "member" : "scala.collection.Iterator.toTraversable", "link" : "cc\/sven\/intset\/IntSetIterator.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "cc\/sven\/intset\/IntSetIterator.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "cc\/sven\/intset\/IntSetIterator.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "cc\/sven\/intset\/IntSetIterator.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[T], Iterator[T])", "member" : "scala.collection.Iterator.duplicate", "link" : "cc\/sven\/intset\/IntSetIterator.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "cc\/sven\/intset\/IntSetIterator.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "cc\/sven\/intset\/IntSetIterator.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "cc\/sven\/intset\/IntSetIterator.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[T]", "member" : "scala.collection.Iterator.buffered", "link" : "cc\/sven\/intset\/IntSetIterator.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "cc\/sven\/intset\/IntSetIterator.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "cc\/sven\/intset\/IntSetIterator.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "cc\/sven\/intset\/IntSetIterator.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "cc\/sven\/intset\/IntSetIterator.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (T) ⇒ Boolean): Option[T]", "member" : "scala.collection.Iterator.find", "link" : "cc\/sven\/intset\/IntSetIterator.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "cc\/sven\/intset\/IntSetIterator.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "cc\/sven\/intset\/IntSetIterator.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "cc\/sven\/intset\/IntSetIterator.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (T) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "cc\/sven\/intset\/IntSetIterator.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "cc\/sven\/intset\/IntSetIterator.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(T, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "cc\/sven\/intset\/IntSetIterator.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "cc\/sven\/intset\/IntSetIterator.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(T, B)]", "member" : "scala.collection.Iterator.zip", "link" : "cc\/sven\/intset\/IntSetIterator.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.dropWhile", "link" : "cc\/sven\/intset\/IntSetIterator.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (T) ⇒ Boolean): (Iterator[T], Iterator[T])", "member" : "scala.collection.Iterator.span", "link" : "cc\/sven\/intset\/IntSetIterator.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (T) ⇒ Boolean): (Iterator[T], Iterator[T])", "member" : "scala.collection.Iterator.partition", "link" : "cc\/sven\/intset\/IntSetIterator.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.takeWhile", "link" : "cc\/sven\/intset\/IntSetIterator.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (T, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "cc\/sven\/intset\/IntSetIterator.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, T) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "cc\/sven\/intset\/IntSetIterator.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "cc\/sven\/intset\/IntSetIterator.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.filterNot", "link" : "cc\/sven\/intset\/IntSetIterator.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.withFilter", "link" : "cc\/sven\/intset\/IntSetIterator.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (T, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "cc\/sven\/intset\/IntSetIterator.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.filter", "link" : "cc\/sven\/intset\/IntSetIterator.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "cc\/sven\/intset\/IntSetIterator.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "cc\/sven\/intset\/IntSetIterator.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "cc\/sven\/intset\/IntSetIterator.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[T]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "cc\/sven\/intset\/IntSetIterator.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[T]", "member" : "scala.collection.Iterator.slice", "link" : "cc\/sven\/intset\/IntSetIterator.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[T]", "member" : "scala.collection.Iterator.drop", "link" : "cc\/sven\/intset\/IntSetIterator.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[T]", "member" : "scala.collection.Iterator.take", "link" : "cc\/sven\/intset\/IntSetIterator.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "cc\/sven\/intset\/IntSetIterator.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "cc\/sven\/intset\/IntSetIterator.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "cc\/sven\/intset\/IntSetIterator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[T]", "member" : "scala.collection.Iterator.seq", "link" : "cc\/sven\/intset\/IntSetIterator.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/intset\/IntSetIterator.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/intset\/IntSetIterator.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/intset\/IntSetIterator.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/intset\/IntSetIterator.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/intset\/IntSetIterator.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/intset\/IntSetIterator.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[T, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "cc\/sven\/intset\/IntSetIterator.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, T, Col[T]]): Col[T]", "member" : "scala.collection.TraversableOnce.to", "link" : "cc\/sven\/intset\/IntSetIterator.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[T]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "cc\/sven\/intset\/IntSetIterator.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "cc\/sven\/intset\/IntSetIterator.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "cc\/sven\/intset\/IntSetIterator.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[T]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "cc\/sven\/intset\/IntSetIterator.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "cc\/sven\/intset\/IntSetIterator.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[T]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "cc\/sven\/intset\/IntSetIterator.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.toList", "link" : "cc\/sven\/intset\/IntSetIterator.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "cc\/sven\/intset\/IntSetIterator.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/intset\/IntSetIterator.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/intset\/IntSetIterator.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "cc\/sven\/intset\/IntSetIterator.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.minBy", "link" : "cc\/sven\/intset\/IntSetIterator.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "cc\/sven\/intset\/IntSetIterator.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.max", "link" : "cc\/sven\/intset\/IntSetIterator.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.min", "link" : "cc\/sven\/intset\/IntSetIterator.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "cc\/sven\/intset\/IntSetIterator.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "cc\/sven\/intset\/IntSetIterator.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, T) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "cc\/sven\/intset\/IntSetIterator.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "cc\/sven\/intset\/IntSetIterator.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "cc\/sven\/intset\/IntSetIterator.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "cc\/sven\/intset\/IntSetIterator.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (T, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "cc\/sven\/intset\/IntSetIterator.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, T) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "cc\/sven\/intset\/IntSetIterator.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "cc\/sven\/intset\/IntSetIterator.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "cc\/sven\/intset\/IntSetIterator.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "cc\/sven\/intset\/IntSetIterator.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "cc\/sven\/intset\/IntSetIterator.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "cc\/sven\/intset\/IntSetIterator.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "cc\/sven\/intset\/IntSetIterator.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[T, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "cc\/sven\/intset\/IntSetIterator.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "cc\/sven\/intset\/IntSetIterator.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "cc\/sven\/intset\/IntSetIterator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "cc\/sven\/intset\/IntSetIterator.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "cc\/sven\/intset\/IntSetIterator.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "cc\/sven\/intset\/IntSetIterator.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/intset\/IntSetIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/intset\/IntSetIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/intset\/IntSetIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/intset\/IntSetIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/intset\/IntSetIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/intset\/IntSetIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/intset\/IntSetIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/intset\/IntSetIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/intset\/IntSetIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/intset\/IntSetIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/intset\/IntSetIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/intset\/IntSetIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/intset\/IntSetIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/intset\/IntSetIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/intset\/IntSetIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/intset\/IntSetIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/intset\/IntSetIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/intset\/IntSetIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/intset\/IntSetIterator.html", "kind" : "class"}], "cc.sven.integral" : [{"name" : "cc.sven.integral.Implicits", "shortDescription" : "", "object" : "cc\/sven\/integral\/Implicits$.html", "members_object" : [{"label" : "jLongIsOrdering", "tail" : ": JJLongIsOrdering", "member" : "cc.sven.integral.Implicits.jLongIsOrdering", "link" : "cc\/sven\/integral\/Implicits$.html#jLongIsOrdering:cc.sven.integral.JJLongIsOrdering", "kind" : "implicit val"}, {"label" : "jLongIsIntegral", "tail" : ": JJLongIsIntegral", "member" : "cc.sven.integral.Implicits.jLongIsIntegral", "link" : "cc\/sven\/integral\/Implicits$.html#jLongIsIntegral:cc.sven.integral.JJLongIsIntegral", "kind" : "implicit val"}, {"label" : "longIsOrdering", "tail" : ": JLongOrdering", "member" : "cc.sven.integral.Implicits.longIsOrdering", "link" : "cc\/sven\/integral\/Implicits$.html#longIsOrdering:cc.sven.integral.JLongOrdering", "kind" : "implicit val"}, {"label" : "longIsIntegral", "tail" : ": JLongIsIntegral", "member" : "cc.sven.integral.Implicits.longIsIntegral", "link" : "cc\/sven\/integral\/Implicits$.html#longIsIntegral:cc.sven.integral.JLongIsIntegral", "kind" : "implicit val"}, {"label" : "integerIsOrdering", "tail" : ": JIntegerOrdering", "member" : "cc.sven.integral.Implicits.integerIsOrdering", "link" : "cc\/sven\/integral\/Implicits$.html#integerIsOrdering:cc.sven.integral.JIntegerOrdering", "kind" : "implicit val"}, {"label" : "integerIsIntegral", "tail" : ": JIntegerIsIntegral", "member" : "cc.sven.integral.Implicits.integerIsIntegral", "link" : "cc\/sven\/integral\/Implicits$.html#integerIsIntegral:cc.sven.integral.JIntegerIsIntegral", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/integral\/Implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/integral\/Implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/integral\/Implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/integral\/Implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/integral\/Implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/integral\/Implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/integral\/Implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/Implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/Implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/Implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/integral\/Implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/integral\/Implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/integral\/Implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/integral\/Implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/integral\/Implicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/integral\/Implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/integral\/Implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/integral\/Implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/integral\/Implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.integral.JIntegerIsIntegral", "shortDescription" : "", "members_class" : [{"label" : "IntegralOps", "tail" : "", "member" : "scala.math.Integral.IntegralOps", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#IntegralOpsextendsIntegral.this.Ops", "kind" : "class"}, {"label" : "Ops", "tail" : "", "member" : "scala.math.Numeric.Ops", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#OpsextendsAnyRef", "kind" : "class"}, {"label" : "toDouble", "tail" : "(x: Integer): Double", "member" : "cc.sven.integral.JIntegerIsIntegral.toDouble", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#toDouble(x:Integer):Double", "kind" : "def"}, {"label" : "toFloat", "tail" : "(x: Integer): Float", "member" : "cc.sven.integral.JIntegerIsIntegral.toFloat", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#toFloat(x:Integer):Float", "kind" : "def"}, {"label" : "toLong", "tail" : "(x: Integer): Long", "member" : "cc.sven.integral.JIntegerIsIntegral.toLong", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#toLong(x:Integer):Long", "kind" : "def"}, {"label" : "toInt", "tail" : "(x: Integer): Int", "member" : "cc.sven.integral.JIntegerIsIntegral.toInt", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#toInt(x:Integer):Int", "kind" : "def"}, {"label" : "fromInt", "tail" : "(x: Int): Integer", "member" : "cc.sven.integral.JIntegerIsIntegral.fromInt", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#fromInt(x:Int):Integer", "kind" : "def"}, {"label" : "negate", "tail" : "(x: Integer): Integer", "member" : "cc.sven.integral.JIntegerIsIntegral.negate", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#negate(x:Integer):Integer", "kind" : "def"}, {"label" : "rem", "tail" : "(x: Integer, y: Integer): Integer", "member" : "cc.sven.integral.JIntegerIsIntegral.rem", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#rem(x:Integer,y:Integer):Integer", "kind" : "def"}, {"label" : "quot", "tail" : "(x: Integer, y: Integer): Integer", "member" : "cc.sven.integral.JIntegerIsIntegral.quot", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#quot(x:Integer,y:Integer):Integer", "kind" : "def"}, {"label" : "times", "tail" : "(x: Integer, y: Integer): Integer", "member" : "cc.sven.integral.JIntegerIsIntegral.times", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#times(x:Integer,y:Integer):Integer", "kind" : "def"}, {"label" : "minus", "tail" : "(x: Integer, y: Integer): Integer", "member" : "cc.sven.integral.JIntegerIsIntegral.minus", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#minus(x:Integer,y:Integer):Integer", "kind" : "def"}, {"label" : "plus", "tail" : "(x: Integer, y: Integer): Integer", "member" : "cc.sven.integral.JIntegerIsIntegral.plus", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#plus(x:Integer,y:Integer):Integer", "kind" : "def"}, {"member" : "cc.sven.integral.JIntegerIsIntegral#<init>", "error" : "unsupported entity"}, {"label" : "mkNumericOps", "tail" : "(lhs: Integer): IntegralOps", "member" : "scala.math.Integral.mkNumericOps", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#mkNumericOps(lhs:T):Integral.this.IntegralOps", "kind" : "implicit def"}, {"label" : "signum", "tail" : "(x: Integer): Int", "member" : "scala.math.Numeric.signum", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#signum(x:T):Int", "kind" : "def"}, {"label" : "abs", "tail" : "(x: Integer): Integer", "member" : "scala.math.Numeric.abs", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#abs(x:T):T", "kind" : "def"}, {"label" : "one", "tail" : "(): Integer", "member" : "scala.math.Numeric.one", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#one:T", "kind" : "def"}, {"label" : "zero", "tail" : "(): Integer", "member" : "scala.math.Numeric.zero", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#zero:T", "kind" : "def"}, {"label" : "compare", "tail" : "(x: Integer, y: Integer): Int", "member" : "cc.sven.integral.JIntegerOrdering.compare", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#compare(x:Integer,y:Integer):Int", "kind" : "def"}, {"label" : "mkOrderingOps", "tail" : "(lhs: Integer): JIntegerIsIntegral.Ops", "member" : "scala.math.Ordering.mkOrderingOps", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#mkOrderingOps(lhs:T):Ordering.this.Ops", "kind" : "implicit def"}, {"label" : "on", "tail" : "(f: (U) ⇒ Integer): Ordering[U]", "member" : "scala.math.Ordering.on", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#on[U](f:U=>T):scala.math.Ordering[U]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Ordering[Integer]", "member" : "scala.math.Ordering.reverse", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#reverse:scala.math.Ordering[T]", "kind" : "def"}, {"label" : "min", "tail" : "(x: Integer, y: Integer): Integer", "member" : "scala.math.Ordering.min", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#min(x:T,y:T):T", "kind" : "def"}, {"label" : "max", "tail" : "(x: Integer, y: Integer): Integer", "member" : "scala.math.Ordering.max", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#max(x:T,y:T):T", "kind" : "def"}, {"label" : "equiv", "tail" : "(x: Integer, y: Integer): Boolean", "member" : "scala.math.Ordering.equiv", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#equiv(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(x: Integer, y: Integer): Boolean", "member" : "scala.math.Ordering.gt", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#gt(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(x: Integer, y: Integer): Boolean", "member" : "scala.math.Ordering.lt", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#lt(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "gteq", "tail" : "(x: Integer, y: Integer): Boolean", "member" : "scala.math.Ordering.gteq", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#gteq(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "lteq", "tail" : "(x: Integer, y: Integer): Boolean", "member" : "scala.math.Ordering.lteq", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#lteq(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "tryCompare", "tail" : "(x: Integer, y: Integer): Some[Int]", "member" : "scala.math.Ordering.tryCompare", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#tryCompare(x:T,y:T):Some[Int]", "kind" : "def"}, {"label" : "thenComparingDouble", "tail" : "(arg0: ToDoubleFunction[_ >: Integer]): Comparator[Integer]", "member" : "java.util.Comparator.thenComparingDouble", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#thenComparingDouble(x$1:java.util.function.ToDoubleFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingLong", "tail" : "(arg0: ToLongFunction[_ >: Integer]): Comparator[Integer]", "member" : "java.util.Comparator.thenComparingLong", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#thenComparingLong(x$1:java.util.function.ToLongFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingInt", "tail" : "(arg0: ToIntFunction[_ >: Integer]): Comparator[Integer]", "member" : "java.util.Comparator.thenComparingInt", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#thenComparingInt(x$1:java.util.function.ToIntFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: Integer, _ <: U]): Comparator[Integer]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#thenComparing[U<:Comparable[_>:U]](x$1:java.util.function.Function[_>:T,_<:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: Integer, _ <: U], arg1: Comparator[_ >: U]): Comparator[Integer]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#thenComparing[U](x$1:java.util.function.Function[_>:T,_<:U],x$2:java.util.Comparator[_>:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Comparator[_ >: Integer]): Comparator[Integer]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#thenComparing(x$1:java.util.Comparator[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Comparator[Integer]", "member" : "java.util.Comparator.reversed", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#reversed():java.util.Comparator[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/integral\/JIntegerIsIntegral.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/integral\/JIntegerIsIntegral.html", "kind" : "class"}, {"name" : "cc.sven.integral.JIntegerOrdering", "shortDescription" : "", "members_class" : [{"label" : "Ops", "tail" : "", "member" : "scala.math.Ordering.Ops", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#OpsextendsAnyRef", "kind" : "class"}, {"label" : "compare", "tail" : "(x: Integer, y: Integer): Int", "member" : "cc.sven.integral.JIntegerOrdering.compare", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#compare(x:Integer,y:Integer):Int", "kind" : "def"}, {"member" : "cc.sven.integral.JIntegerOrdering#<init>", "error" : "unsupported entity"}, {"label" : "mkOrderingOps", "tail" : "(lhs: Integer): Ops", "member" : "scala.math.Ordering.mkOrderingOps", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#mkOrderingOps(lhs:T):Ordering.this.Ops", "kind" : "implicit def"}, {"label" : "on", "tail" : "(f: (U) ⇒ Integer): Ordering[U]", "member" : "scala.math.Ordering.on", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#on[U](f:U=>T):scala.math.Ordering[U]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Ordering[Integer]", "member" : "scala.math.Ordering.reverse", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#reverse:scala.math.Ordering[T]", "kind" : "def"}, {"label" : "min", "tail" : "(x: Integer, y: Integer): Integer", "member" : "scala.math.Ordering.min", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#min(x:T,y:T):T", "kind" : "def"}, {"label" : "max", "tail" : "(x: Integer, y: Integer): Integer", "member" : "scala.math.Ordering.max", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#max(x:T,y:T):T", "kind" : "def"}, {"label" : "equiv", "tail" : "(x: Integer, y: Integer): Boolean", "member" : "scala.math.Ordering.equiv", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#equiv(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(x: Integer, y: Integer): Boolean", "member" : "scala.math.Ordering.gt", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#gt(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(x: Integer, y: Integer): Boolean", "member" : "scala.math.Ordering.lt", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#lt(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "gteq", "tail" : "(x: Integer, y: Integer): Boolean", "member" : "scala.math.Ordering.gteq", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#gteq(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "lteq", "tail" : "(x: Integer, y: Integer): Boolean", "member" : "scala.math.Ordering.lteq", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#lteq(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "tryCompare", "tail" : "(x: Integer, y: Integer): Some[Int]", "member" : "scala.math.Ordering.tryCompare", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#tryCompare(x:T,y:T):Some[Int]", "kind" : "def"}, {"label" : "thenComparingDouble", "tail" : "(arg0: ToDoubleFunction[_ >: Integer]): Comparator[Integer]", "member" : "java.util.Comparator.thenComparingDouble", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#thenComparingDouble(x$1:java.util.function.ToDoubleFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingLong", "tail" : "(arg0: ToLongFunction[_ >: Integer]): Comparator[Integer]", "member" : "java.util.Comparator.thenComparingLong", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#thenComparingLong(x$1:java.util.function.ToLongFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingInt", "tail" : "(arg0: ToIntFunction[_ >: Integer]): Comparator[Integer]", "member" : "java.util.Comparator.thenComparingInt", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#thenComparingInt(x$1:java.util.function.ToIntFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: Integer, _ <: U]): Comparator[Integer]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#thenComparing[U<:Comparable[_>:U]](x$1:java.util.function.Function[_>:T,_<:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: Integer, _ <: U], arg1: Comparator[_ >: U]): Comparator[Integer]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#thenComparing[U](x$1:java.util.function.Function[_>:T,_<:U],x$2:java.util.Comparator[_>:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Comparator[_ >: Integer]): Comparator[Integer]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#thenComparing(x$1:java.util.Comparator[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Comparator[Integer]", "member" : "java.util.Comparator.reversed", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#reversed():java.util.Comparator[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/integral\/JIntegerOrdering.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/integral\/JIntegerOrdering.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/integral\/JIntegerOrdering.html", "kind" : "class"}, {"name" : "cc.sven.integral.JJLongIsIntegral", "shortDescription" : "", "members_class" : [{"label" : "IntegralOps", "tail" : "", "member" : "scala.math.Integral.IntegralOps", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#IntegralOpsextendsIntegral.this.Ops", "kind" : "class"}, {"label" : "Ops", "tail" : "", "member" : "scala.math.Numeric.Ops", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#OpsextendsAnyRef", "kind" : "class"}, {"label" : "toDouble", "tail" : "(x: Long): Double", "member" : "cc.sven.integral.JJLongIsIntegral.toDouble", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#toDouble(x:Long):Double", "kind" : "def"}, {"label" : "toFloat", "tail" : "(x: Long): Float", "member" : "cc.sven.integral.JJLongIsIntegral.toFloat", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#toFloat(x:Long):Float", "kind" : "def"}, {"label" : "toLong", "tail" : "(x: Long): Long", "member" : "cc.sven.integral.JJLongIsIntegral.toLong", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#toLong(x:Long):Long", "kind" : "def"}, {"label" : "toInt", "tail" : "(x: Long): Int", "member" : "cc.sven.integral.JJLongIsIntegral.toInt", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#toInt(x:Long):Int", "kind" : "def"}, {"label" : "fromInt", "tail" : "(x: Int): Long", "member" : "cc.sven.integral.JJLongIsIntegral.fromInt", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#fromInt(x:Int):Long", "kind" : "def"}, {"label" : "negate", "tail" : "(x: Long): Long", "member" : "cc.sven.integral.JJLongIsIntegral.negate", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#negate(x:Long):Long", "kind" : "def"}, {"label" : "rem", "tail" : "(x: Long, y: Long): Long", "member" : "cc.sven.integral.JJLongIsIntegral.rem", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#rem(x:Long,y:Long):Long", "kind" : "def"}, {"label" : "quot", "tail" : "(x: Long, y: Long): Long", "member" : "cc.sven.integral.JJLongIsIntegral.quot", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#quot(x:Long,y:Long):Long", "kind" : "def"}, {"label" : "times", "tail" : "(x: Long, y: Long): Long", "member" : "cc.sven.integral.JJLongIsIntegral.times", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#times(x:Long,y:Long):Long", "kind" : "def"}, {"label" : "minus", "tail" : "(x: Long, y: Long): Long", "member" : "cc.sven.integral.JJLongIsIntegral.minus", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#minus(x:Long,y:Long):Long", "kind" : "def"}, {"label" : "plus", "tail" : "(x: Long, y: Long): Long", "member" : "cc.sven.integral.JJLongIsIntegral.plus", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#plus(x:Long,y:Long):Long", "kind" : "def"}, {"member" : "cc.sven.integral.JJLongIsIntegral#<init>", "error" : "unsupported entity"}, {"label" : "mkNumericOps", "tail" : "(lhs: Long): IntegralOps", "member" : "scala.math.Integral.mkNumericOps", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#mkNumericOps(lhs:T):Integral.this.IntegralOps", "kind" : "implicit def"}, {"label" : "signum", "tail" : "(x: Long): Int", "member" : "scala.math.Numeric.signum", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#signum(x:T):Int", "kind" : "def"}, {"label" : "abs", "tail" : "(x: Long): Long", "member" : "scala.math.Numeric.abs", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#abs(x:T):T", "kind" : "def"}, {"label" : "one", "tail" : "(): Long", "member" : "scala.math.Numeric.one", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#one:T", "kind" : "def"}, {"label" : "zero", "tail" : "(): Long", "member" : "scala.math.Numeric.zero", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#zero:T", "kind" : "def"}, {"label" : "mkOrderingOps", "tail" : "(lhs: Long): JJLongIsIntegral.Ops", "member" : "scala.math.Ordering.mkOrderingOps", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#mkOrderingOps(lhs:T):Ordering.this.Ops", "kind" : "implicit def"}, {"label" : "on", "tail" : "(f: (U) ⇒ Long): Ordering[U]", "member" : "scala.math.Ordering.on", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#on[U](f:U=>T):scala.math.Ordering[U]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Ordering[Long]", "member" : "scala.math.Ordering.reverse", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#reverse:scala.math.Ordering[T]", "kind" : "def"}, {"label" : "min", "tail" : "(x: Long, y: Long): Long", "member" : "scala.math.Ordering.min", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#min(x:T,y:T):T", "kind" : "def"}, {"label" : "max", "tail" : "(x: Long, y: Long): Long", "member" : "scala.math.Ordering.max", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#max(x:T,y:T):T", "kind" : "def"}, {"label" : "equiv", "tail" : "(x: Long, y: Long): Boolean", "member" : "scala.math.Ordering.equiv", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#equiv(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(x: Long, y: Long): Boolean", "member" : "scala.math.Ordering.gt", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#gt(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(x: Long, y: Long): Boolean", "member" : "scala.math.Ordering.lt", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#lt(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "gteq", "tail" : "(x: Long, y: Long): Boolean", "member" : "scala.math.Ordering.gteq", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#gteq(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "lteq", "tail" : "(x: Long, y: Long): Boolean", "member" : "scala.math.Ordering.lteq", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#lteq(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "tryCompare", "tail" : "(x: Long, y: Long): Some[Int]", "member" : "scala.math.Ordering.tryCompare", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#tryCompare(x:T,y:T):Some[Int]", "kind" : "def"}, {"label" : "thenComparingDouble", "tail" : "(arg0: ToDoubleFunction[_ >: Long]): Comparator[Long]", "member" : "java.util.Comparator.thenComparingDouble", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#thenComparingDouble(x$1:java.util.function.ToDoubleFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingLong", "tail" : "(arg0: ToLongFunction[_ >: Long]): Comparator[Long]", "member" : "java.util.Comparator.thenComparingLong", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#thenComparingLong(x$1:java.util.function.ToLongFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingInt", "tail" : "(arg0: ToIntFunction[_ >: Long]): Comparator[Long]", "member" : "java.util.Comparator.thenComparingInt", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#thenComparingInt(x$1:java.util.function.ToIntFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: Long, _ <: U]): Comparator[Long]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#thenComparing[U<:Comparable[_>:U]](x$1:java.util.function.Function[_>:T,_<:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: Long, _ <: U], arg1: Comparator[_ >: U]): Comparator[Long]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#thenComparing[U](x$1:java.util.function.Function[_>:T,_<:U],x$2:java.util.Comparator[_>:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Comparator[_ >: Long]): Comparator[Long]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#thenComparing(x$1:java.util.Comparator[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Comparator[Long]", "member" : "java.util.Comparator.reversed", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#reversed():java.util.Comparator[T]", "kind" : "def"}, {"label" : "compare", "tail" : "(x: Long, y: Long): Int", "member" : "cc.sven.integral.JJLongIsOrdering.compare", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#compare(x:Long,y:Long):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/integral\/JJLongIsIntegral.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/integral\/JJLongIsIntegral.html", "kind" : "class"}, {"name" : "cc.sven.integral.JJLongIsOrdering", "shortDescription" : "", "members_class" : [{"label" : "compare", "tail" : "(x: Long, y: Long): Int", "member" : "cc.sven.integral.JJLongIsOrdering.compare", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#compare(x:Long,y:Long):Int", "kind" : "def"}, {"member" : "cc.sven.integral.JJLongIsOrdering#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/integral\/JJLongIsOrdering.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/integral\/JJLongIsOrdering.html", "kind" : "class"}, {"name" : "cc.sven.integral.JLongIsIntegral", "shortDescription" : "", "members_class" : [{"label" : "IntegralOps", "tail" : "", "member" : "scala.math.Integral.IntegralOps", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#IntegralOpsextendsIntegral.this.Ops", "kind" : "class"}, {"label" : "Ops", "tail" : "", "member" : "scala.math.Numeric.Ops", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#OpsextendsAnyRef", "kind" : "class"}, {"label" : "toDouble", "tail" : "(x: Long): Double", "member" : "cc.sven.integral.JLongIsIntegral.toDouble", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#toDouble(x:Long):Double", "kind" : "def"}, {"label" : "toFloat", "tail" : "(x: Long): Float", "member" : "cc.sven.integral.JLongIsIntegral.toFloat", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#toFloat(x:Long):Float", "kind" : "def"}, {"label" : "toLong", "tail" : "(x: Long): Long", "member" : "cc.sven.integral.JLongIsIntegral.toLong", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#toLong(x:Long):Long", "kind" : "def"}, {"label" : "toInt", "tail" : "(x: Long): Int", "member" : "cc.sven.integral.JLongIsIntegral.toInt", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#toInt(x:Long):Int", "kind" : "def"}, {"label" : "fromInt", "tail" : "(x: Int): Long", "member" : "cc.sven.integral.JLongIsIntegral.fromInt", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#fromInt(x:Int):Long", "kind" : "def"}, {"label" : "negate", "tail" : "(x: Long): Long", "member" : "cc.sven.integral.JLongIsIntegral.negate", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#negate(x:Long):Long", "kind" : "def"}, {"label" : "rem", "tail" : "(x: Long, y: Long): Long", "member" : "cc.sven.integral.JLongIsIntegral.rem", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#rem(x:Long,y:Long):Long", "kind" : "def"}, {"label" : "quot", "tail" : "(x: Long, y: Long): Long", "member" : "cc.sven.integral.JLongIsIntegral.quot", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#quot(x:Long,y:Long):Long", "kind" : "def"}, {"label" : "times", "tail" : "(x: Long, y: Long): Long", "member" : "cc.sven.integral.JLongIsIntegral.times", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#times(x:Long,y:Long):Long", "kind" : "def"}, {"label" : "minus", "tail" : "(x: Long, y: Long): Long", "member" : "cc.sven.integral.JLongIsIntegral.minus", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#minus(x:Long,y:Long):Long", "kind" : "def"}, {"label" : "plus", "tail" : "(x: Long, y: Long): Long", "member" : "cc.sven.integral.JLongIsIntegral.plus", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#plus(x:Long,y:Long):Long", "kind" : "def"}, {"member" : "cc.sven.integral.JLongIsIntegral#<init>", "error" : "unsupported entity"}, {"label" : "mkNumericOps", "tail" : "(lhs: Long): IntegralOps", "member" : "scala.math.Integral.mkNumericOps", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#mkNumericOps(lhs:T):Integral.this.IntegralOps", "kind" : "implicit def"}, {"label" : "signum", "tail" : "(x: Long): Int", "member" : "scala.math.Numeric.signum", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#signum(x:T):Int", "kind" : "def"}, {"label" : "abs", "tail" : "(x: Long): Long", "member" : "scala.math.Numeric.abs", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#abs(x:T):T", "kind" : "def"}, {"label" : "one", "tail" : "(): Long", "member" : "scala.math.Numeric.one", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#one:T", "kind" : "def"}, {"label" : "zero", "tail" : "(): Long", "member" : "scala.math.Numeric.zero", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#zero:T", "kind" : "def"}, {"label" : "mkOrderingOps", "tail" : "(lhs: Long): JLongIsIntegral.Ops", "member" : "scala.math.Ordering.mkOrderingOps", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#mkOrderingOps(lhs:T):Ordering.this.Ops", "kind" : "implicit def"}, {"label" : "on", "tail" : "(f: (U) ⇒ Long): Ordering[U]", "member" : "scala.math.Ordering.on", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#on[U](f:U=>T):scala.math.Ordering[U]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Ordering[Long]", "member" : "scala.math.Ordering.reverse", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#reverse:scala.math.Ordering[T]", "kind" : "def"}, {"label" : "min", "tail" : "(x: Long, y: Long): Long", "member" : "scala.math.Ordering.min", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#min(x:T,y:T):T", "kind" : "def"}, {"label" : "max", "tail" : "(x: Long, y: Long): Long", "member" : "scala.math.Ordering.max", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#max(x:T,y:T):T", "kind" : "def"}, {"label" : "equiv", "tail" : "(x: Long, y: Long): Boolean", "member" : "scala.math.Ordering.equiv", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#equiv(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(x: Long, y: Long): Boolean", "member" : "scala.math.Ordering.gt", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#gt(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(x: Long, y: Long): Boolean", "member" : "scala.math.Ordering.lt", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#lt(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "gteq", "tail" : "(x: Long, y: Long): Boolean", "member" : "scala.math.Ordering.gteq", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#gteq(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "lteq", "tail" : "(x: Long, y: Long): Boolean", "member" : "scala.math.Ordering.lteq", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#lteq(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "tryCompare", "tail" : "(x: Long, y: Long): Some[Int]", "member" : "scala.math.Ordering.tryCompare", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#tryCompare(x:T,y:T):Some[Int]", "kind" : "def"}, {"label" : "thenComparingDouble", "tail" : "(arg0: ToDoubleFunction[_ >: Long]): Comparator[Long]", "member" : "java.util.Comparator.thenComparingDouble", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#thenComparingDouble(x$1:java.util.function.ToDoubleFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingLong", "tail" : "(arg0: ToLongFunction[_ >: Long]): Comparator[Long]", "member" : "java.util.Comparator.thenComparingLong", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#thenComparingLong(x$1:java.util.function.ToLongFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingInt", "tail" : "(arg0: ToIntFunction[_ >: Long]): Comparator[Long]", "member" : "java.util.Comparator.thenComparingInt", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#thenComparingInt(x$1:java.util.function.ToIntFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: Long, _ <: U]): Comparator[Long]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#thenComparing[U<:Comparable[_>:U]](x$1:java.util.function.Function[_>:T,_<:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: Long, _ <: U], arg1: Comparator[_ >: U]): Comparator[Long]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#thenComparing[U](x$1:java.util.function.Function[_>:T,_<:U],x$2:java.util.Comparator[_>:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Comparator[_ >: Long]): Comparator[Long]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#thenComparing(x$1:java.util.Comparator[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Comparator[Long]", "member" : "java.util.Comparator.reversed", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#reversed():java.util.Comparator[T]", "kind" : "def"}, {"label" : "compare", "tail" : "(x: Long, y: Long): Int", "member" : "cc.sven.integral.JLongOrdering.compare", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#compare(x:Long,y:Long):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/integral\/JLongIsIntegral.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/integral\/JLongIsIntegral.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/integral\/JLongIsIntegral.html", "kind" : "class"}, {"name" : "cc.sven.integral.JLongOrdering", "shortDescription" : "", "members_class" : [{"label" : "compare", "tail" : "(x: Long, y: Long): Int", "member" : "cc.sven.integral.JLongOrdering.compare", "link" : "cc\/sven\/integral\/JLongOrdering.html#compare(x:Long,y:Long):Int", "kind" : "def"}, {"member" : "cc.sven.integral.JLongOrdering#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/integral\/JLongOrdering.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/integral\/JLongOrdering.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/integral\/JLongOrdering.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/integral\/JLongOrdering.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/integral\/JLongOrdering.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/integral\/JLongOrdering.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/integral\/JLongOrdering.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JLongOrdering.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JLongOrdering.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/integral\/JLongOrdering.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/integral\/JLongOrdering.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/integral\/JLongOrdering.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/integral\/JLongOrdering.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/integral\/JLongOrdering.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/integral\/JLongOrdering.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/integral\/JLongOrdering.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/integral\/JLongOrdering.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/integral\/JLongOrdering.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/integral\/JLongOrdering.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/integral\/JLongOrdering.html", "kind" : "class"}], "cc.sven.bdd" : [{"name" : "cc.sven.bdd.BDD", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bdd\/BDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bdd\/BDD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bdd\/BDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bdd\/BDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bdd\/BDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bdd\/BDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bdd\/BDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/BDD.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/BDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/BDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bdd\/BDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bdd\/BDD.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bdd\/BDD.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bdd\/BDD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bdd\/BDD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bdd\/BDD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bdd\/BDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bdd\/BDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bdd\/BDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(c: Boolean): String", "member" : "cc.sven.bdd.BDD.toString", "link" : "cc\/sven\/bdd\/BDD.html#toString(c:Boolean):String", "kind" : "abstract def"}, {"label" : "compl", "tail" : ": Boolean", "member" : "cc.sven.bdd.BDD.compl", "link" : "cc\/sven\/bdd\/BDD.html#compl:Boolean", "kind" : "abstract val"}, {"label" : "tag", "tail" : ": Int", "member" : "cc.sven.bdd.BDD.tag", "link" : "cc\/sven\/bdd\/BDD.html#tag:Int", "kind" : "abstract val"}, {"label" : "nodecount", "tail" : ": Long", "member" : "cc.sven.bdd.BDD.nodecount", "link" : "cc\/sven\/bdd\/BDD.html#nodecount:Long", "kind" : "abstract val"}, {"label" : "count", "tail" : ": Long", "member" : "cc.sven.bdd.BDD.count", "link" : "cc\/sven\/bdd\/BDD.html#count:Long", "kind" : "abstract val"}, {"label" : "depth", "tail" : ": Int", "member" : "cc.sven.bdd.BDD.depth", "link" : "cc\/sven\/bdd\/BDD.html#depth:Int", "kind" : "abstract val"}], "shortDescription" : "Trait of BDD objects.", "trait" : "cc\/sven\/bdd\/BDD.html", "kind" : "trait"}, {"name" : "cc.sven.bdd.CBDD", "shortDescription" : "", "object" : "cc\/sven\/bdd\/CBDD$.html", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "cc.sven.bdd.CBDD.hashCode", "link" : "cc\/sven\/bdd\/CBDD.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "cc.sven.bdd.CBDD.equals", "link" : "cc\/sven\/bdd\/CBDD.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "cc.sven.bdd.CBDD.toString", "link" : "cc\/sven\/bdd\/CBDD.html#toString():String", "kind" : "def"}, {"label" : "widenPrecisionTree", "tail" : "(that: CBDD, precTree: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.widenPrecisionTree", "link" : "cc\/sven\/bdd\/CBDD.html#widenPrecisionTree(that:cc.sven.bdd.CBDD,precTree:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "updatePrecisionTree", "tail" : "(a: CBDD, b: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.updatePrecisionTree", "link" : "cc\/sven\/bdd\/CBDD.html#updatePrecisionTree(a:cc.sven.bdd.CBDD,b:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "widenNaive", "tail" : "(that: CBDD, precision: Int): CBDD", "member" : "cc.sven.bdd.CBDD.widenNaive", "link" : "cc\/sven\/bdd\/CBDD.html#widenNaive(that:cc.sven.bdd.CBDD,precision:Int):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "replaceWith", "tail" : "(toReplace: CBDD, toReplaceWith: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.replaceWith", "link" : "cc\/sven\/bdd\/CBDD.html#replaceWith(toReplace:cc.sven.bdd.CBDD,toReplaceWith:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "dropOr", "tail" : "(toDrop: Int): CBDD", "member" : "cc.sven.bdd.CBDD.dropOr", "link" : "cc\/sven\/bdd\/CBDD.html#dropOr(toDrop:Int):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "drop", "tail" : "(toDrop: Int, acc: A, mapF: (CBDD) ⇒ A, reduceF: (A, A) ⇒ A): A", "member" : "cc.sven.bdd.CBDD.drop", "link" : "cc\/sven\/bdd\/CBDD.html#drop[A](toDrop:Int,acc:A,mapF:cc.sven.bdd.CBDD=>A,reduceF:(A,A)=>A):A", "kind" : "def"}, {"label" : "take", "tail" : "(toTake: Int): CBDD", "member" : "cc.sven.bdd.CBDD.take", "link" : "cc\/sven\/bdd\/CBDD.html#take(toTake:Int):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "doesImply", "tail" : "(that: CBDD): Boolean", "member" : "cc.sven.bdd.CBDD.doesImply", "link" : "cc\/sven\/bdd\/CBDD.html#doesImply(that:cc.sven.bdd.CBDD):Boolean", "kind" : "def"}, {"label" : "randomTruePath", "tail" : "(): List[Boolean]", "member" : "cc.sven.bdd.CBDD.randomTruePath", "link" : "cc\/sven\/bdd\/CBDD.html#randomTruePath():List[Boolean]", "kind" : "def"}, {"label" : "truePaths", "tail" : "(): Stream[List[Boolean]]", "member" : "cc.sven.bdd.CBDD.truePaths", "link" : "cc\/sven\/bdd\/CBDD.html#truePaths:scala.collection.immutable.Stream[List[Boolean]]", "kind" : "def"}, {"label" : "falseMost", "tail" : "(): Option[List[Boolean]]", "member" : "cc.sven.bdd.CBDD.falseMost", "link" : "cc\/sven\/bdd\/CBDD.html#falseMost:Option[List[Boolean]]", "kind" : "def"}, {"label" : "trueMost", "tail" : "(): Option[List[Boolean]]", "member" : "cc.sven.bdd.CBDD.trueMost", "link" : "cc\/sven\/bdd\/CBDD.html#trueMost:Option[List[Boolean]]", "kind" : "def"}, {"label" : "partialEval", "tail" : "(bs: List[Boolean]): Option[CBDD]", "member" : "cc.sven.bdd.CBDD.partialEval", "link" : "cc\/sven\/bdd\/CBDD.html#partialEval(bs:List[Boolean]):Option[cc.sven.bdd.CBDD]", "kind" : "def"}, {"label" : "implies", "tail" : "(that: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.implies", "link" : "cc\/sven\/bdd\/CBDD.html#implies(that:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "||", "tail" : "(that: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.||", "link" : "cc\/sven\/bdd\/CBDD.html#||(that:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "&&", "tail" : "(that: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.&&", "link" : "cc\/sven\/bdd\/CBDD.html#&&(that:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "ite", "tail" : "(t: CBDD, e: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.ite", "link" : "cc\/sven\/bdd\/CBDD.html#ite(t:cc.sven.bdd.CBDD,e:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "nodecount", "tail" : "(): Long", "member" : "cc.sven.bdd.CBDD.nodecount", "link" : "cc\/sven\/bdd\/CBDD.html#nodecount:Long", "kind" : "def"}, {"label" : "count", "tail" : "(): Long", "member" : "cc.sven.bdd.CBDD.count", "link" : "cc\/sven\/bdd\/CBDD.html#count:Long", "kind" : "def"}, {"label" : "depth", "tail" : "(): Int", "member" : "cc.sven.bdd.CBDD.depth", "link" : "cc\/sven\/bdd\/CBDD.html#depth:Int", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): CBDD", "member" : "cc.sven.bdd.CBDD.unary_!", "link" : "cc\/sven\/bdd\/CBDD.html#unary_!:cc.sven.bdd.CBDD", "kind" : "def"}, {"member" : "cc.sven.bdd.CBDD#<init>", "error" : "unsupported entity"}, {"label" : "compl", "tail" : ": Boolean", "member" : "cc.sven.bdd.CBDD.compl", "link" : "cc\/sven\/bdd\/CBDD.html#compl:Boolean", "kind" : "val"}, {"label" : "bdd", "tail" : ": BDD", "member" : "cc.sven.bdd.CBDD.bdd", "link" : "cc\/sven\/bdd\/CBDD.html#bdd:cc.sven.bdd.BDD", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bdd\/CBDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bdd\/CBDD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bdd\/CBDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bdd\/CBDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bdd\/CBDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bdd\/CBDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bdd\/CBDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/CBDD.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/CBDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/CBDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bdd\/CBDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bdd\/CBDD.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bdd\/CBDD.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bdd\/CBDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bdd\/CBDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bdd\/CBDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "sizeBigInt", "tail" : "(a: CBDD, bits: Int): BigInt", "member" : "cc.sven.bdd.CBDD.sizeBigInt", "link" : "cc\/sven\/bdd\/CBDD$.html#sizeBigInt(a:cc.sven.bdd.CBDD,bits:Int):BigInt", "kind" : "def"}, {"label" : "bNot", "tail" : "(op1: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.bNot", "link" : "cc\/sven\/bdd\/CBDD$.html#bNot(op1:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "bXOr", "tail" : "(op1: CBDD, op2: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.bXOr", "link" : "cc\/sven\/bdd\/CBDD$.html#bXOr(op1:cc.sven.bdd.CBDD,op2:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "bOr", "tail" : "(op1: CBDD, op2: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.bOr", "link" : "cc\/sven\/bdd\/CBDD$.html#bOr(op1:cc.sven.bdd.CBDD,op2:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "bAnd", "tail" : "(op1: CBDD, op2: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.bAnd", "link" : "cc\/sven\/bdd\/CBDD$.html#bAnd(op1:cc.sven.bdd.CBDD,op2:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "bitwiseOp", "tail" : "(op: (Boolean, Boolean) ⇒ Boolean)(op1: CBDD, op2: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.bitwiseOp", "link" : "cc\/sven\/bdd\/CBDD$.html#bitwiseOp(op:(Boolean,Boolean)=>Boolean)(op1:cc.sven.bdd.CBDD,op2:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "negate", "tail" : "(bits: Int, bdd: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.negate", "link" : "cc\/sven\/bdd\/CBDD$.html#negate(bits:Int,bdd:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "constructStridedInterval", "tail" : "(start: Long, count: Long, stride: Long, height: Int): CBDD", "member" : "cc.sven.bdd.CBDD.constructStridedInterval", "link" : "cc\/sven\/bdd\/CBDD$.html#constructStridedInterval(start:Long,count:Long,stride:Long,height:Int):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "plus", "tail" : "(op1: CBDD, op2: CBDD, depth: Int): CBDDTuple", "member" : "cc.sven.bdd.CBDD.plus", "link" : "cc\/sven\/bdd\/CBDD$.html#plus(op1:cc.sven.bdd.CBDD,op2:cc.sven.bdd.CBDD,depth:Int):cc.sven.bdd.CBDD.CBDDTuple", "kind" : "def"}, {"label" : "addMerge", "tail" : "(ff: CBDDTuple, ft: CBDDTuple, tf: CBDDTuple, tt: CBDDTuple): CBDDTuple", "member" : "cc.sven.bdd.CBDD.addMerge", "link" : "cc\/sven\/bdd\/CBDD$.html#addMerge(ff:cc.sven.bdd.CBDD.CBDDTuple,ft:cc.sven.bdd.CBDD.CBDDTuple,tf:cc.sven.bdd.CBDD.CBDDTuple,tt:cc.sven.bdd.CBDD.CBDDTuple):cc.sven.bdd.CBDD.CBDDTuple", "kind" : "def"}, {"label" : "CBDDTuple", "tail" : "", "member" : "cc.sven.bdd.CBDD.CBDDTuple", "link" : "cc\/sven\/bdd\/CBDD$.html#CBDDTuple=(cc.sven.bdd.CBDD,cc.sven.bdd.CBDD)", "kind" : "type"}, {"label" : "union3", "tail" : "(a: CBDD, b: CBDD, c: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.union3", "link" : "cc\/sven\/bdd\/CBDD$.html#union3(a:cc.sven.bdd.CBDD,b:cc.sven.bdd.CBDD,c:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "strided", "tail" : "(depth: Int, stride: Int): CBDD", "member" : "cc.sven.bdd.CBDD.strided", "link" : "cc\/sven\/bdd\/CBDD$.html#strided(depth:Int,stride:Int):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "apply", "tail" : "(path1: List[Boolean], path2: List[Boolean]): CBDD", "member" : "cc.sven.bdd.CBDD.apply", "link" : "cc\/sven\/bdd\/CBDD$.html#apply(path1:List[Boolean],path2:List[Boolean]):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "apply", "tail" : "(path: List[Boolean], set: CBDD, uset: CBDD, terminal: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.apply", "link" : "cc\/sven\/bdd\/CBDD$.html#apply(path:List[Boolean],set:cc.sven.bdd.CBDD,uset:cc.sven.bdd.CBDD,terminal:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "apply", "tail" : "(bits: List[Boolean]): CBDD", "member" : "cc.sven.bdd.CBDD.apply", "link" : "cc\/sven\/bdd\/CBDD$.html#apply(bits:List[Boolean]):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bdd\/CBDD$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bdd\/CBDD$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bdd\/CBDD$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bdd\/CBDD$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bdd\/CBDD$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bdd\/CBDD$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bdd\/CBDD$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/CBDD$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/CBDD$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/CBDD$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bdd\/CBDD$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bdd\/CBDD$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bdd\/CBDD$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bdd\/CBDD$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bdd\/CBDD$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bdd\/CBDD$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bdd\/CBDD$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bdd\/CBDD$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bdd\/CBDD$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/bdd\/CBDD.html", "kind" : "class"}, {"name" : "cc.sven.bdd.CBDDIterator", "shortDescription" : "", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "cc\/sven\/bdd\/CBDDIterator.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "next", "tail" : "(): List[Boolean]", "member" : "cc.sven.bdd.CBDDIterator.next", "link" : "cc\/sven\/bdd\/CBDDIterator.html#next():List[Boolean]", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "cc.sven.bdd.CBDDIterator.hasNext", "link" : "cc\/sven\/bdd\/CBDDIterator.html#hasNext():Boolean", "kind" : "def"}, {"member" : "cc.sven.bdd.CBDDIterator#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[List[Boolean]]", "member" : "scala.collection.Iterator.toStream", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[List[Boolean]]", "member" : "scala.collection.Iterator.toIterator", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[List[Boolean]]", "member" : "scala.collection.Iterator.toTraversable", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "cc\/sven\/bdd\/CBDDIterator.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "cc\/sven\/bdd\/CBDDIterator.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "cc\/sven\/bdd\/CBDDIterator.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[List[Boolean]], Iterator[List[Boolean]])", "member" : "scala.collection.Iterator.duplicate", "link" : "cc\/sven\/bdd\/CBDDIterator.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "cc\/sven\/bdd\/CBDDIterator.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "cc\/sven\/bdd\/CBDDIterator.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "cc\/sven\/bdd\/CBDDIterator.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[List[Boolean]]", "member" : "scala.collection.Iterator.buffered", "link" : "cc\/sven\/bdd\/CBDDIterator.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "cc\/sven\/bdd\/CBDDIterator.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "cc\/sven\/bdd\/CBDDIterator.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (List[Boolean]) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "cc\/sven\/bdd\/CBDDIterator.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (List[Boolean]) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "cc\/sven\/bdd\/CBDDIterator.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (List[Boolean]) ⇒ Boolean): Option[List[Boolean]]", "member" : "scala.collection.Iterator.find", "link" : "cc\/sven\/bdd\/CBDDIterator.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "cc\/sven\/bdd\/CBDDIterator.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (List[Boolean]) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "cc\/sven\/bdd\/CBDDIterator.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (List[Boolean]) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "cc\/sven\/bdd\/CBDDIterator.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (List[Boolean]) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "cc\/sven\/bdd\/CBDDIterator.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "cc\/sven\/bdd\/CBDDIterator.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(List[Boolean], Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "cc\/sven\/bdd\/CBDDIterator.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "cc\/sven\/bdd\/CBDDIterator.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(List[Boolean], B)]", "member" : "scala.collection.Iterator.zip", "link" : "cc\/sven\/bdd\/CBDDIterator.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (List[Boolean]) ⇒ Boolean): Iterator[List[Boolean]]", "member" : "scala.collection.Iterator.dropWhile", "link" : "cc\/sven\/bdd\/CBDDIterator.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (List[Boolean]) ⇒ Boolean): (Iterator[List[Boolean]], Iterator[List[Boolean]])", "member" : "scala.collection.Iterator.span", "link" : "cc\/sven\/bdd\/CBDDIterator.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (List[Boolean]) ⇒ Boolean): (Iterator[List[Boolean]], Iterator[List[Boolean]])", "member" : "scala.collection.Iterator.partition", "link" : "cc\/sven\/bdd\/CBDDIterator.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (List[Boolean]) ⇒ Boolean): Iterator[List[Boolean]]", "member" : "scala.collection.Iterator.takeWhile", "link" : "cc\/sven\/bdd\/CBDDIterator.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (List[Boolean], B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "cc\/sven\/bdd\/CBDDIterator.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, List[Boolean]) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "cc\/sven\/bdd\/CBDDIterator.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[List[Boolean], B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "cc\/sven\/bdd\/CBDDIterator.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (List[Boolean]) ⇒ Boolean): Iterator[List[Boolean]]", "member" : "scala.collection.Iterator.filterNot", "link" : "cc\/sven\/bdd\/CBDDIterator.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (List[Boolean]) ⇒ Boolean): Iterator[List[Boolean]]", "member" : "scala.collection.Iterator.withFilter", "link" : "cc\/sven\/bdd\/CBDDIterator.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (List[Boolean], B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "cc\/sven\/bdd\/CBDDIterator.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (List[Boolean]) ⇒ Boolean): Iterator[List[Boolean]]", "member" : "scala.collection.Iterator.filter", "link" : "cc\/sven\/bdd\/CBDDIterator.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (List[Boolean]) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "cc\/sven\/bdd\/CBDDIterator.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "cc\/sven\/bdd\/CBDDIterator.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (List[Boolean]) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "cc\/sven\/bdd\/CBDDIterator.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[List[Boolean]]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "cc\/sven\/bdd\/CBDDIterator.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[List[Boolean]]", "member" : "scala.collection.Iterator.slice", "link" : "cc\/sven\/bdd\/CBDDIterator.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[List[Boolean]]", "member" : "scala.collection.Iterator.drop", "link" : "cc\/sven\/bdd\/CBDDIterator.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[List[Boolean]]", "member" : "scala.collection.Iterator.take", "link" : "cc\/sven\/bdd\/CBDDIterator.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "cc\/sven\/bdd\/CBDDIterator.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "cc\/sven\/bdd\/CBDDIterator.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "cc\/sven\/bdd\/CBDDIterator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[List[Boolean]]", "member" : "scala.collection.Iterator.seq", "link" : "cc\/sven\/bdd\/CBDDIterator.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/bdd\/CBDDIterator.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/bdd\/CBDDIterator.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/bdd\/CBDDIterator.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/bdd\/CBDDIterator.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/bdd\/CBDDIterator.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/bdd\/CBDDIterator.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[List[Boolean], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, List[Boolean], Col[List[Boolean]]]): Col[List[Boolean]]", "member" : "scala.collection.TraversableOnce.to", "link" : "cc\/sven\/bdd\/CBDDIterator.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[List[Boolean]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[List[Boolean]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[List[Boolean]]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[List[Boolean]]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[List[Boolean]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "cc\/sven\/bdd\/CBDDIterator.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/bdd\/CBDDIterator.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/bdd\/CBDDIterator.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "cc\/sven\/bdd\/CBDDIterator.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (List[Boolean]) ⇒ B)(cmp: Ordering[B]): List[Boolean]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "cc\/sven\/bdd\/CBDDIterator.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (List[Boolean]) ⇒ B)(cmp: Ordering[B]): List[Boolean]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "cc\/sven\/bdd\/CBDDIterator.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): List[Boolean]", "member" : "scala.collection.TraversableOnce.max", "link" : "cc\/sven\/bdd\/CBDDIterator.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): List[Boolean]", "member" : "scala.collection.TraversableOnce.min", "link" : "cc\/sven\/bdd\/CBDDIterator.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "cc\/sven\/bdd\/CBDDIterator.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "cc\/sven\/bdd\/CBDDIterator.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, List[Boolean]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "cc\/sven\/bdd\/CBDDIterator.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "cc\/sven\/bdd\/CBDDIterator.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "cc\/sven\/bdd\/CBDDIterator.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "cc\/sven\/bdd\/CBDDIterator.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (List[Boolean], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "cc\/sven\/bdd\/CBDDIterator.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, List[Boolean]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "cc\/sven\/bdd\/CBDDIterator.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (List[Boolean], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "cc\/sven\/bdd\/CBDDIterator.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, List[Boolean]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "cc\/sven\/bdd\/CBDDIterator.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (List[Boolean], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "cc\/sven\/bdd\/CBDDIterator.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, List[Boolean]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "cc\/sven\/bdd\/CBDDIterator.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (List[Boolean], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "cc\/sven\/bdd\/CBDDIterator.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, List[Boolean]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "cc\/sven\/bdd\/CBDDIterator.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[List[Boolean], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "cc\/sven\/bdd\/CBDDIterator.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (List[Boolean]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "cc\/sven\/bdd\/CBDDIterator.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "cc\/sven\/bdd\/CBDDIterator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "cc\/sven\/bdd\/CBDDIterator.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[List[Boolean]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "cc\/sven\/bdd\/CBDDIterator.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "cc\/sven\/bdd\/CBDDIterator.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bdd\/CBDDIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bdd\/CBDDIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bdd\/CBDDIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bdd\/CBDDIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bdd\/CBDDIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bdd\/CBDDIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bdd\/CBDDIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/CBDDIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/CBDDIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/CBDDIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bdd\/CBDDIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bdd\/CBDDIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bdd\/CBDDIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bdd\/CBDDIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bdd\/CBDDIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bdd\/CBDDIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bdd\/CBDDIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bdd\/CBDDIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/bdd\/CBDDIterator.html", "kind" : "class"}, {"name" : "cc.sven.bdd.False", "shortDescription" : "Terminal node object of CBDDs holding \"false\".", "object" : "cc\/sven\/bdd\/False$.html", "members_object" : [{"label" : "unapply", "tail" : "(cbdd: CBDD): Option[CBDD]", "member" : "cc.sven.bdd.False.unapply", "link" : "cc\/sven\/bdd\/False$.html#unapply(cbdd:cc.sven.bdd.CBDD):Option[cc.sven.bdd.CBDD]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "cc.sven.bdd.CBDD.hashCode", "link" : "cc\/sven\/bdd\/False$.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "cc.sven.bdd.CBDD.equals", "link" : "cc\/sven\/bdd\/False$.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "cc.sven.bdd.CBDD.toString", "link" : "cc\/sven\/bdd\/False$.html#toString():String", "kind" : "def"}, {"label" : "widenPrecisionTree", "tail" : "(that: CBDD, precTree: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.widenPrecisionTree", "link" : "cc\/sven\/bdd\/False$.html#widenPrecisionTree(that:cc.sven.bdd.CBDD,precTree:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "updatePrecisionTree", "tail" : "(a: CBDD, b: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.updatePrecisionTree", "link" : "cc\/sven\/bdd\/False$.html#updatePrecisionTree(a:cc.sven.bdd.CBDD,b:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "widenNaive", "tail" : "(that: CBDD, precision: Int): CBDD", "member" : "cc.sven.bdd.CBDD.widenNaive", "link" : "cc\/sven\/bdd\/False$.html#widenNaive(that:cc.sven.bdd.CBDD,precision:Int):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "replaceWith", "tail" : "(toReplace: CBDD, toReplaceWith: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.replaceWith", "link" : "cc\/sven\/bdd\/False$.html#replaceWith(toReplace:cc.sven.bdd.CBDD,toReplaceWith:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "dropOr", "tail" : "(toDrop: Int): CBDD", "member" : "cc.sven.bdd.CBDD.dropOr", "link" : "cc\/sven\/bdd\/False$.html#dropOr(toDrop:Int):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "drop", "tail" : "(toDrop: Int, acc: A, mapF: (CBDD) ⇒ A, reduceF: (A, A) ⇒ A): A", "member" : "cc.sven.bdd.CBDD.drop", "link" : "cc\/sven\/bdd\/False$.html#drop[A](toDrop:Int,acc:A,mapF:cc.sven.bdd.CBDD=>A,reduceF:(A,A)=>A):A", "kind" : "def"}, {"label" : "take", "tail" : "(toTake: Int): CBDD", "member" : "cc.sven.bdd.CBDD.take", "link" : "cc\/sven\/bdd\/False$.html#take(toTake:Int):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "doesImply", "tail" : "(that: CBDD): Boolean", "member" : "cc.sven.bdd.CBDD.doesImply", "link" : "cc\/sven\/bdd\/False$.html#doesImply(that:cc.sven.bdd.CBDD):Boolean", "kind" : "def"}, {"label" : "randomTruePath", "tail" : "(): List[Boolean]", "member" : "cc.sven.bdd.CBDD.randomTruePath", "link" : "cc\/sven\/bdd\/False$.html#randomTruePath():List[Boolean]", "kind" : "def"}, {"label" : "truePaths", "tail" : "(): Stream[List[Boolean]]", "member" : "cc.sven.bdd.CBDD.truePaths", "link" : "cc\/sven\/bdd\/False$.html#truePaths:scala.collection.immutable.Stream[List[Boolean]]", "kind" : "def"}, {"label" : "falseMost", "tail" : "(): Option[List[Boolean]]", "member" : "cc.sven.bdd.CBDD.falseMost", "link" : "cc\/sven\/bdd\/False$.html#falseMost:Option[List[Boolean]]", "kind" : "def"}, {"label" : "trueMost", "tail" : "(): Option[List[Boolean]]", "member" : "cc.sven.bdd.CBDD.trueMost", "link" : "cc\/sven\/bdd\/False$.html#trueMost:Option[List[Boolean]]", "kind" : "def"}, {"label" : "partialEval", "tail" : "(bs: List[Boolean]): Option[CBDD]", "member" : "cc.sven.bdd.CBDD.partialEval", "link" : "cc\/sven\/bdd\/False$.html#partialEval(bs:List[Boolean]):Option[cc.sven.bdd.CBDD]", "kind" : "def"}, {"label" : "implies", "tail" : "(that: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.implies", "link" : "cc\/sven\/bdd\/False$.html#implies(that:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "||", "tail" : "(that: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.||", "link" : "cc\/sven\/bdd\/False$.html#||(that:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "&&", "tail" : "(that: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.&&", "link" : "cc\/sven\/bdd\/False$.html#&&(that:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "ite", "tail" : "(t: CBDD, e: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.ite", "link" : "cc\/sven\/bdd\/False$.html#ite(t:cc.sven.bdd.CBDD,e:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "nodecount", "tail" : "(): Long", "member" : "cc.sven.bdd.CBDD.nodecount", "link" : "cc\/sven\/bdd\/False$.html#nodecount:Long", "kind" : "def"}, {"label" : "count", "tail" : "(): Long", "member" : "cc.sven.bdd.CBDD.count", "link" : "cc\/sven\/bdd\/False$.html#count:Long", "kind" : "def"}, {"label" : "depth", "tail" : "(): Int", "member" : "cc.sven.bdd.CBDD.depth", "link" : "cc\/sven\/bdd\/False$.html#depth:Int", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): CBDD", "member" : "cc.sven.bdd.CBDD.unary_!", "link" : "cc\/sven\/bdd\/False$.html#unary_!:cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "compl", "tail" : ": Boolean", "member" : "cc.sven.bdd.CBDD.compl", "link" : "cc\/sven\/bdd\/False$.html#compl:Boolean", "kind" : "val"}, {"label" : "bdd", "tail" : ": BDD", "member" : "cc.sven.bdd.CBDD.bdd", "link" : "cc\/sven\/bdd\/False$.html#bdd:cc.sven.bdd.BDD", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bdd\/False$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bdd\/False$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bdd\/False$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bdd\/False$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bdd\/False$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bdd\/False$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bdd\/False$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/False$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/False$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/False$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bdd\/False$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bdd\/False$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bdd\/False$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bdd\/False$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bdd\/False$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bdd\/False$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.bdd.Node", "shortDescription" : "CBDD node object.", "object" : "cc\/sven\/bdd\/Node$.html", "members_class" : [{"label" : "nodecount", "tail" : ": Long", "member" : "cc.sven.bdd.Node.nodecount", "link" : "cc\/sven\/bdd\/Node.html#nodecount:Long", "kind" : "val"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "cc.sven.bdd.Node.equals", "link" : "cc\/sven\/bdd\/Node.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "cc.sven.bdd.Node.hashCode", "link" : "cc\/sven\/bdd\/Node.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(c: Boolean): String", "member" : "cc.sven.bdd.Node.toString", "link" : "cc\/sven\/bdd\/Node.html#toString(c:Boolean):String", "kind" : "def"}, {"label" : "count", "tail" : ": Long", "member" : "cc.sven.bdd.Node.count", "link" : "cc\/sven\/bdd\/Node.html#count:Long", "kind" : "val"}, {"label" : "depth", "tail" : ": Int", "member" : "cc.sven.bdd.Node.depth", "link" : "cc\/sven\/bdd\/Node.html#depth:Int", "kind" : "val"}, {"member" : "cc.sven.bdd.Node#<init>", "error" : "unsupported entity"}, {"label" : "tag", "tail" : ": Int", "member" : "cc.sven.bdd.Node.tag", "link" : "cc\/sven\/bdd\/Node.html#tag:Int", "kind" : "val"}, {"label" : "compl", "tail" : ": Boolean", "member" : "cc.sven.bdd.Node.compl", "link" : "cc\/sven\/bdd\/Node.html#compl:Boolean", "kind" : "val"}, {"label" : "uset", "tail" : ": BDD", "member" : "cc.sven.bdd.Node.uset", "link" : "cc\/sven\/bdd\/Node.html#uset:cc.sven.bdd.BDD", "kind" : "val"}, {"label" : "set", "tail" : ": BDD", "member" : "cc.sven.bdd.Node.set", "link" : "cc\/sven\/bdd\/Node.html#set:cc.sven.bdd.BDD", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bdd\/Node.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bdd\/Node.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bdd\/Node.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bdd\/Node.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bdd\/Node.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bdd\/Node.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bdd\/Node.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/Node.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/Node.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/Node.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bdd\/Node.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bdd\/Node.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bdd\/Node.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bdd\/Node.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bdd\/Node.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bdd\/Node.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bdd\/Node.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(cbdd: CBDD): Option[(CBDD, CBDD)]", "member" : "cc.sven.bdd.Node.unapply", "link" : "cc\/sven\/bdd\/Node$.html#unapply(cbdd:cc.sven.bdd.CBDD):Option[(cc.sven.bdd.CBDD,cc.sven.bdd.CBDD)]", "kind" : "def"}, {"label" : "apply", "tail" : "(set: CBDD, uset: CBDD): CBDD", "member" : "cc.sven.bdd.Node.apply", "link" : "cc\/sven\/bdd\/Node$.html#apply(set:cc.sven.bdd.CBDD,uset:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "status", "tail" : "(): String", "member" : "cc.sven.bdd.Node.status", "link" : "cc\/sven\/bdd\/Node$.html#status():String", "kind" : "def"}, {"label" : "nodeCount", "tail" : "(): (BigInt, Boolean)", "member" : "cc.sven.bdd.Node.nodeCount", "link" : "cc\/sven\/bdd\/Node$.html#nodeCount():(BigInt,Boolean)", "kind" : "def"}, {"label" : "cacheSize", "tail" : "(): Int", "member" : "cc.sven.bdd.Node.cacheSize", "link" : "cc\/sven\/bdd\/Node$.html#cacheSize():Int", "kind" : "def"}, {"label" : "cache", "tail" : ": WeakHashMap[BDD, WeakReference[BDD]]", "member" : "cc.sven.bdd.Node.cache", "link" : "cc\/sven\/bdd\/Node$.html#cache:scala.collection.mutable.WeakHashMap[cc.sven.bdd.BDD,scala.ref.WeakReference[cc.sven.bdd.BDD]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bdd\/Node$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bdd\/Node$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bdd\/Node$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bdd\/Node$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bdd\/Node$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bdd\/Node$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bdd\/Node$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/Node$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/Node$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/Node$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bdd\/Node$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bdd\/Node$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bdd\/Node$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bdd\/Node$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bdd\/Node$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bdd\/Node$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bdd\/Node$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bdd\/Node$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bdd\/Node$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/bdd\/Node.html", "kind" : "object"}, {"name" : "cc.sven.bdd.Terminal", "shortDescription" : "Terminal object for CBDDs.", "object" : "cc\/sven\/bdd\/Terminal$.html", "members_object" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "cc.sven.bdd.Terminal.hashCode", "link" : "cc\/sven\/bdd\/Terminal$.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(c: Boolean): String", "member" : "cc.sven.bdd.Terminal.toString", "link" : "cc\/sven\/bdd\/Terminal$.html#toString(c:Boolean):String", "kind" : "def"}, {"label" : "compl", "tail" : ": Boolean", "member" : "cc.sven.bdd.Terminal.compl", "link" : "cc\/sven\/bdd\/Terminal$.html#compl:Boolean", "kind" : "val"}, {"label" : "nodecount", "tail" : ": Long", "member" : "cc.sven.bdd.Terminal.nodecount", "link" : "cc\/sven\/bdd\/Terminal$.html#nodecount:Long", "kind" : "val"}, {"label" : "count", "tail" : ": Long", "member" : "cc.sven.bdd.Terminal.count", "link" : "cc\/sven\/bdd\/Terminal$.html#count:Long", "kind" : "val"}, {"label" : "tag", "tail" : ": Int", "member" : "cc.sven.bdd.Terminal.tag", "link" : "cc\/sven\/bdd\/Terminal$.html#tag:Int", "kind" : "val"}, {"label" : "depth", "tail" : ": Int", "member" : "cc.sven.bdd.Terminal.depth", "link" : "cc\/sven\/bdd\/Terminal$.html#depth:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bdd\/Terminal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bdd\/Terminal$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bdd\/Terminal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bdd\/Terminal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bdd\/Terminal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bdd\/Terminal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bdd\/Terminal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/Terminal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/Terminal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/Terminal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bdd\/Terminal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bdd\/Terminal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bdd\/Terminal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bdd\/Terminal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bdd\/Terminal$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bdd\/Terminal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bdd\/Terminal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bdd\/Terminal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.bdd.True", "shortDescription" : "Terminal node object of CBDDs holding \"true\".", "object" : "cc\/sven\/bdd\/True$.html", "members_object" : [{"label" : "unapply", "tail" : "(cbdd: CBDD): Option[CBDD]", "member" : "cc.sven.bdd.True.unapply", "link" : "cc\/sven\/bdd\/True$.html#unapply(cbdd:cc.sven.bdd.CBDD):Option[cc.sven.bdd.CBDD]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "cc.sven.bdd.CBDD.hashCode", "link" : "cc\/sven\/bdd\/True$.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "cc.sven.bdd.CBDD.equals", "link" : "cc\/sven\/bdd\/True$.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "cc.sven.bdd.CBDD.toString", "link" : "cc\/sven\/bdd\/True$.html#toString():String", "kind" : "def"}, {"label" : "widenPrecisionTree", "tail" : "(that: CBDD, precTree: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.widenPrecisionTree", "link" : "cc\/sven\/bdd\/True$.html#widenPrecisionTree(that:cc.sven.bdd.CBDD,precTree:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "updatePrecisionTree", "tail" : "(a: CBDD, b: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.updatePrecisionTree", "link" : "cc\/sven\/bdd\/True$.html#updatePrecisionTree(a:cc.sven.bdd.CBDD,b:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "widenNaive", "tail" : "(that: CBDD, precision: Int): CBDD", "member" : "cc.sven.bdd.CBDD.widenNaive", "link" : "cc\/sven\/bdd\/True$.html#widenNaive(that:cc.sven.bdd.CBDD,precision:Int):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "replaceWith", "tail" : "(toReplace: CBDD, toReplaceWith: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.replaceWith", "link" : "cc\/sven\/bdd\/True$.html#replaceWith(toReplace:cc.sven.bdd.CBDD,toReplaceWith:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "dropOr", "tail" : "(toDrop: Int): CBDD", "member" : "cc.sven.bdd.CBDD.dropOr", "link" : "cc\/sven\/bdd\/True$.html#dropOr(toDrop:Int):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "drop", "tail" : "(toDrop: Int, acc: A, mapF: (CBDD) ⇒ A, reduceF: (A, A) ⇒ A): A", "member" : "cc.sven.bdd.CBDD.drop", "link" : "cc\/sven\/bdd\/True$.html#drop[A](toDrop:Int,acc:A,mapF:cc.sven.bdd.CBDD=>A,reduceF:(A,A)=>A):A", "kind" : "def"}, {"label" : "take", "tail" : "(toTake: Int): CBDD", "member" : "cc.sven.bdd.CBDD.take", "link" : "cc\/sven\/bdd\/True$.html#take(toTake:Int):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "doesImply", "tail" : "(that: CBDD): Boolean", "member" : "cc.sven.bdd.CBDD.doesImply", "link" : "cc\/sven\/bdd\/True$.html#doesImply(that:cc.sven.bdd.CBDD):Boolean", "kind" : "def"}, {"label" : "randomTruePath", "tail" : "(): List[Boolean]", "member" : "cc.sven.bdd.CBDD.randomTruePath", "link" : "cc\/sven\/bdd\/True$.html#randomTruePath():List[Boolean]", "kind" : "def"}, {"label" : "truePaths", "tail" : "(): Stream[List[Boolean]]", "member" : "cc.sven.bdd.CBDD.truePaths", "link" : "cc\/sven\/bdd\/True$.html#truePaths:scala.collection.immutable.Stream[List[Boolean]]", "kind" : "def"}, {"label" : "falseMost", "tail" : "(): Option[List[Boolean]]", "member" : "cc.sven.bdd.CBDD.falseMost", "link" : "cc\/sven\/bdd\/True$.html#falseMost:Option[List[Boolean]]", "kind" : "def"}, {"label" : "trueMost", "tail" : "(): Option[List[Boolean]]", "member" : "cc.sven.bdd.CBDD.trueMost", "link" : "cc\/sven\/bdd\/True$.html#trueMost:Option[List[Boolean]]", "kind" : "def"}, {"label" : "partialEval", "tail" : "(bs: List[Boolean]): Option[CBDD]", "member" : "cc.sven.bdd.CBDD.partialEval", "link" : "cc\/sven\/bdd\/True$.html#partialEval(bs:List[Boolean]):Option[cc.sven.bdd.CBDD]", "kind" : "def"}, {"label" : "implies", "tail" : "(that: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.implies", "link" : "cc\/sven\/bdd\/True$.html#implies(that:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "||", "tail" : "(that: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.||", "link" : "cc\/sven\/bdd\/True$.html#||(that:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "&&", "tail" : "(that: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.&&", "link" : "cc\/sven\/bdd\/True$.html#&&(that:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "ite", "tail" : "(t: CBDD, e: CBDD): CBDD", "member" : "cc.sven.bdd.CBDD.ite", "link" : "cc\/sven\/bdd\/True$.html#ite(t:cc.sven.bdd.CBDD,e:cc.sven.bdd.CBDD):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "nodecount", "tail" : "(): Long", "member" : "cc.sven.bdd.CBDD.nodecount", "link" : "cc\/sven\/bdd\/True$.html#nodecount:Long", "kind" : "def"}, {"label" : "count", "tail" : "(): Long", "member" : "cc.sven.bdd.CBDD.count", "link" : "cc\/sven\/bdd\/True$.html#count:Long", "kind" : "def"}, {"label" : "depth", "tail" : "(): Int", "member" : "cc.sven.bdd.CBDD.depth", "link" : "cc\/sven\/bdd\/True$.html#depth:Int", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): CBDD", "member" : "cc.sven.bdd.CBDD.unary_!", "link" : "cc\/sven\/bdd\/True$.html#unary_!:cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "compl", "tail" : ": Boolean", "member" : "cc.sven.bdd.CBDD.compl", "link" : "cc\/sven\/bdd\/True$.html#compl:Boolean", "kind" : "val"}, {"label" : "bdd", "tail" : ": BDD", "member" : "cc.sven.bdd.CBDD.bdd", "link" : "cc\/sven\/bdd\/True$.html#bdd:cc.sven.bdd.BDD", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bdd\/True$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bdd\/True$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bdd\/True$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bdd\/True$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bdd\/True$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bdd\/True$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bdd\/True$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/True$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/True$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bdd\/True$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bdd\/True$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bdd\/True$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bdd\/True$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bdd\/True$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bdd\/True$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bdd\/True$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "cc.sven.misc" : [{"name" : "cc.sven.misc.Implicits", "shortDescription" : "", "object" : "cc\/sven\/misc\/Implicits$.html", "members_object" : [{"label" : "tuple2ToPair", "tail" : "(p: (A, B)): Pair[A, B]", "member" : "cc.sven.misc.Implicits.tuple2ToPair", "link" : "cc\/sven\/misc\/Implicits$.html#tuple2ToPair[A,B](p:(A,B)):cc.sven.misc.Pair[A,B]", "kind" : "def"}, {"label" : "pairToTuple2", "tail" : "(p: Pair[A, B]): (A, B)", "member" : "cc.sven.misc.Implicits.pairToTuple2", "link" : "cc\/sven\/misc\/Implicits$.html#pairToTuple2[A,B](p:cc.sven.misc.Pair[A,B]):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/misc\/Implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/misc\/Implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/misc\/Implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/misc\/Implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/misc\/Implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/misc\/Implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/misc\/Implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/Implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/Implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/Implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/misc\/Implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/misc\/Implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/misc\/Implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/misc\/Implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/misc\/Implicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/misc\/Implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/misc\/Implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/misc\/Implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/misc\/Implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.misc.JavaOrdering", "shortDescription" : "", "members_class" : [{"label" : "Ops", "tail" : "", "member" : "scala.math.Ordering.Ops", "link" : "cc\/sven\/misc\/JavaOrdering.html#OpsextendsAnyRef", "kind" : "class"}, {"member" : "cc.sven.misc.JavaOrdering#<init>", "error" : "unsupported entity"}, {"label" : "mkOrderingOps", "tail" : "(lhs: T): Ops", "member" : "scala.math.Ordering.mkOrderingOps", "link" : "cc\/sven\/misc\/JavaOrdering.html#mkOrderingOps(lhs:T):Ordering.this.Ops", "kind" : "implicit def"}, {"label" : "on", "tail" : "(f: (U) ⇒ T): Ordering[U]", "member" : "scala.math.Ordering.on", "link" : "cc\/sven\/misc\/JavaOrdering.html#on[U](f:U=>T):scala.math.Ordering[U]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Ordering[T]", "member" : "scala.math.Ordering.reverse", "link" : "cc\/sven\/misc\/JavaOrdering.html#reverse:scala.math.Ordering[T]", "kind" : "def"}, {"label" : "min", "tail" : "(x: T, y: T): T", "member" : "scala.math.Ordering.min", "link" : "cc\/sven\/misc\/JavaOrdering.html#min(x:T,y:T):T", "kind" : "def"}, {"label" : "max", "tail" : "(x: T, y: T): T", "member" : "scala.math.Ordering.max", "link" : "cc\/sven\/misc\/JavaOrdering.html#max(x:T,y:T):T", "kind" : "def"}, {"label" : "equiv", "tail" : "(x: T, y: T): Boolean", "member" : "scala.math.Ordering.equiv", "link" : "cc\/sven\/misc\/JavaOrdering.html#equiv(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(x: T, y: T): Boolean", "member" : "scala.math.Ordering.gt", "link" : "cc\/sven\/misc\/JavaOrdering.html#gt(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(x: T, y: T): Boolean", "member" : "scala.math.Ordering.lt", "link" : "cc\/sven\/misc\/JavaOrdering.html#lt(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "gteq", "tail" : "(x: T, y: T): Boolean", "member" : "scala.math.Ordering.gteq", "link" : "cc\/sven\/misc\/JavaOrdering.html#gteq(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "lteq", "tail" : "(x: T, y: T): Boolean", "member" : "scala.math.Ordering.lteq", "link" : "cc\/sven\/misc\/JavaOrdering.html#lteq(x:T,y:T):Boolean", "kind" : "def"}, {"label" : "tryCompare", "tail" : "(x: T, y: T): Some[Int]", "member" : "scala.math.Ordering.tryCompare", "link" : "cc\/sven\/misc\/JavaOrdering.html#tryCompare(x:T,y:T):Some[Int]", "kind" : "def"}, {"label" : "thenComparingDouble", "tail" : "(arg0: ToDoubleFunction[_ >: T]): Comparator[T]", "member" : "java.util.Comparator.thenComparingDouble", "link" : "cc\/sven\/misc\/JavaOrdering.html#thenComparingDouble(x$1:java.util.function.ToDoubleFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingLong", "tail" : "(arg0: ToLongFunction[_ >: T]): Comparator[T]", "member" : "java.util.Comparator.thenComparingLong", "link" : "cc\/sven\/misc\/JavaOrdering.html#thenComparingLong(x$1:java.util.function.ToLongFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingInt", "tail" : "(arg0: ToIntFunction[_ >: T]): Comparator[T]", "member" : "java.util.Comparator.thenComparingInt", "link" : "cc\/sven\/misc\/JavaOrdering.html#thenComparingInt(x$1:java.util.function.ToIntFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: T, _ <: U]): Comparator[T]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/misc\/JavaOrdering.html#thenComparing[U<:Comparable[_>:U]](x$1:java.util.function.Function[_>:T,_<:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: T, _ <: U], arg1: Comparator[_ >: U]): Comparator[T]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/misc\/JavaOrdering.html#thenComparing[U](x$1:java.util.function.Function[_>:T,_<:U],x$2:java.util.Comparator[_>:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Comparator[_ >: T]): Comparator[T]", "member" : "java.util.Comparator.thenComparing", "link" : "cc\/sven\/misc\/JavaOrdering.html#thenComparing(x$1:java.util.Comparator[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Comparator[T]", "member" : "java.util.Comparator.reversed", "link" : "cc\/sven\/misc\/JavaOrdering.html#reversed():java.util.Comparator[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/misc\/JavaOrdering.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/misc\/JavaOrdering.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/misc\/JavaOrdering.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/misc\/JavaOrdering.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/misc\/JavaOrdering.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/misc\/JavaOrdering.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/misc\/JavaOrdering.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/JavaOrdering.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/JavaOrdering.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/JavaOrdering.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/misc\/JavaOrdering.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/misc\/JavaOrdering.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/misc\/JavaOrdering.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/misc\/JavaOrdering.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/misc\/JavaOrdering.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/misc\/JavaOrdering.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/misc\/JavaOrdering.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/misc\/JavaOrdering.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/misc\/JavaOrdering.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compare", "tail" : "(x: T, y: T): Int", "member" : "scala.math.Ordering.compare", "link" : "cc\/sven\/misc\/JavaOrdering.html#compare(x:T,y:T):Int", "kind" : "abstract def"}], "class" : "cc\/sven\/misc\/JavaOrdering.html", "kind" : "class"}, {"name" : "cc.sven.misc.ListIsMonad", "shortDescription" : "", "object" : "cc\/sven\/misc\/package$$ListIsMonad$.html", "members_object" : [{"label" : "bind", "tail" : "(ms_: List[A], k: (A) ⇒ List[B]): List[B]", "member" : "cc.sven.misc.ListIsMonad.bind", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#bind[A,B](ms_:List[A],k:A=>List[B]):List[B]", "kind" : "def"}, {"label" : "unit", "tail" : "(a: A): List[A]", "member" : "cc.sven.misc.ListIsMonad.unit", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#unit[A](a:A):List[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/misc\/package$$ListIsMonad$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.misc.Monad", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/misc\/package$$Monad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/misc\/package$$Monad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/misc\/package$$Monad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/misc\/package$$Monad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/misc\/package$$Monad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/misc\/package$$Monad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/misc\/package$$Monad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/package$$Monad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/package$$Monad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/package$$Monad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/misc\/package$$Monad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/misc\/package$$Monad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/misc\/package$$Monad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/misc\/package$$Monad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/misc\/package$$Monad.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/misc\/package$$Monad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/misc\/package$$Monad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/misc\/package$$Monad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/misc\/package$$Monad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "bind", "tail" : "(m: M[A], k: (A) ⇒ M[B]): M[B]", "member" : "cc.sven.misc.Monad.bind", "link" : "cc\/sven\/misc\/package$$Monad.html#bind[A,B](m:M[A],k:A=>M[B]):M[B]", "kind" : "abstract def"}, {"label" : "unit", "tail" : "(a: A): M[A]", "member" : "cc.sven.misc.Monad.unit", "link" : "cc\/sven\/misc\/package$$Monad.html#unit[A](a:A):M[A]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "cc\/sven\/misc\/package$$Monad$.html", "members_object" : [{"label" : "apply", "tail" : "(arg0: Monad[A]): Monad[A]", "member" : "cc.sven.misc.Monad.apply", "link" : "cc\/sven\/misc\/package$$Monad$.html#apply[A[_]](implicitevidence$1:cc.sven.misc.package.Monad[A]):cc.sven.misc.package.Monad[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/misc\/package$$Monad$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/misc\/package$$Monad$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/misc\/package$$Monad$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/misc\/package$$Monad$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/misc\/package$$Monad$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/misc\/package$$Monad$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/misc\/package$$Monad$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/package$$Monad$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/package$$Monad$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/package$$Monad$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/misc\/package$$Monad$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/misc\/package$$Monad$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/misc\/package$$Monad$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/misc\/package$$Monad$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/misc\/package$$Monad$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/misc\/package$$Monad$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/misc\/package$$Monad$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/misc\/package$$Monad$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/misc\/package$$Monad$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cc\/sven\/misc\/package$$Monad.html", "kind" : "trait"}, {"name" : "cc.sven.misc.Monadic", "shortDescription" : "", "members_class" : [{"label" : "map", "tail" : "(k: (A) ⇒ B): M[B]", "member" : "cc.sven.misc.Monadic.map", "link" : "cc\/sven\/misc\/package$$Monadic.html#map[B](k:A=>B):M[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(k: (A) ⇒ M[B]): M[B]", "member" : "cc.sven.misc.Monadic.flatMap", "link" : "cc\/sven\/misc\/package$$Monadic.html#flatMap[B](k:A=>M[B]):M[B]", "kind" : "def"}, {"member" : "cc.sven.misc.Monadic#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/misc\/package$$Monadic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/misc\/package$$Monadic.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/misc\/package$$Monadic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/misc\/package$$Monadic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/misc\/package$$Monadic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/misc\/package$$Monadic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/misc\/package$$Monadic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/package$$Monadic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/package$$Monadic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/package$$Monadic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/misc\/package$$Monadic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/misc\/package$$Monadic.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/misc\/package$$Monadic.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/misc\/package$$Monadic.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/misc\/package$$Monadic.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/misc\/package$$Monadic.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/misc\/package$$Monadic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/misc\/package$$Monadic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/misc\/package$$Monadic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/misc\/package$$Monadic.html", "kind" : "class"}, {"name" : "cc.sven.misc.Pair", "shortDescription" : "", "object" : "cc\/sven\/misc\/Pair$.html", "members_class" : [{"label" : "_2", "tail" : "(): B", "member" : "cc.sven.misc.Pair._2", "link" : "cc\/sven\/misc\/Pair.html#_2:B", "kind" : "def"}, {"label" : "_1", "tail" : "(): A", "member" : "cc.sven.misc.Pair._1", "link" : "cc\/sven\/misc\/Pair.html#_1:A", "kind" : "def"}, {"member" : "cc.sven.misc.Pair#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/misc\/Pair.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/misc\/Pair.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/misc\/Pair.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/misc\/Pair.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/misc\/Pair.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/misc\/Pair.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/misc\/Pair.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/Pair.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/Pair.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/Pair.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/misc\/Pair.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/misc\/Pair.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/misc\/Pair.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/misc\/Pair.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/misc\/Pair.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/misc\/Pair.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/misc\/Pair.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/misc\/Pair.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/misc\/Pair.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(a: A, b: B): Pair[A, B]", "member" : "cc.sven.misc.Pair.apply", "link" : "cc\/sven\/misc\/Pair$.html#apply[A,B](a:A,b:B):cc.sven.misc.Pair[A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/misc\/Pair$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/misc\/Pair$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/misc\/Pair$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/misc\/Pair$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/misc\/Pair$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/misc\/Pair$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/misc\/Pair$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/Pair$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/Pair$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/misc\/Pair$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/misc\/Pair$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/misc\/Pair$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/misc\/Pair$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/misc\/Pair$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/misc\/Pair$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/misc\/Pair$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/misc\/Pair$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/misc\/Pair$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/misc\/Pair$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/misc\/Pair.html", "kind" : "class"}], "cc.sven.bounded" : [{"name" : "cc.sven.bounded.Bounded", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/Bounded.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/Bounded.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/Bounded.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/Bounded.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/Bounded.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/Bounded.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/Bounded.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/Bounded.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/Bounded.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/Bounded.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/Bounded.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/Bounded.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/Bounded.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/Bounded.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/Bounded.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/Bounded.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/Bounded.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/Bounded.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/Bounded.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "minNotNeg", "tail" : ": T", "member" : "cc.sven.bounded.Bounded.minNotNeg", "link" : "cc\/sven\/bounded\/Bounded.html#minNotNeg:T", "kind" : "abstract val"}, {"label" : "maxNeg", "tail" : ": T", "member" : "cc.sven.bounded.Bounded.maxNeg", "link" : "cc\/sven\/bounded\/Bounded.html#maxNeg:T", "kind" : "abstract val"}, {"label" : "minBound", "tail" : ": T", "member" : "cc.sven.bounded.Bounded.minBound", "link" : "cc\/sven\/bounded\/Bounded.html#minBound:T", "kind" : "abstract val"}, {"label" : "maxBound", "tail" : ": T", "member" : "cc.sven.bounded.Bounded.maxBound", "link" : "cc\/sven\/bounded\/Bounded.html#maxBound:T", "kind" : "abstract val"}], "shortDescription" : "", "object" : "cc\/sven\/bounded\/Bounded$.html", "members_object" : [{"label" : "jLongIsBounded", "tail" : ": JJLongIsBounded", "member" : "cc.sven.bounded.Bounded.jLongIsBounded", "link" : "cc\/sven\/bounded\/Bounded$.html#jLongIsBounded:cc.sven.bounded.JJLongIsBounded", "kind" : "implicit val"}, {"label" : "longIsBounded", "tail" : ": JLongIsBounded", "member" : "cc.sven.bounded.Bounded.longIsBounded", "link" : "cc\/sven\/bounded\/Bounded$.html#longIsBounded:cc.sven.bounded.JLongIsBounded", "kind" : "implicit val"}, {"label" : "integerIsBounded", "tail" : ": JIntegerIsBounded", "member" : "cc.sven.bounded.Bounded.integerIsBounded", "link" : "cc\/sven\/bounded\/Bounded$.html#integerIsBounded:cc.sven.bounded.JIntegerIsBounded", "kind" : "implicit val"}, {"label" : "intIsBounded", "tail" : ": JIntIsBounded", "member" : "cc.sven.bounded.Bounded.intIsBounded", "link" : "cc\/sven\/bounded\/Bounded$.html#intIsBounded:cc.sven.bounded.JIntIsBounded", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/Bounded$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/Bounded$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/Bounded$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/Bounded$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/Bounded$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/Bounded$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/Bounded$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/Bounded$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/Bounded$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/Bounded$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/Bounded$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/Bounded$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/Bounded$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/Bounded$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/Bounded$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/Bounded$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/Bounded$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/Bounded$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/Bounded$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cc\/sven\/bounded\/Bounded.html", "kind" : "object"}, {"name" : "cc.sven.bounded.BoundedBits", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/BoundedBits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/BoundedBits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/BoundedBits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/BoundedBits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/BoundedBits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/BoundedBits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/BoundedBits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/BoundedBits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/BoundedBits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/BoundedBits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/BoundedBits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/BoundedBits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/BoundedBits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/BoundedBits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/BoundedBits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/BoundedBits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/BoundedBits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/BoundedBits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/BoundedBits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "bits", "tail" : ": Int", "member" : "cc.sven.bounded.BoundedBits.bits", "link" : "cc\/sven\/bounded\/BoundedBits.html#bits:Int", "kind" : "abstract val"}], "shortDescription" : "", "object" : "cc\/sven\/bounded\/BoundedBits$.html", "members_object" : [{"label" : "jLongIsBoundedBits", "tail" : ": JJLongIsBoundedBits", "member" : "cc.sven.bounded.BoundedBits.jLongIsBoundedBits", "link" : "cc\/sven\/bounded\/BoundedBits$.html#jLongIsBoundedBits:cc.sven.bounded.JJLongIsBoundedBits", "kind" : "implicit val"}, {"label" : "longIsBoundedBits", "tail" : ": JLongIsBoundedBits", "member" : "cc.sven.bounded.BoundedBits.longIsBoundedBits", "link" : "cc\/sven\/bounded\/BoundedBits$.html#longIsBoundedBits:cc.sven.bounded.JLongIsBoundedBits", "kind" : "implicit val"}, {"label" : "integerIsBoundedBits", "tail" : ": JIntegerIsBoundedBits", "member" : "cc.sven.bounded.BoundedBits.integerIsBoundedBits", "link" : "cc\/sven\/bounded\/BoundedBits$.html#integerIsBoundedBits:cc.sven.bounded.JIntegerIsBoundedBits", "kind" : "implicit val"}, {"label" : "intIsBoundedBits", "tail" : ": JIntIsBoundedBits", "member" : "cc.sven.bounded.BoundedBits.intIsBoundedBits", "link" : "cc\/sven\/bounded\/BoundedBits$.html#intIsBoundedBits:cc.sven.bounded.JIntIsBoundedBits", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/BoundedBits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/BoundedBits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/BoundedBits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/BoundedBits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/BoundedBits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/BoundedBits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/BoundedBits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/BoundedBits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/BoundedBits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/BoundedBits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/BoundedBits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/BoundedBits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/BoundedBits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/BoundedBits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/BoundedBits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/BoundedBits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/BoundedBits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/BoundedBits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/BoundedBits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cc\/sven\/bounded\/BoundedBits.html", "kind" : "object"}, {"name" : "cc.sven.bounded.DynBounded", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/DynBounded.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/DynBounded.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/DynBounded.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/DynBounded.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/DynBounded.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/DynBounded.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/DynBounded.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/DynBounded.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/DynBounded.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/DynBounded.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/DynBounded.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/DynBounded.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/DynBounded.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/DynBounded.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/DynBounded.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/DynBounded.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/DynBounded.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/DynBounded.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/DynBounded.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dMinNotNeg", "tail" : "(t: T): T", "member" : "cc.sven.bounded.DynBounded.dMinNotNeg", "link" : "cc\/sven\/bounded\/DynBounded.html#dMinNotNeg(t:T):T", "kind" : "abstract def"}, {"label" : "dMaxNeg", "tail" : "(t: T): T", "member" : "cc.sven.bounded.DynBounded.dMaxNeg", "link" : "cc\/sven\/bounded\/DynBounded.html#dMaxNeg(t:T):T", "kind" : "abstract def"}, {"label" : "dMinBound", "tail" : "(t: T): T", "member" : "cc.sven.bounded.DynBounded.dMinBound", "link" : "cc\/sven\/bounded\/DynBounded.html#dMinBound(t:T):T", "kind" : "abstract def"}, {"label" : "dMaxBound", "tail" : "(t: T): T", "member" : "cc.sven.bounded.DynBounded.dMaxBound", "link" : "cc\/sven\/bounded\/DynBounded.html#dMaxBound(t:T):T", "kind" : "abstract def"}], "shortDescription" : "", "object" : "cc\/sven\/bounded\/DynBounded$.html", "members_object" : [{"label" : "boundedToDynBounded", "tail" : "(bounded: Bounded[T]): DynBounded[T]", "member" : "cc.sven.bounded.DynBounded.boundedToDynBounded", "link" : "cc\/sven\/bounded\/DynBounded$.html#boundedToDynBounded[T](implicitbounded:cc.sven.bounded.Bounded[T]):cc.sven.bounded.DynBounded[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/DynBounded$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/DynBounded$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/DynBounded$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/DynBounded$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/DynBounded$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/DynBounded$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/DynBounded$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/DynBounded$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/DynBounded$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/DynBounded$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/DynBounded$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/DynBounded$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/DynBounded$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/DynBounded$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/DynBounded$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/DynBounded$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/DynBounded$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/DynBounded$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/DynBounded$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cc\/sven\/bounded\/DynBounded.html", "kind" : "object"}, {"name" : "cc.sven.bounded.DynBoundedBits", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/DynBoundedBits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dBits", "tail" : "(t: T): Int", "member" : "cc.sven.bounded.DynBoundedBits.dBits", "link" : "cc\/sven\/bounded\/DynBoundedBits.html#dBits(t:T):Int", "kind" : "abstract def"}], "shortDescription" : "", "object" : "cc\/sven\/bounded\/DynBoundedBits$.html", "members_object" : [{"label" : "boundedBitsToDynBoundedBits", "tail" : "(boundedBits: BoundedBits[T]): DynBoundedBits[T]", "member" : "cc.sven.bounded.DynBoundedBits.boundedBitsToDynBoundedBits", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#boundedBitsToDynBoundedBits[T](implicitboundedBits:cc.sven.bounded.BoundedBits[T]):cc.sven.bounded.DynBoundedBits[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/DynBoundedBits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cc\/sven\/bounded\/DynBoundedBits.html", "kind" : "object"}, {"name" : "cc.sven.bounded.JIntegerIsBounded", "shortDescription" : "", "members_class" : [{"label" : "minNotNeg", "tail" : ": Integer", "member" : "cc.sven.bounded.JIntegerIsBounded.minNotNeg", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#minNotNeg:Integer", "kind" : "val"}, {"label" : "maxNeg", "tail" : ": Integer", "member" : "cc.sven.bounded.JIntegerIsBounded.maxNeg", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#maxNeg:Integer", "kind" : "val"}, {"label" : "minBound", "tail" : ": Integer", "member" : "cc.sven.bounded.JIntegerIsBounded.minBound", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#minBound:Integer", "kind" : "val"}, {"label" : "maxBound", "tail" : ": Integer", "member" : "cc.sven.bounded.JIntegerIsBounded.maxBound", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#maxBound:Integer", "kind" : "val"}, {"member" : "cc.sven.bounded.JIntegerIsBounded#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/JIntegerIsBounded.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/bounded\/JIntegerIsBounded.html", "kind" : "class"}, {"name" : "cc.sven.bounded.JIntegerIsBoundedBits", "shortDescription" : "", "members_class" : [{"label" : "bits", "tail" : ": Int", "member" : "cc.sven.bounded.JIntegerIsBoundedBits.bits", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#bits:Int", "kind" : "val"}, {"member" : "cc.sven.bounded.JIntegerIsBoundedBits#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/bounded\/JIntegerIsBoundedBits.html", "kind" : "class"}, {"name" : "cc.sven.bounded.JIntIsBounded", "shortDescription" : "", "members_class" : [{"label" : "minNotNeg", "tail" : ": Int", "member" : "cc.sven.bounded.JIntIsBounded.minNotNeg", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#minNotNeg:Int", "kind" : "val"}, {"label" : "maxNeg", "tail" : ": Int", "member" : "cc.sven.bounded.JIntIsBounded.maxNeg", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#maxNeg:Int", "kind" : "val"}, {"label" : "minBound", "tail" : ": Int", "member" : "cc.sven.bounded.JIntIsBounded.minBound", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#minBound:Int", "kind" : "val"}, {"label" : "maxBound", "tail" : ": Int", "member" : "cc.sven.bounded.JIntIsBounded.maxBound", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#maxBound:Int", "kind" : "val"}, {"member" : "cc.sven.bounded.JIntIsBounded#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/JIntIsBounded.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/JIntIsBounded.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/bounded\/JIntIsBounded.html", "kind" : "class"}, {"name" : "cc.sven.bounded.JIntIsBoundedBits", "shortDescription" : "", "members_class" : [{"label" : "bits", "tail" : ": Int", "member" : "cc.sven.bounded.JIntIsBoundedBits.bits", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#bits:Int", "kind" : "val"}, {"member" : "cc.sven.bounded.JIntIsBoundedBits#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/JIntIsBoundedBits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/bounded\/JIntIsBoundedBits.html", "kind" : "class"}, {"name" : "cc.sven.bounded.JJLongIsBounded", "shortDescription" : "", "members_class" : [{"label" : "minNotNeg", "tail" : ": Long", "member" : "cc.sven.bounded.JJLongIsBounded.minNotNeg", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#minNotNeg:Long", "kind" : "val"}, {"label" : "maxNeg", "tail" : ": Long", "member" : "cc.sven.bounded.JJLongIsBounded.maxNeg", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#maxNeg:Long", "kind" : "val"}, {"label" : "minBound", "tail" : ": Long", "member" : "cc.sven.bounded.JJLongIsBounded.minBound", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#minBound:Long", "kind" : "val"}, {"label" : "maxBound", "tail" : ": Long", "member" : "cc.sven.bounded.JJLongIsBounded.maxBound", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#maxBound:Long", "kind" : "val"}, {"member" : "cc.sven.bounded.JJLongIsBounded#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/JJLongIsBounded.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/bounded\/JJLongIsBounded.html", "kind" : "class"}, {"name" : "cc.sven.bounded.JJLongIsBoundedBits", "shortDescription" : "", "members_class" : [{"label" : "bits", "tail" : ": Int", "member" : "cc.sven.bounded.JJLongIsBoundedBits.bits", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#bits:Int", "kind" : "val"}, {"member" : "cc.sven.bounded.JJLongIsBoundedBits#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/bounded\/JJLongIsBoundedBits.html", "kind" : "class"}, {"name" : "cc.sven.bounded.JLongIsBounded", "shortDescription" : "", "members_class" : [{"label" : "minNotNeg", "tail" : ": Long", "member" : "cc.sven.bounded.JLongIsBounded.minNotNeg", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#minNotNeg:Long", "kind" : "val"}, {"label" : "maxNeg", "tail" : ": Long", "member" : "cc.sven.bounded.JLongIsBounded.maxNeg", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#maxNeg:Long", "kind" : "val"}, {"label" : "minBound", "tail" : ": Long", "member" : "cc.sven.bounded.JLongIsBounded.minBound", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#minBound:Long", "kind" : "val"}, {"label" : "maxBound", "tail" : ": Long", "member" : "cc.sven.bounded.JLongIsBounded.maxBound", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#maxBound:Long", "kind" : "val"}, {"member" : "cc.sven.bounded.JLongIsBounded#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/JLongIsBounded.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/JLongIsBounded.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/bounded\/JLongIsBounded.html", "kind" : "class"}, {"name" : "cc.sven.bounded.JLongIsBoundedBits", "shortDescription" : "", "members_class" : [{"label" : "bits", "tail" : ": Int", "member" : "cc.sven.bounded.JLongIsBoundedBits.bits", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#bits:Int", "kind" : "val"}, {"member" : "cc.sven.bounded.JLongIsBoundedBits#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/bounded\/JLongIsBoundedBits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/bounded\/JLongIsBoundedBits.html", "kind" : "class"}], "cc.sven.benches" : [{"name" : "cc.sven.benches.BenchesCongruenceClass", "shortDescription" : "Created by scm on 03.02.17.", "object" : "cc\/sven\/benches\/BenchesCongruenceClass$.html", "members_object" : [{"label" : "pw", "tail" : ": PrintWriter", "member" : "cc.sven.benches.BenchesCongruenceClass.pw", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#pw:java.io.PrintWriter", "kind" : "val"}, {"label" : "bw", "tail" : ": Int", "member" : "cc.sven.benches.BenchesCongruenceClass.bw", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#bw:Int", "kind" : "val"}, {"label" : "args", "tail" : ": Array[String]", "member" : "cc.sven.benches.BenchesCongruenceClass.args", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#args:Array[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/benches\/BenchesCongruenceClass$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.benches.BenchesCongruenceClassAdd", "shortDescription" : "Created by scm on 03.02.17.", "object" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html", "members_object" : [{"label" : "maxtime", "tail" : ": Long", "member" : "cc.sven.benches.BenchesCongruenceClassAdd.maxtime", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#maxtime:Long", "kind" : "var"}, {"label" : "pw", "tail" : ": PrintWriter", "member" : "cc.sven.benches.BenchesCongruenceClassAdd.pw", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#pw:java.io.PrintWriter", "kind" : "val"}, {"label" : "bw", "tail" : ": Int", "member" : "cc.sven.benches.BenchesCongruenceClassAdd.bw", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#bw:Int", "kind" : "val"}, {"label" : "args", "tail" : ": Array[String]", "member" : "cc.sven.benches.BenchesCongruenceClassAdd.args", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#args:Array[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAdd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.benches.BenchesCongruenceClassAnd", "shortDescription" : "Created by scm on 03.02.17.", "object" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: ⇒ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#executionStart:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/benches\/BenchesCongruenceClassAnd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.benches.BenchesCongruenceClassTime", "shortDescription" : "Created by scm on 03.02.17.", "object" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html", "members_object" : [{"label" : "pw", "tail" : ": PrintWriter", "member" : "cc.sven.benches.BenchesCongruenceClassTime.pw", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#pw:java.io.PrintWriter", "kind" : "val"}, {"label" : "bw", "tail" : ": Int", "member" : "cc.sven.benches.BenchesCongruenceClassTime.bw", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#bw:Int", "kind" : "val"}, {"label" : "args", "tail" : ": Array[String]", "member" : "cc.sven.benches.BenchesCongruenceClassTime.args", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#args:Array[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/benches\/BenchesCongruenceClassTime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.benches.BenchesExplicitSet", "shortDescription" : "Created by scm on 03.02.17.", "object" : "cc\/sven\/benches\/BenchesExplicitSet$.html", "members_object" : [{"label" : "endall", "tail" : ": DateTime", "member" : "cc.sven.benches.BenchesExplicitSet.endall", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#endall:org.joda.time.DateTime", "kind" : "val"}, {"label" : "startall", "tail" : ": DateTime", "member" : "cc.sven.benches.BenchesExplicitSet.startall", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#startall:org.joda.time.DateTime", "kind" : "val"}, {"label" : "set", "tail" : ": Set[Int]", "member" : "cc.sven.benches.BenchesExplicitSet.set", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#set:scala.collection.immutable.Set[Int]", "kind" : "val"}, {"label" : "pw", "tail" : ": PrintWriter", "member" : "cc.sven.benches.BenchesExplicitSet.pw", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#pw:java.io.PrintWriter", "kind" : "val"}, {"label" : "bw", "tail" : ": Int", "member" : "cc.sven.benches.BenchesExplicitSet.bw", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#bw:Int", "kind" : "val"}, {"label" : "args", "tail" : ": Array[String]", "member" : "cc.sven.benches.BenchesExplicitSet.args", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#args:Array[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/benches\/BenchesExplicitSet$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.benches.BenchesIval", "shortDescription" : "Created by scm on 03.02.17.", "object" : "cc\/sven\/benches\/BenchesIval$.html", "members_object" : [{"label" : "pw", "tail" : ": PrintWriter", "member" : "cc.sven.benches.BenchesIval.pw", "link" : "cc\/sven\/benches\/BenchesIval$.html#pw:java.io.PrintWriter", "kind" : "val"}, {"label" : "bw", "tail" : ": Int", "member" : "cc.sven.benches.BenchesIval.bw", "link" : "cc\/sven\/benches\/BenchesIval$.html#bw:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/benches\/BenchesIval$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/benches\/BenchesIval$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/benches\/BenchesIval$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/benches\/BenchesIval$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/benches\/BenchesIval$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/benches\/BenchesIval$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/benches\/BenchesIval$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesIval$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesIval$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/benches\/BenchesIval$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/benches\/BenchesIval$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/benches\/BenchesIval$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/benches\/BenchesIval$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/benches\/BenchesIval$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/benches\/BenchesIval$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/benches\/BenchesIval$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/benches\/BenchesIval$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/benches\/BenchesIval$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/benches\/BenchesIval$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "cc.sven.constraint" : [{"name" : "cc.sven.constraint.And", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.And#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Constraint", "member" : "cc.sven.constraint.And.right", "link" : "cc\/sven\/constraint\/And.html#right:cc.sven.constraint.Constraint", "kind" : "val"}, {"label" : "left", "tail" : ": Constraint", "member" : "cc.sven.constraint.And.left", "link" : "cc\/sven\/constraint\/And.html#left:cc.sven.constraint.Constraint", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/And.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/And.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/And.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/And.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/And.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/And.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/And.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/And.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/And.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/And.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/And.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/And.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/And.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/And.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/And.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/And.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/And.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/And.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/And.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/And.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/And.html", "kind" : "case class"}, {"name" : "cc.sven.constraint.Constrainable", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/Constrainable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/Constrainable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/Constrainable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/Constrainable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/Constrainable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/Constrainable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/Constrainable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Constrainable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Constrainable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Constrainable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/Constrainable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/Constrainable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/constraint\/Constrainable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/Constrainable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/constraint\/Constrainable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/constraint\/Constrainable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/Constrainable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/Constrainable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/Constrainable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getPosNeg", "tail" : "(a: S[T]): (S[T], S[T])", "member" : "cc.sven.constraint.Constrainable.getPosNeg", "link" : "cc\/sven\/constraint\/Constrainable.html#getPosNeg(a:S[T]):(S[T],S[T])", "kind" : "abstract def"}, {"label" : "invert", "tail" : "(a: S[T]): S[T]", "member" : "cc.sven.constraint.Constrainable.invert", "link" : "cc\/sven\/constraint\/Constrainable.html#invert(a:S[T]):S[T]", "kind" : "abstract def"}, {"label" : "max", "tail" : "(a: S[T]): T", "member" : "cc.sven.constraint.Constrainable.max", "link" : "cc\/sven\/constraint\/Constrainable.html#max(a:S[T]):T", "kind" : "abstract def"}, {"label" : "min", "tail" : "(a: S[T]): T", "member" : "cc.sven.constraint.Constrainable.min", "link" : "cc\/sven\/constraint\/Constrainable.html#min(a:S[T]):T", "kind" : "abstract def"}, {"label" : "isEmpty", "tail" : "(a: S[T]): Boolean", "member" : "cc.sven.constraint.Constrainable.isEmpty", "link" : "cc\/sven\/constraint\/Constrainable.html#isEmpty(a:S[T]):Boolean", "kind" : "abstract def"}, {"label" : "union", "tail" : "(a: S[T], b: S[T]): S[T]", "member" : "cc.sven.constraint.Constrainable.union", "link" : "cc\/sven\/constraint\/Constrainable.html#union(a:S[T],b:S[T]):S[T]", "kind" : "abstract def"}, {"label" : "intersect", "tail" : "(a: S[T], b: S[T]): S[T]", "member" : "cc.sven.constraint.Constrainable.intersect", "link" : "cc\/sven\/constraint\/Constrainable.html#intersect(a:S[T],b:S[T]):S[T]", "kind" : "abstract def"}, {"label" : "range", "tail" : "(lo: T, hi: T): S[T]", "member" : "cc.sven.constraint.Constrainable.range", "link" : "cc\/sven\/constraint\/Constrainable.html#range(lo:T,hi:T):S[T]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "cc\/sven\/constraint\/Constrainable.html", "kind" : "trait"}, {"name" : "cc.sven.constraint.Constraint", "members_trait" : [{"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/Constraint.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/Constraint.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/Constraint.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/Constraint.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/Constraint.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/Constraint.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/Constraint.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/Constraint.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/Constraint.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/Constraint.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/Constraint.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Constraint.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Constraint.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Constraint.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/Constraint.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/Constraint.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/constraint\/Constraint.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/Constraint.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/constraint\/Constraint.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/constraint\/Constraint.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/Constraint.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/Constraint.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/Constraint.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "cc\/sven\/constraint\/Constraint$.html", "members_object" : [{"label" : "createOr", "tail" : "(left: Constraint, right: Constraint): Constraint", "member" : "cc.sven.constraint.Constraint.createOr", "link" : "cc\/sven\/constraint\/Constraint$.html#createOr(left:cc.sven.constraint.Constraint,right:cc.sven.constraint.Constraint):cc.sven.constraint.Constraint", "kind" : "def"}, {"label" : "createAnd", "tail" : "(left: Constraint, right: Constraint): Constraint", "member" : "cc.sven.constraint.Constraint.createAnd", "link" : "cc\/sven\/constraint\/Constraint$.html#createAnd(left:cc.sven.constraint.Constraint,right:cc.sven.constraint.Constraint):cc.sven.constraint.Constraint", "kind" : "def"}, {"label" : "createNot", "tail" : "(constraint: Constraint): Constraint", "member" : "cc.sven.constraint.Constraint.createNot", "link" : "cc\/sven\/constraint\/Constraint$.html#createNot(constraint:cc.sven.constraint.Constraint):cc.sven.constraint.Constraint", "kind" : "def"}, {"label" : "createULte", "tail" : "(left: Int, right: Int): Constraint", "member" : "cc.sven.constraint.Constraint.createULte", "link" : "cc\/sven\/constraint\/Constraint$.html#createULte(left:Int,right:Int):cc.sven.constraint.Constraint", "kind" : "def"}, {"label" : "createULt", "tail" : "(left: Int, right: Int): Constraint", "member" : "cc.sven.constraint.Constraint.createULt", "link" : "cc\/sven\/constraint\/Constraint$.html#createULt(left:Int,right:Int):cc.sven.constraint.Constraint", "kind" : "def"}, {"label" : "createGte", "tail" : "(left: Int, right: Int): Constraint", "member" : "cc.sven.constraint.Constraint.createGte", "link" : "cc\/sven\/constraint\/Constraint$.html#createGte(left:Int,right:Int):cc.sven.constraint.Constraint", "kind" : "def"}, {"label" : "createGt", "tail" : "(left: Int, right: Int): Constraint", "member" : "cc.sven.constraint.Constraint.createGt", "link" : "cc\/sven\/constraint\/Constraint$.html#createGt(left:Int,right:Int):cc.sven.constraint.Constraint", "kind" : "def"}, {"label" : "createLte", "tail" : "(left: Int, right: Int): Constraint", "member" : "cc.sven.constraint.Constraint.createLte", "link" : "cc\/sven\/constraint\/Constraint$.html#createLte(left:Int,right:Int):cc.sven.constraint.Constraint", "kind" : "def"}, {"label" : "createLt", "tail" : "(left: Int, right: Int): Constraint", "member" : "cc.sven.constraint.Constraint.createLt", "link" : "cc\/sven\/constraint\/Constraint$.html#createLt(left:Int,right:Int):cc.sven.constraint.Constraint", "kind" : "def"}, {"label" : "createNEq", "tail" : "(left: Int, right: Int): Constraint", "member" : "cc.sven.constraint.Constraint.createNEq", "link" : "cc\/sven\/constraint\/Constraint$.html#createNEq(left:Int,right:Int):cc.sven.constraint.Constraint", "kind" : "def"}, {"label" : "createEq", "tail" : "(left: Int, right: Int): Constraint", "member" : "cc.sven.constraint.Constraint.createEq", "link" : "cc\/sven\/constraint\/Constraint$.html#createEq(left:Int,right:Int):cc.sven.constraint.Constraint", "kind" : "def"}, {"label" : "arbitraryConstrainable", "tail" : ": Arbitrary[Constraint]", "member" : "cc.sven.constraint.Constraint.arbitraryConstrainable", "link" : "cc\/sven\/constraint\/Constraint$.html#arbitraryConstrainable:org.scalacheck.Arbitrary[cc.sven.constraint.Constraint]", "kind" : "implicit val"}, {"label" : "intLikeSetIsConstrainable", "tail" : "(int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], dboundedBits: DynBoundedBits[T], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): Constrainable[T, [a]IntLikeSet[I, a]]", "member" : "cc.sven.constraint.Constraint.intLikeSetIsConstrainable", "link" : "cc\/sven\/constraint\/Constraint$.html#intLikeSetIsConstrainable[I,T](implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitdboundedBits:cc.sven.bounded.DynBoundedBits[T],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):cc.sven.constraint.Constrainable[T,[a]cc.sven.tlike.IntLikeSet[I,a]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/Constraint$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/Constraint$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/Constraint$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/Constraint$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/Constraint$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/Constraint$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/Constraint$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Constraint$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Constraint$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Constraint$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/Constraint$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/Constraint$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/constraint\/Constraint$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/Constraint$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/constraint\/Constraint$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/constraint\/Constraint$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/Constraint$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/Constraint$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/Constraint$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cc\/sven\/constraint\/Constraint.html", "kind" : "object"}, {"name" : "cc.sven.constraint.Equals", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.Equals#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Int", "member" : "cc.sven.constraint.Equals.right", "link" : "cc\/sven\/constraint\/Equals.html#right:Int", "kind" : "val"}, {"label" : "left", "tail" : ": Int", "member" : "cc.sven.constraint.Equals.left", "link" : "cc\/sven\/constraint\/Equals.html#left:Int", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/Equals.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/Equals.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/Equals.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/Equals.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/Equals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/Equals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/Equals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/Equals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/Equals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/Equals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/Equals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Equals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Equals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Equals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/Equals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/Equals.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/Equals.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/Equals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/Equals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/Equals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/Equals.html", "kind" : "case class"}, {"name" : "cc.sven.constraint.GT", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.GT#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Int", "member" : "cc.sven.constraint.GT.right", "link" : "cc\/sven\/constraint\/GT.html#right:Int", "kind" : "val"}, {"label" : "left", "tail" : ": Int", "member" : "cc.sven.constraint.GT.left", "link" : "cc\/sven\/constraint\/GT.html#left:Int", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/GT.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/GT.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/GT.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/GT.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/GT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/GT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/GT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/GT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/GT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/GT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/GT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/GT.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/GT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/GT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/GT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/GT.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/GT.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/GT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/GT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/GT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/GT.html", "kind" : "case class"}, {"name" : "cc.sven.constraint.GTE", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.GTE#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Int", "member" : "cc.sven.constraint.GTE.right", "link" : "cc\/sven\/constraint\/GTE.html#right:Int", "kind" : "val"}, {"label" : "left", "tail" : ": Int", "member" : "cc.sven.constraint.GTE.left", "link" : "cc\/sven\/constraint\/GTE.html#left:Int", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/GTE.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/GTE.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/GTE.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/GTE.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/GTE.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/GTE.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/GTE.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/GTE.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/GTE.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/GTE.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/GTE.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/GTE.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/GTE.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/GTE.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/GTE.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/GTE.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/GTE.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/GTE.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/GTE.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/GTE.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/GTE.html", "kind" : "case class"}, {"name" : "cc.sven.constraint.LT", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.LT#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Int", "member" : "cc.sven.constraint.LT.right", "link" : "cc\/sven\/constraint\/LT.html#right:Int", "kind" : "val"}, {"label" : "left", "tail" : ": Int", "member" : "cc.sven.constraint.LT.left", "link" : "cc\/sven\/constraint\/LT.html#left:Int", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/LT.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/LT.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/LT.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/LT.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/LT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/LT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/LT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/LT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/LT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/LT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/LT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/LT.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/LT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/LT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/LT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/LT.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/LT.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/LT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/LT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/LT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/LT.html", "kind" : "case class"}, {"name" : "cc.sven.constraint.LTE", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.LTE#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Int", "member" : "cc.sven.constraint.LTE.right", "link" : "cc\/sven\/constraint\/LTE.html#right:Int", "kind" : "val"}, {"label" : "left", "tail" : ": Int", "member" : "cc.sven.constraint.LTE.left", "link" : "cc\/sven\/constraint\/LTE.html#left:Int", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/LTE.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/LTE.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/LTE.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/LTE.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/LTE.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/LTE.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/LTE.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/LTE.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/LTE.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/LTE.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/LTE.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/LTE.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/LTE.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/LTE.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/LTE.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/LTE.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/LTE.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/LTE.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/LTE.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/LTE.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/LTE.html", "kind" : "case class"}, {"name" : "cc.sven.constraint.NEquals", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.NEquals#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Int", "member" : "cc.sven.constraint.NEquals.right", "link" : "cc\/sven\/constraint\/NEquals.html#right:Int", "kind" : "val"}, {"label" : "left", "tail" : ": Int", "member" : "cc.sven.constraint.NEquals.left", "link" : "cc\/sven\/constraint\/NEquals.html#left:Int", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/NEquals.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/NEquals.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/NEquals.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/NEquals.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/NEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/NEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/NEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/NEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/NEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/NEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/NEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/NEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/NEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/NEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/NEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/NEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/NEquals.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/NEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/NEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/NEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/NEquals.html", "kind" : "case class"}, {"name" : "cc.sven.constraint.Not", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.Not#<init>", "error" : "unsupported entity"}, {"label" : "op", "tail" : ": Constraint", "member" : "cc.sven.constraint.Not.op", "link" : "cc\/sven\/constraint\/Not.html#op:cc.sven.constraint.Constraint", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/Not.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/Not.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/Not.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/Not.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/Not.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/Not.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/Not.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/Not.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/Not.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/Not.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/Not.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Not.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Not.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Not.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/Not.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/Not.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/Not.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/Not.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/Not.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/Not.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/Not.html", "kind" : "case class"}, {"name" : "cc.sven.constraint.Or", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.Or#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Constraint", "member" : "cc.sven.constraint.Or.right", "link" : "cc\/sven\/constraint\/Or.html#right:cc.sven.constraint.Constraint", "kind" : "val"}, {"label" : "left", "tail" : ": Constraint", "member" : "cc.sven.constraint.Or.left", "link" : "cc\/sven\/constraint\/Or.html#left:cc.sven.constraint.Constraint", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/Or.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/Or.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/Or.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/Or.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/Or.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/Or.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/Or.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/Or.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/Or.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/Or.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/Or.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Or.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Or.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/Or.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/Or.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/Or.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/Or.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/Or.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/Or.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/Or.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/Or.html", "kind" : "case class"}, {"name" : "cc.sven.constraint.UGT", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.UGT#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Int", "member" : "cc.sven.constraint.UGT.right", "link" : "cc\/sven\/constraint\/UGT.html#right:Int", "kind" : "val"}, {"label" : "left", "tail" : ": Int", "member" : "cc.sven.constraint.UGT.left", "link" : "cc\/sven\/constraint\/UGT.html#left:Int", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/UGT.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/UGT.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/UGT.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/UGT.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/UGT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/UGT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/UGT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/UGT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/UGT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/UGT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/UGT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/UGT.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/UGT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/UGT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/UGT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/UGT.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/UGT.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/UGT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/UGT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/UGT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/UGT.html", "kind" : "case class"}, {"name" : "cc.sven.constraint.UGTE", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.UGTE#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Int", "member" : "cc.sven.constraint.UGTE.right", "link" : "cc\/sven\/constraint\/UGTE.html#right:Int", "kind" : "val"}, {"label" : "left", "tail" : ": Int", "member" : "cc.sven.constraint.UGTE.left", "link" : "cc\/sven\/constraint\/UGTE.html#left:Int", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/UGTE.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/UGTE.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/UGTE.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/UGTE.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/UGTE.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/UGTE.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/UGTE.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/UGTE.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/UGTE.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/UGTE.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/UGTE.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/UGTE.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/UGTE.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/UGTE.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/UGTE.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/UGTE.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/UGTE.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/UGTE.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/UGTE.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/UGTE.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/UGTE.html", "kind" : "case class"}, {"name" : "cc.sven.constraint.ULT", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.ULT#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Int", "member" : "cc.sven.constraint.ULT.right", "link" : "cc\/sven\/constraint\/ULT.html#right:Int", "kind" : "val"}, {"label" : "left", "tail" : ": Int", "member" : "cc.sven.constraint.ULT.left", "link" : "cc\/sven\/constraint\/ULT.html#left:Int", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/ULT.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/ULT.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/ULT.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/ULT.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/ULT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/ULT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/ULT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/ULT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/ULT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/ULT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/ULT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/ULT.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/ULT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/ULT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/ULT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/ULT.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/ULT.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/ULT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/ULT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/ULT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/ULT.html", "kind" : "case class"}, {"name" : "cc.sven.constraint.ULTE", "shortDescription" : "", "members_case class" : [{"member" : "cc.sven.constraint.ULTE#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Int", "member" : "cc.sven.constraint.ULTE.right", "link" : "cc\/sven\/constraint\/ULTE.html#right:Int", "kind" : "val"}, {"label" : "left", "tail" : ": Int", "member" : "cc.sven.constraint.ULTE.left", "link" : "cc\/sven\/constraint\/ULTE.html#left:Int", "kind" : "val"}, {"label" : "solve", "tail" : "(table: HashMap[Int, S[T]])(dBounded: DynBounded[T], ord: Ordering[T], const: Constrainable[T, S]): HashMap[Int, S[T]]", "member" : "cc.sven.constraint.Constraint.solve", "link" : "cc\/sven\/constraint\/ULTE.html#solve[T,S[_]](table:scala.collection.immutable.HashMap[Int,S[T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitord:Ordering[T],implicitconst:cc.sven.constraint.Constrainable[T,S]):scala.collection.immutable.HashMap[Int,S[T]]", "kind" : "def"}, {"label" : "solveIntLike", "tail" : "(table: HashMap[Int, IntLikeSet[I, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): HashMap[Int, IntLikeSet[I, T]]", "member" : "cc.sven.constraint.Constraint.solveIntLike", "link" : "cc\/sven\/constraint\/ULTE.html#solveIntLike[I,T](table:scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):scala.collection.immutable.HashMap[Int,cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "def"}, {"label" : "solveJLong", "tail" : "(table: HashMap[Integer, IntLikeSet[Long, T]])(dBounded: DynBounded[T], dBoundedBits: DynBoundedBits[T], ord: Ordering[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): HashMap[Integer, IntLikeSet[Long, T]]", "member" : "cc.sven.constraint.Constraint.solveJLong", "link" : "cc\/sven\/constraint\/ULTE.html#solveJLong[T](table:java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]])(implicitdBounded:cc.sven.bounded.DynBounded[T],implicitdBoundedBits:cc.sven.bounded.DynBoundedBits[T],implicitord:Ordering[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):java.util.HashMap[Integer,cc.sven.tlike.IntLikeSet[Long,T]]", "kind" : "def"}, {"label" : "getVarIds", "tail" : "(): Set[Int]", "member" : "cc.sven.constraint.Constraint.getVarIds", "link" : "cc\/sven\/constraint\/ULTE.html#getVarIds:scala.collection.immutable.Set[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/constraint\/ULTE.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/constraint\/ULTE.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/constraint\/ULTE.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/constraint\/ULTE.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/constraint\/ULTE.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/constraint\/ULTE.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/constraint\/ULTE.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/ULTE.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/ULTE.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/constraint\/ULTE.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/constraint\/ULTE.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/constraint\/ULTE.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/constraint\/ULTE.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/constraint\/ULTE.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/constraint\/ULTE.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/constraint\/ULTE.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/constraint\/ULTE.html", "kind" : "case class"}], "cc.sven" : [], "cc" : [], "cc.sven.tlike" : [{"name" : "cc.sven.tlike.BitWidthException", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "cc.sven.tlike.BitWidthException.toString", "link" : "cc\/sven\/tlike\/BitWidthException.html#toString():String", "kind" : "def"}, {"member" : "cc.sven.tlike.BitWidthException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "cc\/sven\/tlike\/BitWidthException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "cc\/sven\/tlike\/BitWidthException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "cc\/sven\/tlike\/BitWidthException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "cc\/sven\/tlike\/BitWidthException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "cc\/sven\/tlike\/BitWidthException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "cc\/sven\/tlike\/BitWidthException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "cc\/sven\/tlike\/BitWidthException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "cc\/sven\/tlike\/BitWidthException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "cc\/sven\/tlike\/BitWidthException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "cc\/sven\/tlike\/BitWidthException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "cc\/sven\/tlike\/BitWidthException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "cc\/sven\/tlike\/BitWidthException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/tlike\/BitWidthException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/tlike\/BitWidthException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/tlike\/BitWidthException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/tlike\/BitWidthException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/tlike\/BitWidthException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/tlike\/BitWidthException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/tlike\/BitWidthException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/BitWidthException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/BitWidthException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/BitWidthException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/tlike\/BitWidthException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/tlike\/BitWidthException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/tlike\/BitWidthException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/tlike\/BitWidthException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/tlike\/BitWidthException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/tlike\/BitWidthException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/tlike\/BitWidthException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/tlike\/BitWidthException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/tlike\/BitWidthException.html", "kind" : "class"}, {"name" : "cc.sven.tlike.Castable", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/tlike\/Castable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/tlike\/Castable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/tlike\/Castable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/tlike\/Castable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/tlike\/Castable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/tlike\/Castable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/tlike\/Castable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/Castable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/Castable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/Castable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/tlike\/Castable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/tlike\/Castable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/tlike\/Castable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/tlike\/Castable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/tlike\/Castable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/tlike\/Castable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/tlike\/Castable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/tlike\/Castable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/tlike\/Castable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: A): B", "member" : "cc.sven.tlike.Castable.apply", "link" : "cc\/sven\/tlike\/Castable.html#apply(a:A):B", "kind" : "abstract def"}], "shortDescription" : "", "object" : "cc\/sven\/tlike\/Castable$.html", "members_object" : [{"label" : "BWCastable", "tail" : "(): Castable[(Int, T), T]", "member" : "cc.sven.tlike.Castable.BWCastable", "link" : "cc\/sven\/tlike\/Castable$.html#BWCastable[T]:cc.sven.tlike.Castable[(Int,T),T]", "kind" : "implicit def"}, {"label" : "boundedBitsToCastableBW", "tail" : "(boundedBits: BoundedBits[T]): Castable[T, (Int, T)]", "member" : "cc.sven.tlike.Castable.boundedBitsToCastableBW", "link" : "cc\/sven\/tlike\/Castable$.html#boundedBitsToCastableBW[T](implicitboundedBits:cc.sven.bounded.BoundedBits[T]):cc.sven.tlike.Castable[T,(Int,T)]", "kind" : "implicit def"}, {"label" : "tToT", "tail" : "(): Castable[T, T]", "member" : "cc.sven.tlike.Castable.tToT", "link" : "cc\/sven\/tlike\/Castable$.html#tToT[T]:cc.sven.tlike.Castable[T,T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/tlike\/Castable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/tlike\/Castable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/tlike\/Castable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/tlike\/Castable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/tlike\/Castable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/tlike\/Castable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/tlike\/Castable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/Castable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/Castable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/Castable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/tlike\/Castable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/tlike\/Castable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/tlike\/Castable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/tlike\/Castable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/tlike\/Castable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/tlike\/Castable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/tlike\/Castable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/tlike\/Castable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/tlike\/Castable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cc\/sven\/tlike\/Castable.html", "kind" : "trait"}, {"name" : "cc.sven.tlike.DepthPredicate", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(node: CBDD, height: Int, depth: Int): Boolean", "member" : "cc.sven.tlike.DepthPredicate.apply", "link" : "cc\/sven\/tlike\/DepthPredicate.html#apply(node:cc.sven.bdd.CBDD,height:Int,depth:Int):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "cc.sven.tlike.DepthPredicate.toString", "link" : "cc\/sven\/tlike\/DepthPredicate.html#toString():String", "kind" : "def"}, {"member" : "cc.sven.tlike.DepthPredicate#<init>", "error" : "unsupported entity"}, {"label" : "cutoff", "tail" : ": Int", "member" : "cc.sven.tlike.DepthPredicate.cutoff", "link" : "cc\/sven\/tlike\/DepthPredicate.html#cutoff:Int", "kind" : "val"}, {"label" : "tupled", "tail" : "(): ((CBDD, Int, Int)) ⇒ Boolean", "member" : "scala.Function3.tupled", "link" : "cc\/sven\/tlike\/DepthPredicate.html#tupled:((T1,T2,T3))=>R", "kind" : "def"}, {"label" : "curried", "tail" : "(): (CBDD) ⇒ (Int) ⇒ (Int) ⇒ Boolean", "member" : "scala.Function3.curried", "link" : "cc\/sven\/tlike\/DepthPredicate.html#curried:T1=>(T2=>(T3=>R))", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/tlike\/DepthPredicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/tlike\/DepthPredicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/tlike\/DepthPredicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/tlike\/DepthPredicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/tlike\/DepthPredicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/tlike\/DepthPredicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/tlike\/DepthPredicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/DepthPredicate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/DepthPredicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/DepthPredicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/tlike\/DepthPredicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/tlike\/DepthPredicate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/tlike\/DepthPredicate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/tlike\/DepthPredicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/tlike\/DepthPredicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/tlike\/DepthPredicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/tlike\/DepthPredicate.html", "kind" : "case class"}, {"name" : "cc.sven.tlike.Implicits", "shortDescription" : "", "object" : "cc\/sven\/tlike\/Implicits$.html", "members_object" : [{"label" : "intLikeSetIsDynBounded", "tail" : "(): DynBoundedBits[IntLikeSet[I, T]]", "member" : "cc.sven.tlike.Implicits.intLikeSetIsDynBounded", "link" : "cc\/sven\/tlike\/Implicits$.html#intLikeSetIsDynBounded[I,T]:cc.sven.bounded.DynBoundedBits[cc.sven.tlike.IntLikeSet[I,T]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/tlike\/Implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/tlike\/Implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/tlike\/Implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/tlike\/Implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/tlike\/Implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/tlike\/Implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/tlike\/Implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/Implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/Implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/Implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/tlike\/Implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/tlike\/Implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/tlike\/Implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/tlike\/Implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/tlike\/Implicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/tlike\/Implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/tlike\/Implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/tlike\/Implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/tlike\/Implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.tlike.IntLikeSet", "shortDescription" : "", "object" : "cc\/sven\/tlike\/IntLikeSet$.html", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "cc\/sven\/tlike\/IntLikeSet.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "widenPrecisionTree", "tail" : "(that: IntLikeSet[I, T], precision: CBDD): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.widenPrecisionTree", "link" : "cc\/sven\/tlike\/IntLikeSet.html#widenPrecisionTree(that:cc.sven.tlike.IntLikeSet[I,T],precision:cc.sven.bdd.CBDD):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "widenNaive", "tail" : "(that: IntLikeSet[I, T], precision: Int): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.widenNaive", "link" : "cc\/sven\/tlike\/IntLikeSet.html#widenNaive(that:cc.sven.tlike.IntLikeSet[I,T],precision:Int):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "restrictLess", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.restrictLess", "link" : "cc\/sven\/tlike\/IntLikeSet.html#restrictLess(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "restrictGreater", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.restrictGreater", "link" : "cc\/sven\/tlike\/IntLikeSet.html#restrictGreater(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "restrictLessOrEqual", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.restrictLessOrEqual", "link" : "cc\/sven\/tlike\/IntLikeSet.html#restrictLessOrEqual(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "restrictGreaterOrEqual", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.restrictGreaterOrEqual", "link" : "cc\/sven\/tlike\/IntLikeSet.html#restrictGreaterOrEqual(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "zeroFill", "tail" : "(from: Int, to: Int): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.zeroFill", "link" : "cc\/sven\/tlike\/IntLikeSet.html#zeroFill(from:Int,to:Int):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "signExtend", "tail" : "(from: Int, to: Int): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.signExtend", "link" : "cc\/sven\/tlike\/IntLikeSet.html#signExtend(from:Int,to:Int):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "bitExtract", "tail" : "(from: Int, to: Int): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.bitExtract", "link" : "cc\/sven\/tlike\/IntLikeSet.html#bitExtract(from:Int,to:Int):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "java", "tail" : "(): Set[T]", "member" : "cc.sven.tlike.IntLikeSet.java", "link" : "cc\/sven\/tlike\/IntLikeSet.html#java:java.util.Set[T]", "kind" : "def"}, {"label" : "javaIterator", "tail" : "(): Iterator[T]", "member" : "cc.sven.tlike.IntLikeSet.javaIterator", "link" : "cc\/sven\/tlike\/IntLikeSet.html#javaIterator():java.util.Iterator[T]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): IntLikeSetIterator[I, T]", "member" : "cc.sven.tlike.IntLikeSet.iterator", "link" : "cc\/sven\/tlike\/IntLikeSet.html#iterator():cc.sven.tlike.IntLikeSetIterator[I,T]", "kind" : "def"}, {"label" : "checkIntegrity", "tail" : "(): Unit", "member" : "cc.sven.tlike.IntLikeSet.checkIntegrity", "link" : "cc\/sven\/tlike\/IntLikeSet.html#checkIntegrity():Unit", "kind" : "def"}, {"label" : "toStridedInterval", "tail" : "(): StridedInterval[T]", "member" : "cc.sven.tlike.IntLikeSet.toStridedInterval", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toStridedInterval:cc.sven.interval.StridedInterval[T]", "kind" : "def"}, {"label" : "memoize", "tail" : "(f: (I) ⇒ O): (I) ⇒ O", "member" : "cc.sven.tlike.IntLikeSet.memoize", "link" : "cc\/sven\/tlike\/IntLikeSet.html#memoize[I,O](f:I=>O):I=>O", "kind" : "def"}, {"label" : "mulHelper", "tail" : "(bdd: CBDD, opI: Long, op: List[Boolean], incomingEdge: Boolean, height: Int, smallestPossible: List[Boolean]): CBDD", "member" : "cc.sven.tlike.IntLikeSet.mulHelper", "link" : "cc\/sven\/tlike\/IntLikeSet.html#mulHelper(bdd:cc.sven.bdd.CBDD,opI:Long,op:List[Boolean],incomingEdge:Boolean,height:Int,smallestPossible:List[Boolean]):cc.sven.bdd.CBDD", "kind" : "def"}, {"label" : "mulSingleton", "tail" : "(op: T): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.mulSingleton", "link" : "cc\/sven\/tlike\/IntLikeSet.html#mulSingleton(op:T):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "toIvalSetPredicate", "tail" : "(cutoffTest: (CBDD, Int, Int) ⇒ Boolean)(findBounds: Boolean): Set[Interval[I]]", "member" : "cc.sven.tlike.IntLikeSet.toIvalSetPredicate", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toIvalSetPredicate(cutoffTest:(cc.sven.bdd.CBDD,Int,Int)=>Boolean)(findBounds:Boolean):Set[cc.sven.interval.Interval[I]]", "kind" : "def"}, {"label" : "mulPredicate", "tail" : "(cutoffTest: (CBDD, Int, Int) ⇒ Boolean)(findBounds: Boolean)(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.mulPredicate", "link" : "cc\/sven\/tlike\/IntLikeSet.html#mulPredicate(cutoffTest:(cc.sven.bdd.CBDD,Int,Int)=>Boolean)(findBounds:Boolean)(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "times", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.times", "link" : "cc\/sven\/tlike\/IntLikeSet.html#times(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "mul", "tail" : "(elems: Int, depths_: Int)(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.mul", "link" : "cc\/sven\/tlike\/IntLikeSet.html#mul(elems:Int,depths_:Int)(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "mult", "tail" : "(elems: Int, depths_: Int)(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.mult", "link" : "cc\/sven\/tlike\/IntLikeSet.html#mult(elems:Int,depths_:Int)(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "getNegPos", "tail" : "(): (IntLikeSet[I, T], IntLikeSet[I, T])", "member" : "cc.sven.tlike.IntLikeSet.getNegPos", "link" : "cc\/sven\/tlike\/IntLikeSet.html#getNegPos:(cc.sven.tlike.IntLikeSet[I,T],cc.sven.tlike.IntLikeSet[I,T])", "kind" : "def"}, {"label" : "toIvalSetPrecise", "tail" : "(): Set[Interval[I]]", "member" : "cc.sven.tlike.IntLikeSet.toIvalSetPrecise", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toIvalSetPrecise:Set[cc.sven.interval.Interval[I]]", "kind" : "def"}, {"label" : "toIvalSetI", "tail" : "(depths: Int): Set[Interval[I]]", "member" : "cc.sven.tlike.IntLikeSet.toIvalSetI", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toIvalSetI(depths:Int):scala.collection.immutable.Set[cc.sven.interval.Interval[I]]", "kind" : "def"}, {"label" : "toIvalSetT", "tail" : "(depths: Int)(ord: Ordering[T]): Set[FilledIval[T]]", "member" : "cc.sven.tlike.IntLikeSet.toIvalSetT", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toIvalSetT(depths:Int)(implicitord:Ordering[T]):scala.collection.immutable.Set[cc.sven.interval.FilledIval[T]]", "kind" : "def"}, {"label" : "bSar", "tail" : "(steps: Int): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.bSar", "link" : "cc\/sven\/tlike\/IntLikeSet.html#bSar(steps:Int):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "bRol", "tail" : "(steps: Int): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.bRol", "link" : "cc\/sven\/tlike\/IntLikeSet.html#bRol(steps:Int):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "bRor", "tail" : "(steps: Int): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.bRor", "link" : "cc\/sven\/tlike\/IntLikeSet.html#bRor(steps:Int):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "bShl", "tail" : "(steps: Int): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.bShl", "link" : "cc\/sven\/tlike\/IntLikeSet.html#bShl(steps:Int):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "bShr", "tail" : "(steps: Int): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.bShr", "link" : "cc\/sven\/tlike\/IntLikeSet.html#bShr(steps:Int):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "bNot", "tail" : "(): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.bNot", "link" : "cc\/sven\/tlike\/IntLikeSet.html#bNot:cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "bXOr", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.bXOr", "link" : "cc\/sven\/tlike\/IntLikeSet.html#bXOr(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "bOr", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.bOr", "link" : "cc\/sven\/tlike\/IntLikeSet.html#bOr(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "bAnd", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.bAnd", "link" : "cc\/sven\/tlike\/IntLikeSet.html#bAnd(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "negate", "tail" : "(): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.negate", "link" : "cc\/sven\/tlike\/IntLikeSet.html#negate:cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "plusWithCarry", "tail" : "(that: IntLikeSet[I, T]): (IntLikeSet[I, T], IntLikeSet[I, T])", "member" : "cc.sven.tlike.IntLikeSet.plusWithCarry", "link" : "cc\/sven\/tlike\/IntLikeSet.html#plusWithCarry(that:cc.sven.tlike.IntLikeSet[I,T]):(cc.sven.tlike.IntLikeSet[I,T],cc.sven.tlike.IntLikeSet[I,T])", "kind" : "def"}, {"label" : "plus", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.plus", "link" : "cc\/sven\/tlike\/IntLikeSet.html#plus(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "isFull", "tail" : "(): Boolean", "member" : "cc.sven.tlike.IntLikeSet.isFull", "link" : "cc\/sven\/tlike\/IntLikeSet.html#isFull:Boolean", "kind" : "def"}, {"label" : "changeBitWidth", "tail" : "(nbits: Int): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.changeBitWidth", "link" : "cc\/sven\/tlike\/IntLikeSet.html#changeBitWidth(nbits:Int):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "cc.sven.tlike.IntLikeSet.nonEmpty", "link" : "cc\/sven\/tlike\/IntLikeSet.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "cc.sven.tlike.IntLikeSet.isEmpty", "link" : "cc\/sven\/tlike\/IntLikeSet.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "subsetOf", "tail" : "(that: IntLikeSet[I, T]): Boolean", "member" : "cc.sven.tlike.IntLikeSet.subsetOf", "link" : "cc\/sven\/tlike\/IntLikeSet.html#subsetOf(that:cc.sven.tlike.IntLikeSet[I,T]):Boolean", "kind" : "def"}, {"label" : "randomElement", "tail" : "(): T", "member" : "cc.sven.tlike.IntLikeSet.randomElement", "link" : "cc\/sven\/tlike\/IntLikeSet.html#randomElement():T", "kind" : "def"}, {"label" : "nodeCount", "tail" : "(): Option[BigInt]", "member" : "cc.sven.tlike.IntLikeSet.nodeCount", "link" : "cc\/sven\/tlike\/IntLikeSet.html#nodeCount:Option[BigInt]", "kind" : "def"}, {"label" : "sizeGreaterThan", "tail" : "(value: Int): Boolean", "member" : "cc.sven.tlike.IntLikeSet.sizeGreaterThan", "link" : "cc\/sven\/tlike\/IntLikeSet.html#sizeGreaterThan(value:Int):Boolean", "kind" : "def"}, {"label" : "sizeGreaterThan", "tail" : "(value: BigInt): Boolean", "member" : "cc.sven.tlike.IntLikeSet.sizeGreaterThan", "link" : "cc\/sven\/tlike\/IntLikeSet.html#sizeGreaterThan(value:BigInt):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "cc.sven.tlike.IntLikeSet.size", "link" : "cc\/sven\/tlike\/IntLikeSet.html#size:Int", "kind" : "def"}, {"label" : "sizeBigInt", "tail" : "(): BigInt", "member" : "cc.sven.tlike.IntLikeSet.sizeBigInt", "link" : "cc\/sven\/tlike\/IntLikeSet.html#sizeBigInt:BigInt", "kind" : "def"}, {"label" : "min", "tail" : "(): T", "member" : "cc.sven.tlike.IntLikeSet.min", "link" : "cc\/sven\/tlike\/IntLikeSet.html#min:T", "kind" : "def"}, {"label" : "max", "tail" : "(): T", "member" : "cc.sven.tlike.IntLikeSet.max", "link" : "cc\/sven\/tlike\/IntLikeSet.html#max:T", "kind" : "def"}, {"label" : "|", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.|", "link" : "cc\/sven\/tlike\/IntLikeSet.html#|(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "union", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.union", "link" : "cc\/sven\/tlike\/IntLikeSet.html#union(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "&", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.&", "link" : "cc\/sven\/tlike\/IntLikeSet.html#&(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.intersect", "link" : "cc\/sven\/tlike\/IntLikeSet.html#intersect(that:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "ite", "tail" : "(t: IntLikeSet[I, T], e: IntLikeSet[I, T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.ite", "link" : "cc\/sven\/tlike\/IntLikeSet.html#ite(t:cc.sven.tlike.IntLikeSet[I,T],e:cc.sven.tlike.IntLikeSet[I,T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "invert", "tail" : "(): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.invert", "link" : "cc\/sven\/tlike\/IntLikeSet.html#invert:cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.unary_!", "link" : "cc\/sven\/tlike\/IntLikeSet.html#unary_!:cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "contains", "tail" : "(ele: T): Boolean", "member" : "cc.sven.tlike.IntLikeSet.contains", "link" : "cc\/sven\/tlike\/IntLikeSet.html#contains(ele:T):Boolean", "kind" : "def"}, {"label" : "add", "tail" : "(ele: T): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.add", "link" : "cc\/sven\/tlike\/IntLikeSet.html#add(ele:T):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "+", "tail" : "(ele: T): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.+", "link" : "cc\/sven\/tlike\/IntLikeSet.html#+(ele:T):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "remove", "tail" : "(ele: T): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.remove", "link" : "cc\/sven\/tlike\/IntLikeSet.html#remove(ele:T):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "-", "tail" : "(ele: T): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.-", "link" : "cc\/sven\/tlike\/IntLikeSet.html#-(ele:T):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.empty", "link" : "cc\/sven\/tlike\/IntLikeSet.html#empty:cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "cc.sven.tlike.IntLikeSet.toString", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "cc.sven.tlike.IntLikeSet.hashCode", "link" : "cc\/sven\/tlike\/IntLikeSet.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "cc.sven.tlike.IntLikeSet.equals", "link" : "cc\/sven\/tlike\/IntLikeSet.html#equals(other:Any):Boolean", "kind" : "def"}, {"member" : "cc.sven.tlike.IntLikeSet#<init>", "error" : "unsupported entity"}, {"label" : "set", "tail" : ": IntSet[I]", "member" : "cc.sven.tlike.IntLikeSet.set", "link" : "cc\/sven\/tlike\/IntLikeSet.html#set:cc.sven.intset.IntSet[I]", "kind" : "val"}, {"label" : "bits", "tail" : ": Int", "member" : "cc.sven.tlike.IntLikeSet.bits", "link" : "cc\/sven\/tlike\/IntLikeSet.html#bits:Int", "kind" : "val"}, {"label" : "parCombiner", "tail" : "(): Combiner[T, ParSet[T]]", "member" : "scala.collection.immutable.Set.parCombiner", "link" : "cc\/sven\/tlike\/IntLikeSet.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.immutable.ParSet[A]]", "kind" : "def"}, {"label" : "seq", "tail" : "(): Set[T]", "member" : "scala.collection.immutable.Set.seq", "link" : "cc\/sven\/tlike\/IntLikeSet.html#seq:scala.collection.immutable.Set[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.immutable.Set.toSet", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Set]", "member" : "scala.collection.immutable.Set.companion", "link" : "cc\/sven\/tlike\/IntLikeSet.html#companion:scala.collection.generic.GenericCompanion[scala.collection.immutable.Set]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.SetLike.stringPrefix", "link" : "cc\/sven\/tlike\/IntLikeSet.html#stringPrefix:String", "kind" : "def"}, {"label" : "subsets", "tail" : "(): Iterator[IntLikeSet[I, T]]", "member" : "scala.collection.SetLike.subsets", "link" : "cc\/sven\/tlike\/IntLikeSet.html#subsets():Iterator[This]", "kind" : "def"}, {"label" : "subsets", "tail" : "(len: Int): Iterator[IntLikeSet[I, T]]", "member" : "scala.collection.SetLike.subsets", "link" : "cc\/sven\/tlike\/IntLikeSet.html#subsets(len:Int):Iterator[This]", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSet[T]): IntLikeSet[I, T]", "member" : "scala.collection.SetLike.diff", "link" : "cc\/sven\/tlike\/IntLikeSet.html#diff(that:scala.collection.GenSet[A]):This", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSet[T]): IntLikeSet[I, T]", "member" : "scala.collection.SetLike.union", "link" : "cc\/sven\/tlike\/IntLikeSet.html#union(that:scala.collection.GenSet[A]):This", "kind" : "def"}, {"label" : "++", "tail" : "(elems: GenTraversableOnce[T]): IntLikeSet[I, T]", "member" : "scala.collection.SetLike.++", "link" : "cc\/sven\/tlike\/IntLikeSet.html#++(elems:scala.collection.GenTraversableOnce[A]):This", "kind" : "def"}, {"label" : "+", "tail" : "(elem1: T, elem2: T, elems: T*): IntLikeSet[I, T]", "member" : "scala.collection.SetLike.+", "link" : "cc\/sven\/tlike\/IntLikeSet.html#+(elem1:A,elem2:A,elems:A*):This", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B)(bf: CanBuildFrom[IntLikeSet[I, T], B, That]): That", "member" : "scala.collection.SetLike.map", "link" : "cc\/sven\/tlike\/IntLikeSet.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[This,B,That]):That", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[A1]", "member" : "scala.collection.SetLike.toBuffer", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toBuffer[A1>:A]:scala.collection.mutable.Buffer[A1]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "scala.collection.SetLike.toSeq", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[T, IntLikeSet[I, T]]", "member" : "scala.collection.SetLike.newBuilder", "link" : "cc\/sven\/tlike\/IntLikeSet.html#newBuilder:scala.collection.mutable.Builder[A,This]", "kind" : "def"}, {"label" : "--", "tail" : "(xs: GenTraversableOnce[T]): IntLikeSet[I, T]", "member" : "scala.collection.generic.Subtractable.--", "link" : "cc\/sven\/tlike\/IntLikeSet.html#--(xs:scala.collection.GenTraversableOnce[A]):Repr", "kind" : "def"}, {"label" : "-", "tail" : "(elem1: T, elem2: T, elems: T*): IntLikeSet[I, T]", "member" : "scala.collection.generic.Subtractable.-", "link" : "cc\/sven\/tlike\/IntLikeSet.html#-(elem1:A,elem2:A,elems:A*):Repr", "kind" : "def"}, {"label" : "subsetOf", "tail" : "(that: GenSet[T]): Boolean", "member" : "scala.collection.GenSetLike.subsetOf", "link" : "cc\/sven\/tlike\/IntLikeSet.html#subsetOf(that:scala.collection.GenSet[A]):Boolean", "kind" : "def"}, {"label" : "&~", "tail" : "(that: GenSet[T]): IntLikeSet[I, T]", "member" : "scala.collection.GenSetLike.&~", "link" : "cc\/sven\/tlike\/IntLikeSet.html#&~(that:scala.collection.GenSet[A]):Repr", "kind" : "def"}, {"label" : "|", "tail" : "(that: GenSet[T]): IntLikeSet[I, T]", "member" : "scala.collection.GenSetLike.|", "link" : "cc\/sven\/tlike\/IntLikeSet.html#|(that:scala.collection.GenSet[A]):Repr", "kind" : "def"}, {"label" : "&", "tail" : "(that: GenSet[T]): IntLikeSet[I, T]", "member" : "scala.collection.GenSetLike.&", "link" : "cc\/sven\/tlike\/IntLikeSet.html#&(that:scala.collection.GenSet[A]):Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSet[T]): IntLikeSet[I, T]", "member" : "scala.collection.GenSetLike.intersect", "link" : "cc\/sven\/tlike\/IntLikeSet.html#intersect(that:scala.collection.GenSet[A]):Repr", "kind" : "def"}, {"label" : "apply", "tail" : "(elem: T): Boolean", "member" : "scala.collection.GenSetLike.apply", "link" : "cc\/sven\/tlike\/IntLikeSet.html#apply(elem:A):Boolean", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Boolean) ⇒ A): (T) ⇒ A", "member" : "scala.Function1.andThen", "link" : "cc\/sven\/tlike\/IntLikeSet.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ T): (A) ⇒ Boolean", "member" : "scala.Function1.compose", "link" : "cc\/sven\/tlike\/IntLikeSet.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[T, IntLikeSet[I, T]]", "member" : "scala.collection.IterableLike.view", "link" : "cc\/sven\/tlike\/IntLikeSet.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[T, IntLikeSet[I, T]]", "member" : "scala.collection.IterableLike.view", "link" : "cc\/sven\/tlike\/IntLikeSet.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "cc\/sven\/tlike\/IntLikeSet.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[T]", "member" : "scala.collection.IterableLike.toStream", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "cc\/sven\/tlike\/IntLikeSet.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[IntLikeSet[I, T], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "cc\/sven\/tlike\/IntLikeSet.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[IntLikeSet[I, T], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "cc\/sven\/tlike\/IntLikeSet.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[IntLikeSet[I, T], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "cc\/sven\/tlike\/IntLikeSet.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "cc\/sven\/tlike\/IntLikeSet.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): IntLikeSet[I, T]", "member" : "scala.collection.IterableLike.dropRight", "link" : "cc\/sven\/tlike\/IntLikeSet.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): IntLikeSet[I, T]", "member" : "scala.collection.IterableLike.takeRight", "link" : "cc\/sven\/tlike\/IntLikeSet.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[IntLikeSet[I, T]]", "member" : "scala.collection.IterableLike.sliding", "link" : "cc\/sven\/tlike\/IntLikeSet.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[IntLikeSet[I, T]]", "member" : "scala.collection.IterableLike.sliding", "link" : "cc\/sven\/tlike\/IntLikeSet.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[IntLikeSet[I, T]]", "member" : "scala.collection.IterableLike.grouped", "link" : "cc\/sven\/tlike\/IntLikeSet.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) ⇒ Boolean): IntLikeSet[I, T]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "cc\/sven\/tlike\/IntLikeSet.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): IntLikeSet[I, T]", "member" : "scala.collection.IterableLike.drop", "link" : "cc\/sven\/tlike\/IntLikeSet.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): IntLikeSet[I, T]", "member" : "scala.collection.IterableLike.take", "link" : "cc\/sven\/tlike\/IntLikeSet.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): IntLikeSet[I, T]", "member" : "scala.collection.IterableLike.slice", "link" : "cc\/sven\/tlike\/IntLikeSet.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): T", "member" : "scala.collection.IterableLike.head", "link" : "cc\/sven\/tlike\/IntLikeSet.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[T]", "member" : "scala.collection.IterableLike.toIterator", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[T]", "member" : "scala.collection.IterableLike.toIterable", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (T, B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "cc\/sven\/tlike\/IntLikeSet.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "cc\/sven\/tlike\/IntLikeSet.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (T) ⇒ Boolean): Option[T]", "member" : "scala.collection.IterableLike.find", "link" : "cc\/sven\/tlike\/IntLikeSet.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "cc\/sven\/tlike\/IntLikeSet.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "cc\/sven\/tlike\/IntLikeSet.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (T) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "cc\/sven\/tlike\/IntLikeSet.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: IntLikeSet[I, T]): Iterable[T]", "member" : "scala.collection.IterableLike.toCollection", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[T]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "cc\/sven\/tlike\/IntLikeSet.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (T) ⇒ GenTraversableOnce[B]): Set[Set[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "cc\/sven\/tlike\/IntLikeSet.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (T) ⇒ GenTraversableOnce[B]): Set[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "cc\/sven\/tlike\/IntLikeSet.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (T) ⇒ (A1, A2, A3)): (Set[A1], Set[A2], Set[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "cc\/sven\/tlike\/IntLikeSet.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (T) ⇒ (A1, A2)): (Set[A1], Set[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "cc\/sven\/tlike\/IntLikeSet.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Set[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "cc\/sven\/tlike\/IntLikeSet.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (T) ⇒ Boolean): FilterMonadic[T, IntLikeSet[I, T]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "cc\/sven\/tlike\/IntLikeSet.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, T, Col[T]]): Col[T]", "member" : "scala.collection.TraversableLike.to", "link" : "cc\/sven\/tlike\/IntLikeSet.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[T]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[IntLikeSet[I, T]]", "member" : "scala.collection.TraversableLike.inits", "link" : "cc\/sven\/tlike\/IntLikeSet.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[IntLikeSet[I, T]]", "member" : "scala.collection.TraversableLike.tails", "link" : "cc\/sven\/tlike\/IntLikeSet.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (IntLikeSet[I, T], IntLikeSet[I, T])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "cc\/sven\/tlike\/IntLikeSet.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (T) ⇒ Boolean): (IntLikeSet[I, T], IntLikeSet[I, T])", "member" : "scala.collection.TraversableLike.span", "link" : "cc\/sven\/tlike\/IntLikeSet.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) ⇒ Boolean): IntLikeSet[I, T]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "cc\/sven\/tlike\/IntLikeSet.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): IntLikeSet[I, T]", "member" : "scala.collection.TraversableLike.init", "link" : "cc\/sven\/tlike\/IntLikeSet.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "cc\/sven\/tlike\/IntLikeSet.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): T", "member" : "scala.collection.TraversableLike.last", "link" : "cc\/sven\/tlike\/IntLikeSet.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): IntLikeSet[I, T]", "member" : "scala.collection.TraversableLike.tail", "link" : "cc\/sven\/tlike\/IntLikeSet.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "scala.collection.TraversableLike.headOption", "link" : "cc\/sven\/tlike\/IntLikeSet.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (T, B) ⇒ B)(bf: CanBuildFrom[IntLikeSet[I, T], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "cc\/sven\/tlike\/IntLikeSet.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, T) ⇒ B)(bf: CanBuildFrom[IntLikeSet[I, T], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "cc\/sven\/tlike\/IntLikeSet.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[IntLikeSet[I, T], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "cc\/sven\/tlike\/IntLikeSet.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (T) ⇒ K): Map[K, IntLikeSet[I, T]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "cc\/sven\/tlike\/IntLikeSet.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (T) ⇒ Boolean): (IntLikeSet[I, T], IntLikeSet[I, T])", "member" : "scala.collection.TraversableLike.partition", "link" : "cc\/sven\/tlike\/IntLikeSet.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B])(bf: CanBuildFrom[IntLikeSet[I, T], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "cc\/sven\/tlike\/IntLikeSet.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (T) ⇒ Boolean): IntLikeSet[I, T]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "cc\/sven\/tlike\/IntLikeSet.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) ⇒ Boolean): IntLikeSet[I, T]", "member" : "scala.collection.TraversableLike.filter", "link" : "cc\/sven\/tlike\/IntLikeSet.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[IntLikeSet[I, T], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "cc\/sven\/tlike\/IntLikeSet.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[IntLikeSet[I, T], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "cc\/sven\/tlike\/IntLikeSet.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[IntLikeSet[I, T], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "cc\/sven\/tlike\/IntLikeSet.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[IntLikeSet[I, T], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "cc\/sven\/tlike\/IntLikeSet.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "cc\/sven\/tlike\/IntLikeSet.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "cc\/sven\/tlike\/IntLikeSet.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): IntLikeSet[I, T]", "member" : "scala.collection.TraversableLike.repr", "link" : "cc\/sven\/tlike\/IntLikeSet.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "cc\/sven\/tlike\/IntLikeSet.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSet[T]", "member" : "scala.collection.Parallelizable.par", "link" : "cc\/sven\/tlike\/IntLikeSet.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/tlike\/IntLikeSet.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/tlike\/IntLikeSet.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/tlike\/IntLikeSet.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/tlike\/IntLikeSet.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/tlike\/IntLikeSet.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/tlike\/IntLikeSet.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[T, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[T]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[T]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.toList", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "cc\/sven\/tlike\/IntLikeSet.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/tlike\/IntLikeSet.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/tlike\/IntLikeSet.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "cc\/sven\/tlike\/IntLikeSet.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.minBy", "link" : "cc\/sven\/tlike\/IntLikeSet.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "cc\/sven\/tlike\/IntLikeSet.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.max", "link" : "cc\/sven\/tlike\/IntLikeSet.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.min", "link" : "cc\/sven\/tlike\/IntLikeSet.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "cc\/sven\/tlike\/IntLikeSet.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "cc\/sven\/tlike\/IntLikeSet.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, T) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "cc\/sven\/tlike\/IntLikeSet.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "cc\/sven\/tlike\/IntLikeSet.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "cc\/sven\/tlike\/IntLikeSet.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "cc\/sven\/tlike\/IntLikeSet.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (T, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "cc\/sven\/tlike\/IntLikeSet.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, T) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "cc\/sven\/tlike\/IntLikeSet.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "cc\/sven\/tlike\/IntLikeSet.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "cc\/sven\/tlike\/IntLikeSet.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "cc\/sven\/tlike\/IntLikeSet.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "cc\/sven\/tlike\/IntLikeSet.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[T, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "cc\/sven\/tlike\/IntLikeSet.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "cc\/sven\/tlike\/IntLikeSet.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "cc\/sven\/tlike\/IntLikeSet.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "cc\/sven\/tlike\/IntLikeSet.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/tlike\/IntLikeSet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/tlike\/IntLikeSet.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/tlike\/IntLikeSet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/tlike\/IntLikeSet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/tlike\/IntLikeSet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/tlike\/IntLikeSet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/tlike\/IntLikeSet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/IntLikeSet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/IntLikeSet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/IntLikeSet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/tlike\/IntLikeSet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/tlike\/IntLikeSet.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/tlike\/IntLikeSet.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/tlike\/IntLikeSet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/tlike\/IntLikeSet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/tlike\/IntLikeSet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "strided", "tail" : "(bits: Int, stride: Int)(int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], dboundedBits: DynBoundedBits[T], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.strided", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#strided[I,T](bits:Int,stride:Int)(implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitdboundedBits:cc.sven.bounded.DynBoundedBits[T],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "rangeJLong", "tail" : "(lo: T, hi: T)(dboundedBits: DynBoundedBits[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): IntLikeSet[Long, T]", "member" : "cc.sven.tlike.IntLikeSet.rangeJLong", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#rangeJLong[T](lo:T,hi:T)(implicitdboundedBits:cc.sven.bounded.DynBoundedBits[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):cc.sven.tlike.IntLikeSet[Long,T]", "kind" : "def"}, {"label" : "range", "tail" : "(bits_: Int, lo: I, hi: I)(int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], dboundedBits: DynBoundedBits[T], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.range", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#range[I,T](bits_:Int,lo:I,hi:I)(implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitdboundedBits:cc.sven.bounded.DynBoundedBits[T],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "range", "tail" : "(lo: T, hi: T)(int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], dboundedBits: DynBoundedBits[T], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.range", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#range[I,T](lo:T,hi:T)(implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitdboundedBits:cc.sven.bounded.DynBoundedBits[T],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(bits: Int, ival: Interval[T])(int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], dboundedBits: DynBoundedBits[T], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.apply", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#apply[I,T](bits:Int,ival:cc.sven.interval.Interval[T])(implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitdboundedBits:cc.sven.bounded.DynBoundedBits[T],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "applyJLong", "tail" : "(bits: Int)(dboundedBits: DynBoundedBits[T], castTI: Castable[T, Pair[Integer, Long]], castIT: Castable[Pair[Integer, Long], T]): IntLikeSet[Long, T]", "member" : "cc.sven.tlike.IntLikeSet.applyJLong", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#applyJLong[T](bits:Int)(implicitdboundedBits:cc.sven.bounded.DynBoundedBits[T],implicitcastTI:cc.sven.tlike.Castable[T,cc.sven.misc.Pair[Integer,Long]],implicitcastIT:cc.sven.tlike.Castable[cc.sven.misc.Pair[Integer,Long],T]):cc.sven.tlike.IntLikeSet[Long,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(set: Set[T])(int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], tboundedBits: BoundedBits[T], dboundedBits: DynBoundedBits[T], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.apply", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#apply[I,T](set:Set[T])(implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicittboundedBits:cc.sven.bounded.BoundedBits[T],implicitdboundedBits:cc.sven.bounded.DynBoundedBits[T],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(bits: Int, set: Set[T])(int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], dboundedBits: DynBoundedBits[T], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.apply", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#apply[I,T](bits:Int,set:Set[T])(implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitdboundedBits:cc.sven.bounded.DynBoundedBits[T],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(bits: Int)(int: Integral[I], bounded: Bounded[I], boundedBits: BoundedBits[I], dboundedBits: DynBoundedBits[T], castTI: Castable[T, (Int, I)], castIT: Castable[(Int, I), T]): IntLikeSet[I, T]", "member" : "cc.sven.tlike.IntLikeSet.apply", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#apply[I,T](bits:Int)(implicitint:Integral[I],implicitbounded:cc.sven.bounded.Bounded[I],implicitboundedBits:cc.sven.bounded.BoundedBits[I],implicitdboundedBits:cc.sven.bounded.DynBoundedBits[T],implicitcastTI:cc.sven.tlike.Castable[T,(Int,I)],implicitcastIT:cc.sven.tlike.Castable[(Int,I),T]):cc.sven.tlike.IntLikeSet[I,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/tlike\/IntLikeSet$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/tlike\/IntLikeSet$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/tlike\/IntLikeSet.html", "kind" : "class"}, {"name" : "cc.sven.tlike.IntLikeSetIterator", "shortDescription" : "", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#GroupedIterator[B<:<?>]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "next", "tail" : "(): T", "member" : "cc.sven.tlike.IntLikeSetIterator.next", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#next():T", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "cc.sven.tlike.IntLikeSetIterator.hasNext", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#hasNext():Boolean", "kind" : "def"}, {"label" : "ilsiIter", "tail" : ": IntSetIterator[I]", "member" : "cc.sven.tlike.IntLikeSetIterator.ilsiIter", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#ilsiIter:cc.sven.intset.IntSetIterator[I]", "kind" : "val"}, {"member" : "cc.sven.tlike.IntLikeSetIterator#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[T]", "member" : "scala.collection.Iterator.toStream", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[T]", "member" : "scala.collection.Iterator.toIterator", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[T]", "member" : "scala.collection.Iterator.toTraversable", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[T], Iterator[T])", "member" : "scala.collection.Iterator.duplicate", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[T]", "member" : "scala.collection.Iterator.buffered", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (T) ⇒ Boolean): Option[T]", "member" : "scala.collection.Iterator.find", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (T) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(T, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(T, B)]", "member" : "scala.collection.Iterator.zip", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.dropWhile", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (T) ⇒ Boolean): (Iterator[T], Iterator[T])", "member" : "scala.collection.Iterator.span", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (T) ⇒ Boolean): (Iterator[T], Iterator[T])", "member" : "scala.collection.Iterator.partition", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.takeWhile", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (T, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, T) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.filterNot", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.withFilter", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (T, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.filter", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[T]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[T]", "member" : "scala.collection.Iterator.slice", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[T]", "member" : "scala.collection.Iterator.drop", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[T]", "member" : "scala.collection.Iterator.take", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[T]", "member" : "scala.collection.Iterator.seq", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[T, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, T, Col[T]]): Col[T]", "member" : "scala.collection.TraversableOnce.to", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[T]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[T]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[T]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.toList", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.minBy", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.max", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.min", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, T) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (T, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, T) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[T, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/tlike\/IntLikeSetIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/tlike\/IntLikeSetIterator.html", "kind" : "class"}, {"name" : "cc.sven.tlike.NBitLong", "shortDescription" : "", "object" : "cc\/sven\/tlike\/NBitLong$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "cc.sven.tlike.NBitLong.toString", "link" : "cc\/sven\/tlike\/NBitLong.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "cc.sven.tlike.NBitLong.hashCode", "link" : "cc\/sven\/tlike\/NBitLong.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "cc.sven.tlike.NBitLong.equals", "link" : "cc\/sven\/tlike\/NBitLong.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "getValue", "tail" : "(): Long", "member" : "cc.sven.tlike.NBitLong.getValue", "link" : "cc\/sven\/tlike\/NBitLong.html#getValue:Long", "kind" : "def"}, {"member" : "cc.sven.tlike.NBitLong#<init>", "error" : "unsupported entity"}, {"label" : "bits", "tail" : ": Int", "member" : "cc.sven.tlike.NBitLong.bits", "link" : "cc\/sven\/tlike\/NBitLong.html#bits:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/tlike\/NBitLong.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/tlike\/NBitLong.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/tlike\/NBitLong.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/tlike\/NBitLong.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/tlike\/NBitLong.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/tlike\/NBitLong.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/tlike\/NBitLong.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/NBitLong.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/NBitLong.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/NBitLong.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/tlike\/NBitLong.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/tlike\/NBitLong.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/tlike\/NBitLong.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/tlike\/NBitLong.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/tlike\/NBitLong.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/tlike\/NBitLong.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "NBitLongIsNBitLongCastable", "tail" : "", "member" : "cc.sven.tlike.NBitLong.NBitLongIsNBitLongCastable", "link" : "cc\/sven\/tlike\/NBitLong$.html#NBitLongIsNBitLongCastable", "kind" : "implicit object"}, {"label" : "NBitLongIsLongCastable", "tail" : "", "member" : "cc.sven.tlike.NBitLong.NBitLongIsLongCastable", "link" : "cc\/sven\/tlike\/NBitLong$.html#NBitLongIsLongCastable", "kind" : "implicit object"}, {"label" : "NBitLongIsIntegral", "tail" : "", "member" : "cc.sven.tlike.NBitLong.NBitLongIsIntegral", "link" : "cc\/sven\/tlike\/NBitLong$.html#NBitLongIsIntegral", "kind" : "implicit object"}, {"label" : "NBitLongIsDynBounded", "tail" : "", "member" : "cc.sven.tlike.NBitLong.NBitLongIsDynBounded", "link" : "cc\/sven\/tlike\/NBitLong$.html#NBitLongIsDynBounded", "kind" : "implicit object"}, {"label" : "NBitLongIsDynBoundedBits", "tail" : "", "member" : "cc.sven.tlike.NBitLong.NBitLongIsDynBoundedBits", "link" : "cc\/sven\/tlike\/NBitLong$.html#NBitLongIsDynBoundedBits", "kind" : "implicit object"}, {"label" : "NBitLongIsOrdered", "tail" : ": NBitLongIsOrderedC", "member" : "cc.sven.tlike.NBitLong.NBitLongIsOrdered", "link" : "cc\/sven\/tlike\/NBitLong$.html#NBitLongIsOrdered:cc.sven.tlike.NBitLong.NBitLongIsOrderedC", "kind" : "implicit val"}, {"label" : "NBitLongIsOrderedC", "tail" : "", "member" : "cc.sven.tlike.NBitLong.NBitLongIsOrderedC", "link" : "cc\/sven\/tlike\/NBitLong$.html#NBitLongIsOrderedCextendsOrdering[cc.sven.tlike.NBitLong]", "kind" : "class"}, {"label" : "apply", "tail" : "(value: Long): NBitLong", "member" : "cc.sven.tlike.NBitLong.apply", "link" : "cc\/sven\/tlike\/NBitLong$.html#apply(value:Long):cc.sven.tlike.NBitLong", "kind" : "def"}, {"label" : "apply", "tail" : "(bits: Int, value: Long): NBitLong", "member" : "cc.sven.tlike.NBitLong.apply", "link" : "cc\/sven\/tlike\/NBitLong$.html#apply(bits:Int,value:Long):cc.sven.tlike.NBitLong", "kind" : "def"}, {"label" : "bound", "tail" : "(x: Long, bits: Int): Long", "member" : "cc.sven.tlike.NBitLong.bound", "link" : "cc\/sven\/tlike\/NBitLong$.html#bound(x:Long,bits:Int):Long", "kind" : "def"}, {"label" : "boundBits", "tail" : "(bits: Int): Int", "member" : "cc.sven.tlike.NBitLong.boundBits", "link" : "cc\/sven\/tlike\/NBitLong$.html#boundBits(bits:Int):Int", "kind" : "def"}, {"label" : "signContract", "tail" : "(bits: Int, value: Long): Long", "member" : "cc.sven.tlike.NBitLong.signContract", "link" : "cc\/sven\/tlike\/NBitLong$.html#signContract(bits:Int,value:Long):Long", "kind" : "def"}, {"label" : "signExtend", "tail" : "(bits: Int, value: Long): Long", "member" : "cc.sven.tlike.NBitLong.signExtend", "link" : "cc\/sven\/tlike\/NBitLong$.html#signExtend(bits:Int,value:Long):Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/tlike\/NBitLong$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/tlike\/NBitLong$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/tlike\/NBitLong$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/tlike\/NBitLong$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/tlike\/NBitLong$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/tlike\/NBitLong$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/tlike\/NBitLong$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/NBitLong$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/NBitLong$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/NBitLong$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/tlike\/NBitLong$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/tlike\/NBitLong$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/tlike\/NBitLong$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/tlike\/NBitLong$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/tlike\/NBitLong$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/tlike\/NBitLong$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/tlike\/NBitLong$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/tlike\/NBitLong$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/tlike\/NBitLong$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/tlike\/NBitLong.html", "kind" : "class"}, {"name" : "cc.sven.tlike.PrecisionPredicate", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(node: CBDD, height: Int, depth: Int): Boolean", "member" : "cc.sven.tlike.PrecisionPredicate.apply", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#apply(node:cc.sven.bdd.CBDD,height:Int,depth:Int):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "cc.sven.tlike.PrecisionPredicate.toString", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#toString():String", "kind" : "def"}, {"member" : "cc.sven.tlike.PrecisionPredicate#<init>", "error" : "unsupported entity"}, {"label" : "precision", "tail" : ": Double", "member" : "cc.sven.tlike.PrecisionPredicate.precision", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#precision:Double", "kind" : "val"}, {"label" : "tupled", "tail" : "(): ((CBDD, Int, Int)) ⇒ Boolean", "member" : "scala.Function3.tupled", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#tupled:((T1,T2,T3))=>R", "kind" : "def"}, {"label" : "curried", "tail" : "(): (CBDD) ⇒ (Int) ⇒ (Int) ⇒ Boolean", "member" : "scala.Function3.curried", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#curried:T1=>(T2=>(T3=>R))", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/tlike\/PrecisionPredicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/tlike\/PrecisionPredicate.html", "kind" : "case class"}], "cc.sven.interval" : [{"name" : "cc.sven.interval.Arith", "members_trait" : [{"label" : "mkArithOps", "tail" : "(lhs: T): ArithOps[T]", "member" : "cc.sven.interval.Arith.mkArithOps", "link" : "cc\/sven\/interval\/Arith.html#mkArithOps(lhs:T):cc.sven.interval.ArithOps[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/interval\/Arith.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/interval\/Arith.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/interval\/Arith.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/interval\/Arith.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/interval\/Arith.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/interval\/Arith.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/interval\/Arith.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/Arith.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/Arith.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/Arith.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/interval\/Arith.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/interval\/Arith.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/interval\/Arith.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/interval\/Arith.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/interval\/Arith.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/interval\/Arith.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/interval\/Arith.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/interval\/Arith.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/interval\/Arith.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "negate", "tail" : "(a: T): T", "member" : "cc.sven.interval.Arith.negate", "link" : "cc\/sven\/interval\/Arith.html#negate(a:T):T", "kind" : "abstract def"}, {"label" : "div", "tail" : "(a: T, b: T): T", "member" : "cc.sven.interval.Arith.div", "link" : "cc\/sven\/interval\/Arith.html#div(a:T,b:T):T", "kind" : "abstract def"}, {"label" : "mul", "tail" : "(a: T, b: T): T", "member" : "cc.sven.interval.Arith.mul", "link" : "cc\/sven\/interval\/Arith.html#mul(a:T,b:T):T", "kind" : "abstract def"}, {"label" : "minus", "tail" : "(a: T, b: T): T", "member" : "cc.sven.interval.Arith.minus", "link" : "cc\/sven\/interval\/Arith.html#minus(a:T,b:T):T", "kind" : "abstract def"}, {"label" : "plus", "tail" : "(a: T, b: T): T", "member" : "cc.sven.interval.Arith.plus", "link" : "cc\/sven\/interval\/Arith.html#plus(a:T,b:T):T", "kind" : "abstract def"}], "shortDescription" : "Trait of arithmetic objects.", "trait" : "cc\/sven\/interval\/Arith.html", "kind" : "trait"}, {"name" : "cc.sven.interval.ArithOps", "shortDescription" : "Abstract class for arithmetic opertions.", "members_class" : [{"member" : "cc.sven.interval.ArithOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/interval\/ArithOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/interval\/ArithOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/interval\/ArithOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/interval\/ArithOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/interval\/ArithOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/interval\/ArithOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/interval\/ArithOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/ArithOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/ArithOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/ArithOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/interval\/ArithOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/interval\/ArithOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/interval\/ArithOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/interval\/ArithOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/interval\/ArithOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/interval\/ArithOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/interval\/ArithOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/interval\/ArithOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/interval\/ArithOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unary_-", "tail" : "(): T", "member" : "cc.sven.interval.ArithOps.unary_-", "link" : "cc\/sven\/interval\/ArithOps.html#unary_-:T", "kind" : "abstract def"}, {"label" : "\/", "tail" : "(rhs: T): T", "member" : "cc.sven.interval.ArithOps.\/", "link" : "cc\/sven\/interval\/ArithOps.html#\/(rhs:T):T", "kind" : "abstract def"}, {"label" : "*", "tail" : "(rhs: T): T", "member" : "cc.sven.interval.ArithOps.*", "link" : "cc\/sven\/interval\/ArithOps.html#*(rhs:T):T", "kind" : "abstract def"}, {"label" : "-", "tail" : "(rhs: T): T", "member" : "cc.sven.interval.ArithOps.-", "link" : "cc\/sven\/interval\/ArithOps.html#-(rhs:T):T", "kind" : "abstract def"}, {"label" : "+", "tail" : "(rhs: T): T", "member" : "cc.sven.interval.ArithOps.+", "link" : "cc\/sven\/interval\/ArithOps.html#+(rhs:T):T", "kind" : "abstract def"}], "class" : "cc\/sven\/interval\/ArithOps.html", "kind" : "class"}, {"name" : "cc.sven.interval.EmptyIval", "shortDescription" : "", "object" : "cc\/sven\/interval\/EmptyIval$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/interval\/EmptyIval$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/interval\/EmptyIval$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/interval\/EmptyIval$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/interval\/EmptyIval$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/interval\/EmptyIval$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/interval\/EmptyIval$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/interval\/EmptyIval$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/EmptyIval$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/EmptyIval$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/EmptyIval$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/interval\/EmptyIval$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/interval\/EmptyIval$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/interval\/EmptyIval$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/interval\/EmptyIval$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/interval\/EmptyIval$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/interval\/EmptyIval$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/interval\/EmptyIval$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.interval.EmptyStridedIval", "shortDescription" : "", "object" : "cc\/sven\/interval\/EmptyStridedIval$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/interval\/EmptyStridedIval$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cc.sven.interval.FilledIval", "shortDescription" : "Class for nonempty intervals.", "object" : "cc\/sven\/interval\/FilledIval$.html", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "cc.sven.interval.FilledIval.hashCode", "link" : "cc\/sven\/interval\/FilledIval.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "cc.sven.interval.FilledIval.equals", "link" : "cc\/sven\/interval\/FilledIval.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "cc.sven.interval.FilledIval.toString", "link" : "cc\/sven\/interval\/FilledIval.html#toString():String", "kind" : "def"}, {"member" : "cc.sven.interval.FilledIval#<init>", "error" : "unsupported entity"}, {"label" : "hi", "tail" : ": T", "member" : "cc.sven.interval.FilledIval.hi", "link" : "cc\/sven\/interval\/FilledIval.html#hi:T", "kind" : "val"}, {"label" : "lo", "tail" : ": T", "member" : "cc.sven.interval.FilledIval.lo", "link" : "cc\/sven\/interval\/FilledIval.html#lo:T", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/interval\/FilledIval.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/interval\/FilledIval.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/interval\/FilledIval.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/interval\/FilledIval.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/interval\/FilledIval.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/interval\/FilledIval.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/interval\/FilledIval.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/FilledIval.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/FilledIval.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/FilledIval.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/interval\/FilledIval.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/interval\/FilledIval.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/interval\/FilledIval.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/interval\/FilledIval.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/interval\/FilledIval.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/interval\/FilledIval.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(ival: Interval[T]): Option[(T, T)]", "member" : "cc.sven.interval.FilledIval.unapply", "link" : "cc\/sven\/interval\/FilledIval$.html#unapply[T](ival:cc.sven.interval.Interval[T]):Option[(T,T)]", "kind" : "def"}, {"label" : "apply", "tail" : "(lo: T, hi: T)(ord: Ordering[T]): FilledIval[T]", "member" : "cc.sven.interval.FilledIval.apply", "link" : "cc\/sven\/interval\/FilledIval$.html#apply[T](lo:T,hi:T)(implicitord:Ordering[T]):cc.sven.interval.FilledIval[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/interval\/FilledIval$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/interval\/FilledIval$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/interval\/FilledIval$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/interval\/FilledIval$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/interval\/FilledIval$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/interval\/FilledIval$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/interval\/FilledIval$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/FilledIval$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/FilledIval$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/FilledIval$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/interval\/FilledIval$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/interval\/FilledIval$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/interval\/FilledIval$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/interval\/FilledIval$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/interval\/FilledIval$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/interval\/FilledIval$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/interval\/FilledIval$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/interval\/FilledIval$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/interval\/FilledIval$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cc\/sven\/interval\/FilledIval.html", "kind" : "class"}, {"name" : "cc.sven.interval.FilledStridedIval", "shortDescription" : "", "members_case class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "cc.sven.interval.FilledStridedIval.hashCode", "link" : "cc\/sven\/interval\/FilledStridedIval.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "cc.sven.interval.FilledStridedIval.equals", "link" : "cc\/sven\/interval\/FilledStridedIval.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "cc.sven.interval.FilledStridedIval.toString", "link" : "cc\/sven\/interval\/FilledStridedIval.html#toString():String", "kind" : "def"}, {"member" : "cc.sven.interval.FilledStridedIval#<init>", "error" : "unsupported entity"}, {"label" : "hi", "tail" : ": T", "member" : "cc.sven.interval.FilledStridedIval.hi", "link" : "cc\/sven\/interval\/FilledStridedIval.html#hi:T", "kind" : "val"}, {"label" : "lo", "tail" : ": T", "member" : "cc.sven.interval.FilledStridedIval.lo", "link" : "cc\/sven\/interval\/FilledStridedIval.html#lo:T", "kind" : "val"}, {"label" : "stride", "tail" : ": T", "member" : "cc.sven.interval.FilledStridedIval.stride", "link" : "cc\/sven\/interval\/FilledStridedIval.html#stride:T", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/interval\/FilledStridedIval.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/interval\/FilledStridedIval.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/interval\/FilledStridedIval.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/interval\/FilledStridedIval.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/interval\/FilledStridedIval.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/interval\/FilledStridedIval.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/interval\/FilledStridedIval.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/FilledStridedIval.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/FilledStridedIval.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/FilledStridedIval.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/interval\/FilledStridedIval.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/interval\/FilledStridedIval.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/interval\/FilledStridedIval.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/interval\/FilledStridedIval.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/interval\/FilledStridedIval.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/interval\/FilledStridedIval.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cc\/sven\/interval\/FilledStridedIval.html", "kind" : "case class"}, {"name" : "cc.sven.interval.Interval", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/interval\/Interval.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/interval\/Interval.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/interval\/Interval.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/interval\/Interval.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/interval\/Interval.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/interval\/Interval.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/interval\/Interval.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/Interval.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/Interval.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/Interval.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/interval\/Interval.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/interval\/Interval.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/interval\/Interval.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/interval\/Interval.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/interval\/Interval.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/interval\/Interval.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/interval\/Interval.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/interval\/Interval.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/interval\/Interval.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "cc\/sven\/interval\/Interval$.html", "members_object" : [{"label" : "intervalArith", "tail" : "(arith: Arith[T], order: Ordering[T]): Arith[Interval[T]]", "member" : "cc.sven.interval.Interval.intervalArith", "link" : "cc\/sven\/interval\/Interval$.html#intervalArith[T](implicitarith:cc.sven.interval.Arith[T],implicitorder:Ordering[T]):cc.sven.interval.Arith[cc.sven.interval.Interval[T]]", "kind" : "implicit def"}, {"label" : "arithFromIntegral", "tail" : "(int: Integral[T]): Arith[T]", "member" : "cc.sven.interval.Interval.arithFromIntegral", "link" : "cc\/sven\/interval\/Interval$.html#arithFromIntegral[T](implicitint:scala.math.Integral[T]):cc.sven.interval.Arith[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/interval\/Interval$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/interval\/Interval$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/interval\/Interval$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/interval\/Interval$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/interval\/Interval$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/interval\/Interval$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/interval\/Interval$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/Interval$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/Interval$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/Interval$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/interval\/Interval$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/interval\/Interval$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/interval\/Interval$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/interval\/Interval$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/interval\/Interval$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/interval\/Interval$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/interval\/Interval$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/interval\/Interval$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/interval\/Interval$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cc\/sven\/interval\/Interval.html", "kind" : "trait"}, {"name" : "cc.sven.interval.StridedInterval", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cc\/sven\/interval\/StridedInterval.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cc\/sven\/interval\/StridedInterval.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cc\/sven\/interval\/StridedInterval.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cc\/sven\/interval\/StridedInterval.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cc\/sven\/interval\/StridedInterval.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cc\/sven\/interval\/StridedInterval.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cc\/sven\/interval\/StridedInterval.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/StridedInterval.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/StridedInterval.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cc\/sven\/interval\/StridedInterval.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cc\/sven\/interval\/StridedInterval.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cc\/sven\/interval\/StridedInterval.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cc\/sven\/interval\/StridedInterval.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cc\/sven\/interval\/StridedInterval.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cc\/sven\/interval\/StridedInterval.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cc\/sven\/interval\/StridedInterval.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cc\/sven\/interval\/StridedInterval.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cc\/sven\/interval\/StridedInterval.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cc\/sven\/interval\/StridedInterval.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "cc\/sven\/interval\/StridedInterval.html", "kind" : "trait"}]};